{"version":3,"file":"index.js","sources":["../node_modules/.pnpm/@radix-ui+react-compose-refs@1.1.2_@types+react@18.3.23_react@18.3.1/node_modules/@radix-ui/react-compose-refs/dist/index.mjs","../node_modules/.pnpm/@radix-ui+react-slot@1.2.3_@types+react@18.3.23_react@18.3.1/node_modules/@radix-ui/react-slot/dist/index.mjs","../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs","../node_modules/.pnpm/class-variance-authority@0.7.1/node_modules/class-variance-authority/dist/index.mjs","../node_modules/.pnpm/@shopify+polaris-icons@9.3.1_react@18.3.1/node_modules/@shopify/polaris-icons/dist/icons/CheckIcon.svg.mjs","../node_modules/.pnpm/@shopify+polaris-icons@9.3.1_react@18.3.1/node_modules/@shopify/polaris-icons/dist/icons/ChevronDownIcon.svg.mjs","../node_modules/.pnpm/@shopify+polaris-icons@9.3.1_react@18.3.1/node_modules/@shopify/polaris-icons/dist/icons/ChevronUpIcon.svg.mjs","../node_modules/.pnpm/@shopify+polaris-icons@9.3.1_react@18.3.1/node_modules/@shopify/polaris-icons/dist/icons/RefreshIcon.svg.mjs","../node_modules/.pnpm/@shopify+polaris-icons@9.3.1_react@18.3.1/node_modules/@shopify/polaris-icons/dist/icons/XCircleIcon.svg.mjs","../node_modules/.pnpm/tailwind-merge@2.6.0/node_modules/tailwind-merge/dist/bundle-mjs.mjs","../src/lib/utils.ts","../src/components/Button/button.tsx","../src/components/ButtonGroup/buttonGroup.tsx","../src/components/Box/box.tsx","../src/components/Text/Text.tsx","../src/components/TextField/TextField.tsx"],"sourcesContent":["// packages/react/compose-refs/src/compose-refs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","import React from 'react';\n\nvar SvgCheckIcon = function SvgCheckIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 20 20\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M15.78 5.97a.75.75 0 0 1 0 1.06l-6.5 6.5a.75.75 0 0 1-1.06 0l-3.25-3.25a.75.75 0 1 1 1.06-1.06l2.72 2.72 5.97-5.97a.75.75 0 0 1 1.06 0Z\"\n  }));\n};\nSvgCheckIcon.displayName = \"CheckIcon\";\n\nexport { SvgCheckIcon as S };\n","import React from 'react';\n\nvar SvgChevronDownIcon = function SvgChevronDownIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 20 20\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5.72 8.47a.75.75 0 0 1 1.06 0l3.47 3.47 3.47-3.47a.75.75 0 1 1 1.06 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06Z\"\n  }));\n};\nSvgChevronDownIcon.displayName = \"ChevronDownIcon\";\n\nexport { SvgChevronDownIcon as S };\n","import React from 'react';\n\nvar SvgChevronUpIcon = function SvgChevronUpIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 20 20\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M14.53 12.28a.75.75 0 0 1-1.06 0l-3.47-3.47-3.47 3.47a.75.75 0 0 1-1.06-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06Z\"\n  }));\n};\nSvgChevronUpIcon.displayName = \"ChevronUpIcon\";\n\nexport { SvgChevronUpIcon as S };\n","import React from 'react';\n\nvar SvgRefreshIcon = function SvgRefreshIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 20 20\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.5 9.25a.75.75 0 0 0 1.5 0 3 3 0 0 1 3-3h6.566l-1.123 1.248a.75.75 0 1 0 1.114 1.004l2.25-2.5a.75.75 0 0 0-.027-1.032l-2.25-2.25a.75.75 0 1 0-1.06 1.06l.97.97h-6.44a4.5 4.5 0 0 0-4.5 4.5Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5 10.75a.75.75 0 0 0-1.5 0 3 3 0 0 1-3 3h-6.566l1.123-1.248a.75.75 0 1 0-1.114-1.004l-2.25 2.5a.75.75 0 0 0 .027 1.032l2.25 2.25a.75.75 0 0 0 1.06-1.06l-.97-.97h6.44a4.5 4.5 0 0 0 4.5-4.5Z\"\n  }));\n};\nSvgRefreshIcon.displayName = \"RefreshIcon\";\n\nexport { SvgRefreshIcon as S };\n","import React from 'react';\n\nvar SvgXCircleIcon = function SvgXCircleIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 20 20\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.03 6.97a.75.75 0 0 1 0 1.06l-1.97 1.97 1.97 1.97a.75.75 0 1 1-1.06 1.06l-1.97-1.97-1.97 1.97a.75.75 0 0 1-1.06-1.06l1.97-1.97-1.97-1.97a.75.75 0 0 1 1.06-1.06l1.97 1.97 1.97-1.97a.75.75 0 0 1 1.06 0Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10 17a7 7 0 1 0 0-14 7 7 0 0 0 0 14Zm0-1.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11Z\"\n  }));\n};\nSvgXCircleIcon.displayName = \"XCircleIcon\";\n\nexport { SvgXCircleIcon as S };\n","const CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\n * Exported for testing only\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    prefix\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\nconst getPrefixedClassGroupEntries = (classGroupEntries, prefix) => {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\n    const prefixedClassGroup = classGroup.map(classDefinition => {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n};\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst createParseClassName = config => {\n  const {\n    separator,\n    experimentalParseClassName\n  } = config;\n  const isSeparatorSingleCharacter = separator.length === 1;\n  const firstSeparatorCharacter = separator[0];\n  const separatorLength = separator.length;\n  // parseClassName inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  const parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (experimentalParseClassName) {\n    return className => experimentalParseClassName({\n      className,\n      parseClassName\n    });\n  }\n  return parseClassName;\n};\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nconst sortModifiers = modifiers => {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  const sortedModifiers = [];\n  let unsortedModifiers = [];\n  modifiers.forEach(modifier => {\n    const isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push(...unsortedModifiers.sort());\n  return sortedModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isLength = value => isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, 'length', isLengthOnly);\nconst isNumber = value => Boolean(value) && !Number.isNaN(Number(value));\nconst isArbitraryNumber = value => getIsArbitraryValue(value, 'number', isNumber);\nconst isInteger = value => Boolean(value) && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\nconst isArbitrarySize = value => getIsArbitraryValue(value, sizeLabels, isNever);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, 'position', isNever);\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\nconst isArbitraryImage = value => getIsArbitraryValue(value, imageLabels, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, '', isShadow);\nconst isAny = () => true;\nconst getIsArbitraryValue = (value, label, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isInteger,\n  isLength,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  const colors = fromTheme('colors');\n  const spacing = fromTheme('spacing');\n  const blur = fromTheme('blur');\n  const brightness = fromTheme('brightness');\n  const borderColor = fromTheme('borderColor');\n  const borderRadius = fromTheme('borderRadius');\n  const borderSpacing = fromTheme('borderSpacing');\n  const borderWidth = fromTheme('borderWidth');\n  const contrast = fromTheme('contrast');\n  const grayscale = fromTheme('grayscale');\n  const hueRotate = fromTheme('hueRotate');\n  const invert = fromTheme('invert');\n  const gap = fromTheme('gap');\n  const gradientColorStops = fromTheme('gradientColorStops');\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  const inset = fromTheme('inset');\n  const margin = fromTheme('margin');\n  const opacity = fromTheme('opacity');\n  const padding = fromTheme('padding');\n  const saturate = fromTheme('saturate');\n  const scale = fromTheme('scale');\n  const sepia = fromTheme('sepia');\n  const skew = fromTheme('skew');\n  const space = fromTheme('space');\n  const translate = fromTheme('translate');\n  const getOverscroll = () => ['auto', 'contain', 'none'];\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\n  return {\n    cacheSize: 500,\n    separator: ':',\n    theme: {\n      colors: [isAny],\n      spacing: [isLength, isArbitraryLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumberAndArbitrary(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmptyAndArbitrary(),\n      contrast: getNumberAndArbitrary(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumberAndArbitrary(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumberAndArbitrary(),\n      scale: getNumberAndArbitrary(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: [...getPositions(), isArbitraryValue]\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: [inset]\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: [inset]\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: ['auto', isInteger, isArbitraryValue]\n      }],\n      // Flexbox and Grid\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: ['normal', ...getAlign()]\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...getAlign(), 'baseline']\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': [...getAlign(), 'baseline']\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: [padding]\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: [padding]\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: [margin]\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: [margin]\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/size\n       */\n      size: [{\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\n       * Placeholder Opacity\n       * @see https://tailwindcss.com/docs/placeholder-opacity\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\n       * Text Opacity\n       * @see https://tailwindcss.com/docs/text-opacity\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...getLineStyles(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength, isArbitraryValue]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Opacity\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/background-opacity\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: [...getPositions(), isArbitraryPosition]\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\n       * Border Opacity\n       * @see https://tailwindcss.com/docs/border-opacity\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...getLineStyles(), 'hidden']\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Divide Opacity\n       * @see https://tailwindcss.com/docs/divide-opacity\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/divide-style\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-s': [{\n        'border-s': [borderColor]\n      }],\n      /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-e': [{\n        'border-e': [borderColor]\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: ['', ...getLineStyles()]\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: [isLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w': [{\n        ring: getLengthWithEmptyAndArbitrary()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/ring-color\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\n       * Ring Opacity\n       * @see https://tailwindcss.com/docs/ring-opacity\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://tailwindcss.com/docs/ring-offset-width\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://tailwindcss.com/docs/ring-offset-color\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow-color\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...getBlendModes(), 'plus-lighter', 'plus-darker']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\n       * Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\n       * Backdrop Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n      /**\n       * Tranisition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\n       * Screen Readers\n       * @see https://tailwindcss.com/docs/screen-readers\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n};\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  separator,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'separator', separator);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  for (const configKey in override) {\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\n  }\n  for (const key in extend) {\n    mergeConfigProperties(baseConfig[key], extend[key]);\n  }\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      const mergeValue = mergeObject[key];\n      if (mergeValue !== undefined) {\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\n      }\n    }\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };\n//# sourceMappingURL=bundle-mjs.mjs.map\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","/**\n * Enhanced Button component that combines Polaris API compatibility with shadcn/ui functionality\n *\n * This component provides 100% API compatibility with Shopify's Polaris Button component\n * while being built on shadcn/ui foundation with Tailwind CSS for maximum flexibility.\n */\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva } from \"class-variance-authority\";\nimport {\n  ChevronDownIcon,\n  ChevronUpIcon,\n  RefreshIcon,\n  CheckIcon,\n} from \"@shopify/polaris-icons\";\nimport { type ReactNode } from \"react\";\n\nimport { cn } from \"../../lib/utils\";\n\n// Type definitions moved from separate file following shadcn/ui pattern\nexport type ButtonSize = \"medium\" | \"large\" | \"micro\" | \"slim\";\nexport type ButtonTextAlign = \"start\" | \"center\" | \"end\" | \"left\" | \"right\";\nexport type ButtonTone = \"success\" | \"critical\";\nexport type ButtonVariant =\n  | \"default\"\n  | \"plain\"\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"monochromePlain\";\nexport type ButtonDisclosure = boolean | \"up\" | \"down\" | \"select\";\nexport type ButtonTarget = \"_blank\" | \"_self\" | \"_parent\" | \"_top\";\n\nexport interface PolarisButtonProps {\n  /** The content to display inside the button */\n  children?: string | string[] | ReactNode;\n\n  /** Changes the size of the button, giving it more or less padding */\n  size?: ButtonSize;\n\n  /** Changes the inner text alignment of the button */\n  textAlign?: ButtonTextAlign;\n\n  /** Allows the button to grow to the width of its container */\n  fullWidth?: boolean;\n\n  /** Displays the button with a disclosure icon. Defaults to `down` when set to true */\n  disclosure?: ButtonDisclosure;\n\n  /** Removes underline from button text (including on interaction) */\n  removeUnderline?: boolean;\n\n  /** Icon to display to the left of the button content */\n  icon?: ReactNode;\n\n  /** Indicates whether or not the button is the primary navigation link when rendered inside of an `IndexTable.Row` */\n  dataPrimaryLink?: boolean;\n\n  /** Sets the color treatment of the Button */\n  tone?: ButtonTone;\n\n  /** Changes the visual appearance of the Button */\n  variant?: ButtonVariant;\n\n  /** A unique identifier for the button */\n  id?: string;\n\n  /** A destination to link to, rendered in the href attribute of a link */\n  url?: string;\n\n  /** Forces url to open in a new tab */\n  external?: boolean;\n\n  /** Where to display the url */\n  target?: ButtonTarget;\n\n  /** Tells the browser to download the url instead of opening it */\n  download?: string | boolean;\n\n  /** Allows the button to submit a form */\n  submit?: boolean;\n\n  /** Disables the button, disallowing merchant interaction */\n  disabled?: boolean;\n\n  /** Replaces button text with a spinner while a background action is being performed */\n  loading?: boolean;\n\n  /** Sets the button in a pressed state */\n  pressed?: boolean;\n\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n\n  /** A valid WAI-ARIA role to define the semantic value of this element */\n  role?: string;\n\n  /** Id of the element the button controls */\n  ariaControls?: string;\n\n  /** Tells screen reader the controlled element is expanded */\n  ariaExpanded?: boolean;\n\n  /** Indicates the ID of the element that describes the button */\n  ariaDescribedBy?: string;\n\n  /** Indicates the current checked state of the button when acting as a toggle or switch */\n  ariaChecked?: \"false\" | \"true\";\n\n  /** Callback when clicked */\n  onClick?: () => unknown;\n\n  /** Callback when button becomes focused */\n  onFocus?: () => void;\n\n  /** Callback when focus leaves button */\n  onBlur?: () => void;\n\n  /** Callback when a keypress event is registered on the button */\n  onKeyPress?: (\n    event: React.KeyboardEvent<HTMLButtonElement | HTMLAnchorElement>\n  ) => void;\n\n  /** Callback when a keyup event is registered on the button */\n  onKeyUp?: (\n    event: React.KeyboardEvent<HTMLButtonElement | HTMLAnchorElement>\n  ) => void;\n\n  /** Callback when a keydown event is registered on the button */\n  onKeyDown?: (\n    event: React.KeyboardEvent<HTMLButtonElement | HTMLAnchorElement>\n  ) => void;\n\n  /** Callback when mouse enter */\n  onMouseEnter?: () => void;\n\n  /** Callback when element is touched */\n  onTouchStart?: () => void;\n\n  /** Callback when pointerdown event is being triggered */\n  onPointerDown?: (\n    event: React.PointerEvent<HTMLButtonElement | HTMLAnchorElement>\n  ) => void;\n\n  /** Additional CSS class name (inherited from shadcn/ui Button) */\n  className?: string;\n}\n\n// Enhanced Button interface that extends Polaris with shadcn/ui features\nexport interface EnhancedButtonProps extends PolarisButtonProps {\n  /** Use the Slot component for composition (shadcn/ui feature) */\n  asChild?: boolean;\n}\n\n// Re-export types for convenience (maintaining backward compatibility)\nexport type PolarisButtonSize = ButtonSize;\nexport type PolarisButtonTextAlign = ButtonTextAlign;\nexport type PolarisButtonTone = ButtonTone;\nexport type PolarisButtonVariant = ButtonVariant;\nexport type PolarisButtonDisclosure = ButtonDisclosure;\nexport type PolarisButtonTarget = ButtonTarget;\n\n// Create Polaris-specific button variants using CVA\nconst polarisButtonVariants = cva(\n  \"cursor-pointer inline-flex items-center justify-center whitespace-nowrap transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:ring-2 focus-visible:ring-offset-2 relative m-0 border-0 font-sans !text-[13px] font-medium !leading-[20.15px] !rounded-lg\",\n  {\n    variants: {\n      variant: {\n        // Polaris default variant - white background with specific shadow styling\n        default:\n          \"bg-white text-gray-700 hover:bg-[#f6f6f6] shadow-[inset_0px_0.5px_0px_#c6c6c6,_0px_1px_1px_#c6c6c6,_inset_0.5px_0px_0px_#c6c6c6,_inset_-0.5px_0px_0px_#c6c6c6] hover:shadow-[inset_0px_0.5px_0px_#c6c6c6,_0px_1px_0px_#c6c6c6,_inset_0.5px_0px_0px_#c6c6c6,_inset_-0.5px_0px_0px_#c6c6c6] focus-visible:ring-gray-500/20\",\n        // Polaris primary variant - dark background with white text\n        primary:\n          \"bg-gray-900 text-white hover:bg-gray-800 focus-visible:ring-gray-900/20\",\n        // Polaris secondary variant - light background with dark text\n        secondary:\n          \"bg-gray-100 text-gray-900 hover:bg-gray-200 focus-visible:ring-gray-500/20\",\n        // Polaris tertiary variant - outlined button\n        tertiary:\n          \"!border !border-gray-300 bg-white text-gray-900 hover:bg-gray-50 focus-visible:ring-gray-500/20\",\n        // Polaris plain variant - link-like appearance with blue text and underline on hover\n        plain:\n          \"text-blue-600 hover:text-blue-700 hover:underline focus-visible:ring-blue-600/20 bg-transparent !shadow-none\",\n        // Polaris monochrome plain variant - muted appearance\n        monochromePlain:\n          \"text-gray-600 hover:text-gray-700 hover:underline focus-visible:ring-gray-500/20 bg-transparent !shadow-none\",\n      },\n      size: {\n        // Polaris size variants with proper dimensions\n        micro: \"!h-5 !px-2 !py-0.5 gap-1 text-xs\",\n        slim: \"!h-6 !px-2.5 !py-1 gap-1.5\",\n        medium: \"!h-6 !px-4 !py-2 gap-2\",\n        large: \"!h-7 !px-5 !py-2.5 gap-2.5 text-sm\",\n      },\n      tone: {\n        default: \"\",\n        success:\n          \"bg-green-700 text-white hover:bg-green-800 focus-visible:ring-green-700/20\",\n        critical:\n          \"bg-red-600 text-white hover:bg-red-700 focus-visible:ring-red-600/20\",\n      },\n      textAlign: {\n        start: \"justify-start text-left\",\n        center: \"justify-center text-center\",\n        end: \"justify-end text-right\",\n        left: \"justify-start text-left\",\n        right: \"justify-end text-right\",\n      },\n      fullWidth: {\n        true: \"w-full\",\n        false: \"\",\n      },\n      pressed: {\n        true: \"bg-accent text-accent-foreground\",\n        false: \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"medium\",\n      tone: \"default\",\n      textAlign: \"center\",\n      fullWidth: false,\n      pressed: false,\n    },\n  }\n);\n\n// Get disclosure icon based on disclosure prop\nconst getDisclosureIcon = (disclosure: PolarisButtonDisclosure | undefined) => {\n  if (!disclosure) return null;\n\n  if (disclosure === true || disclosure === \"down\") {\n    return <ChevronDownIcon className=\"size-4\" />;\n  }\n  if (disclosure === \"up\") {\n    return <ChevronUpIcon className=\"size-4\" />;\n  }\n  if (disclosure === \"select\") {\n    return <CheckIcon className=\"size-4\" />;\n  }\n  return null;\n};\n\n// Spinner component for loading state\nconst Spinner = () => <RefreshIcon className=\"size-4 animate-spin\" />;\n\nexport const Button = React.forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  EnhancedButtonProps\n>(\n  (\n    {\n      children,\n      size = \"medium\",\n      textAlign = \"center\",\n      fullWidth = false,\n      disclosure,\n      removeUnderline,\n      icon,\n      dataPrimaryLink,\n      tone = \"default\",\n      variant = \"default\",\n      id,\n      url,\n      external,\n      target,\n      download,\n      submit,\n      disabled,\n      loading,\n      pressed = false,\n      accessibilityLabel,\n      role,\n      ariaControls,\n      ariaExpanded,\n      ariaDescribedBy,\n      ariaChecked,\n      onClick,\n      onFocus,\n      onBlur,\n      onKeyPress,\n      onKeyUp,\n      onKeyDown,\n      onMouseEnter,\n      onTouchStart,\n      onPointerDown,\n      className,\n      asChild = false,\n      ...props\n    },\n    ref\n  ) => {\n    // Determine component type: Slot for composition, anchor for links, or button\n    const isLink = Boolean(url);\n    const Component = asChild ? Slot : isLink ? \"a\" : \"button\";\n\n    // Handle loading state\n    const isLoading = loading;\n    const isDisabled = disabled || isLoading;\n\n    // Get disclosure icon\n    const disclosureIcon = getDisclosureIcon(disclosure);\n\n    // Build className using our Polaris variants\n    const buttonClassName = cn(\n      polarisButtonVariants({\n        variant,\n        size,\n        tone:\n          tone === \"critical\"\n            ? \"critical\"\n            : tone === \"success\"\n            ? \"success\"\n            : \"default\",\n        textAlign,\n        fullWidth,\n        pressed,\n      }),\n      // Handle underline removal for plain variants\n      removeUnderline &&\n        (variant === \"plain\" || variant === \"monochromePlain\") &&\n        \"no-underline hover:no-underline\",\n      className\n    );\n\n    // Common props for both button and anchor\n    const commonProps = {\n      id,\n      className: buttonClassName,\n      disabled: isDisabled,\n      \"aria-label\": accessibilityLabel,\n      \"aria-controls\": ariaControls,\n      \"aria-expanded\": ariaExpanded,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-checked\": ariaChecked,\n      \"aria-pressed\": pressed,\n      \"data-primary-link\": dataPrimaryLink,\n      role,\n      onClick: isDisabled ? undefined : onClick,\n      onFocus,\n      onBlur,\n      onKeyPress,\n      onKeyUp,\n      onKeyDown,\n      onMouseEnter,\n      onTouchStart,\n      onPointerDown,\n      ref: ref as any,\n      ...props,\n    };\n\n    if (isLink) {\n      return (\n        <Component\n          {...commonProps}\n          href={url}\n          target={external ? \"_blank\" : target}\n          rel={external ? \"noopener noreferrer\" : undefined}\n          download={download}\n        >\n          {icon && !isLoading && (\n            <span className=\"inline-flex shrink-0\">{icon}</span>\n          )}\n          {isLoading && <Spinner />}\n          {children && <span className=\"inline-flex\">{children}</span>}\n          {disclosureIcon && !isLoading && (\n            <span className=\"inline-flex shrink-0\">{disclosureIcon}</span>\n          )}\n        </Component>\n      );\n    }\n\n    return (\n      <Component {...commonProps} type={submit ? \"submit\" : \"button\"}>\n        {icon && !isLoading && (\n          <span className=\"inline-flex shrink-0\">{icon}</span>\n        )}\n        {isLoading && <Spinner />}\n        {children && <span className=\"inline-flex\">{children}</span>}\n        {disclosureIcon && !isLoading && (\n          <span className=\"inline-flex shrink-0\">{disclosureIcon}</span>\n        )}\n      </Component>\n    );\n  }\n);\n\nButton.displayName = \"Button\";\n\n// Export variants for convenience\nexport { polarisButtonVariants };\nexport { polarisButtonVariants as buttonVariants };\n","/**\n * ButtonGroup component that matches Shopify's Polaris ButtonGroup design and API\n *\n * This component provides 100% API compatibility with Shopify's Polaris ButtonGroup component\n * while being built on shadcn/ui foundation with Tailwind CSS for maximum flexibility.\n */\n\nimport * as React from \"react\";\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"../../lib/utils\";\n\n// Type definitions following shadcn/ui pattern\nexport type ButtonGroupGap = \"extraTight\" | \"tight\" | \"loose\";\nexport type ButtonGroupVariant = \"segmented\";\n\nexport interface PolarisButtonGroupProps {\n  /** Determines the space between button group items */\n  gap?: ButtonGroupGap;\n\n  /** Styling variant for group */\n  variant?: ButtonGroupVariant;\n\n  /** Buttons will stretch/shrink to occupy the full width */\n  fullWidth?: boolean;\n\n  /** Remove top left and right border radius */\n  connectedTop?: boolean;\n\n  /** Prevent buttons in button group from wrapping to next line */\n  noWrap?: boolean;\n\n  /** Button components */\n  children?: React.ReactNode;\n\n  /** Additional CSS class name (inherited from shadcn/ui pattern) */\n  className?: string;\n}\n\n// Enhanced ButtonGroup interface that extends Polaris with shadcn/ui features\nexport interface EnhancedButtonGroupProps extends PolarisButtonGroupProps {}\n\n// Re-export types for convenience (maintaining backward compatibility)\nexport type PolarisButtonGroupGap = ButtonGroupGap;\nexport type PolarisButtonGroupVariant = ButtonGroupVariant;\n\n// Create Polaris-specific button group variants using CVA\nconst polarisButtonGroupVariants = cva(\"flex items-center\", {\n  variants: {\n    gap: {\n      extraTight: \"gap-0.5\",\n      tight: \"gap-2\",\n      loose: \"gap-4\",\n    },\n    variant: {\n      segmented:\n        \"[&>button]:ml-[-10px] [&>button]:[background-color:#ffffff] [&>button:hover]:[background-color:#f6f6f6] [&>button]:!rounded-none [&>button:first-child]:!rounded-tl-md [&>button:first-child]:!rounded-bl-md [&>button:last-child]:!rounded-tr-md [&>button:last-child]:!rounded-br-md\",\n    },\n    fullWidth: {\n      true: \"w-full [&>*]:flex-1\",\n      false: \"\",\n    },\n    connectedTop: {\n      true: \"[&>*]:rounded-t-none\",\n      false: \"\",\n    },\n    noWrap: {\n      true: \"flex-nowrap\",\n      false: \"flex-wrap\",\n    },\n  },\n  defaultVariants: {\n    gap: \"tight\",\n    fullWidth: false,\n    connectedTop: false,\n    noWrap: false,\n  },\n});\n\nexport const ButtonGroup = React.forwardRef<\n  HTMLDivElement,\n  EnhancedButtonGroupProps\n>(\n  (\n    {\n      children,\n      gap = \"tight\",\n      variant,\n      fullWidth = false,\n      connectedTop = false,\n      noWrap = false,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    // Build className using our Polaris variants\n    // For segmented variant, we override gap to ensure no spacing between buttons\n    const buttonGroupClassName = cn(\n      polarisButtonGroupVariants({\n        gap: variant === \"segmented\" ? undefined : gap,\n        variant,\n        fullWidth,\n        connectedTop,\n        noWrap,\n      }),\n      className\n    );\n\n    return (\n      <div className={buttonGroupClassName} ref={ref} {...props}>\n        {children}\n      </div>\n    );\n  }\n);\n\nButtonGroup.displayName = \"ButtonGroup\";\n\n// Export variants for convenience\nexport { polarisButtonGroupVariants };\nexport { polarisButtonGroupVariants as buttonGroupVariants };\n","/**\n * Box component that matches Shopify's Polaris Box design and API\n *\n * This component provides 100% API compatibility with Shopify's Polaris Box component\n * while being built on shadcn/ui foundation with Tailwind CSS for maximum flexibility.\n */\n\nimport * as React from \"react\";\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"../../lib/utils\";\n\n// Type definitions following Polaris design tokens\n\n// Color background aliases based on Polaris tokens\nexport type ColorBackgroundAlias =\n  | \"bg\"\n  | \"bg-inverse\"\n  | \"bg-surface\"\n  | \"bg-surface-hover\"\n  | \"bg-surface-active\"\n  | \"bg-surface-selected\"\n  | \"bg-surface-disabled\"\n  | \"bg-surface-secondary\"\n  | \"bg-surface-secondary-hover\"\n  | \"bg-surface-secondary-active\"\n  | \"bg-surface-secondary-selected\"\n  | \"bg-surface-tertiary\"\n  | \"bg-surface-tertiary-hover\"\n  | \"bg-surface-tertiary-active\"\n  | \"bg-surface-brand\"\n  | \"bg-surface-brand-hover\"\n  | \"bg-surface-brand-active\"\n  | \"bg-surface-brand-selected\"\n  | \"bg-surface-info\"\n  | \"bg-surface-info-hover\"\n  | \"bg-surface-info-active\"\n  | \"bg-surface-success\"\n  | \"bg-surface-success-hover\"\n  | \"bg-surface-success-active\"\n  | \"bg-surface-caution\"\n  | \"bg-surface-caution-hover\"\n  | \"bg-surface-caution-active\"\n  | \"bg-surface-warning\"\n  | \"bg-surface-warning-hover\"\n  | \"bg-surface-warning-active\"\n  | \"bg-surface-critical\"\n  | \"bg-surface-critical-hover\"\n  | \"bg-surface-critical-active\"\n  | \"bg-surface-emphasis\"\n  | \"bg-surface-emphasis-hover\"\n  | \"bg-surface-emphasis-active\"\n  | \"bg-surface-magic\"\n  | \"bg-surface-magic-hover\"\n  | \"bg-surface-magic-active\"\n  | \"bg-surface-inverse\"\n  | \"bg-surface-transparent\"\n  | \"bg-fill\"\n  | \"bg-fill-hover\"\n  | \"bg-fill-active\"\n  | \"bg-fill-selected\"\n  | \"bg-fill-disabled\"\n  | \"bg-fill-secondary\"\n  | \"bg-fill-secondary-hover\"\n  | \"bg-fill-secondary-active\"\n  | \"bg-fill-secondary-selected\"\n  | \"bg-fill-tertiary\"\n  | \"bg-fill-tertiary-hover\"\n  | \"bg-fill-tertiary-active\"\n  | \"bg-fill-brand\"\n  | \"bg-fill-brand-hover\"\n  | \"bg-fill-brand-active\"\n  | \"bg-fill-brand-selected\"\n  | \"bg-fill-brand-disabled\"\n  | \"bg-fill-info\"\n  | \"bg-fill-info-hover\"\n  | \"bg-fill-info-active\"\n  | \"bg-fill-info-secondary\"\n  | \"bg-fill-success\"\n  | \"bg-fill-success-hover\"\n  | \"bg-fill-success-active\"\n  | \"bg-fill-success-secondary\"\n  | \"bg-fill-warning\"\n  | \"bg-fill-warning-hover\"\n  | \"bg-fill-warning-active\"\n  | \"bg-fill-warning-secondary\"\n  | \"bg-fill-caution\"\n  | \"bg-fill-caution-hover\"\n  | \"bg-fill-caution-active\"\n  | \"bg-fill-caution-secondary\"\n  | \"bg-fill-critical\"\n  | \"bg-fill-critical-hover\"\n  | \"bg-fill-critical-active\"\n  | \"bg-fill-critical-selected\"\n  | \"bg-fill-critical-secondary\"\n  | \"bg-fill-emphasis\"\n  | \"bg-fill-emphasis-hover\"\n  | \"bg-fill-emphasis-active\"\n  | \"bg-fill-magic\"\n  | \"bg-fill-magic-secondary\"\n  | \"bg-fill-magic-secondary-hover\"\n  | \"bg-fill-magic-secondary-active\"\n  | \"bg-fill-inverse\"\n  | \"bg-fill-inverse-hover\"\n  | \"bg-fill-inverse-active\"\n  | \"bg-fill-transparent\"\n  | \"bg-fill-transparent-hover\"\n  | \"bg-fill-transparent-active\"\n  | \"bg-fill-transparent-selected\"\n  | \"bg-fill-transparent-secondary\"\n  | \"bg-fill-transparent-secondary-hover\"\n  | \"bg-fill-transparent-secondary-active\";\n\n// Color border aliases based on Polaris tokens\nexport type ColorBorderAlias =\n  | \"border\"\n  | \"border-hover\"\n  | \"border-disabled\"\n  | \"border-secondary\"\n  | \"border-tertiary\"\n  | \"border-focus\"\n  | \"border-brand\"\n  | \"border-info\"\n  | \"border-success\"\n  | \"border-caution\"\n  | \"border-warning\"\n  | \"border-critical\"\n  | \"border-critical-secondary\"\n  | \"border-emphasis\"\n  | \"border-emphasis-hover\"\n  | \"border-emphasis-active\"\n  | \"border-magic\"\n  | \"border-magic-secondary\"\n  | \"border-magic-secondary-hover\"\n  | \"border-inverse\"\n  | \"border-inverse-hover\"\n  | \"border-inverse-active\";\n\n// Color text aliases based on Polaris tokens\nexport type ColorTextAlias =\n  | \"text\"\n  | \"text-secondary\"\n  | \"text-disabled\"\n  | \"text-link\"\n  | \"text-link-hover\"\n  | \"text-link-active\"\n  | \"text-brand\"\n  | \"text-brand-hover\"\n  | \"text-brand-on-bg-fill\"\n  | \"text-brand-on-bg-fill-hover\"\n  | \"text-brand-on-bg-fill-active\"\n  | \"text-brand-on-bg-fill-disabled\"\n  | \"text-info\"\n  | \"text-info-hover\"\n  | \"text-info-active\"\n  | \"text-info-secondary\"\n  | \"text-info-on-bg-fill\"\n  | \"text-success\"\n  | \"text-success-hover\"\n  | \"text-success-active\"\n  | \"text-success-secondary\"\n  | \"text-success-on-bg-fill\"\n  | \"text-caution\"\n  | \"text-caution-hover\"\n  | \"text-caution-active\"\n  | \"text-caution-secondary\"\n  | \"text-caution-on-bg-fill\"\n  | \"text-warning\"\n  | \"text-warning-hover\"\n  | \"text-warning-active\"\n  | \"text-warning-secondary\"\n  | \"text-warning-on-bg-fill\"\n  | \"text-critical\"\n  | \"text-critical-hover\"\n  | \"text-critical-active\"\n  | \"text-critical-secondary\"\n  | \"text-critical-on-bg-fill\"\n  | \"text-emphasis\"\n  | \"text-emphasis-hover\"\n  | \"text-emphasis-active\"\n  | \"text-emphasis-on-bg-fill\"\n  | \"text-emphasis-on-bg-fill-hover\"\n  | \"text-emphasis-on-bg-fill-active\"\n  | \"text-magic\"\n  | \"text-magic-secondary\"\n  | \"text-magic-on-bg-fill\"\n  | \"text-inverse\"\n  | \"text-inverse-secondary\"\n  | \"text-link-inverse\";\n\n// Space scale based on Polaris tokens\nexport type SpaceScale =\n  | \"0\"\n  | \"025\"\n  | \"050\"\n  | \"100\"\n  | \"150\"\n  | \"200\"\n  | \"300\"\n  | \"400\"\n  | \"500\"\n  | \"600\"\n  | \"800\"\n  | \"1000\"\n  | \"1200\"\n  | \"1600\"\n  | \"2000\"\n  | \"2400\"\n  | \"2800\"\n  | \"3200\";\n\n// Border radius aliases and scale based on Polaris tokens\nexport type BorderRadiusAliasOrScale =\n  | \"0\"\n  | \"050\"\n  | \"100\"\n  | \"150\"\n  | \"200\"\n  | \"300\"\n  | \"400\"\n  | \"500\"\n  | \"750\"\n  | \"full\";\n\n// Border width scale based on Polaris tokens\nexport type BorderWidthScale = \"0\" | \"0165\" | \"025\" | \"050\" | \"100\";\n\n// Shadow aliases and scale based on Polaris tokens\nexport type ShadowAliasOrScale =\n  | \"0\"\n  | \"100\"\n  | \"200\"\n  | \"300\"\n  | \"400\"\n  | \"500\"\n  | \"600\"\n  | \"bevel-100\"\n  | \"inset-100\"\n  | \"inset-200\"\n  | \"button\"\n  | \"button-hover\"\n  | \"button-inset\"\n  | \"button-primary\"\n  | \"button-primary-hover\"\n  | \"button-primary-inset\"\n  | \"button-primary-critical\"\n  | \"button-primary-critical-hover\"\n  | \"button-primary-critical-inset\"\n  | \"button-primary-success\"\n  | \"button-primary-success-hover\"\n  | \"button-primary-success-inset\"\n  | \"border-inset\";\n\n// Breakpoints aliases based on Polaris tokens\nexport type BreakpointsAlias = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\n\n// Responsive type for spacing and other responsive props\nexport type ResponsiveSpacing =\n  | SpaceScale\n  | { [Breakpoint in BreakpointsAlias]?: SpaceScale };\n\n// Polaris Box Props interface - matches Shopify Polaris Box component exactly\nexport interface PolarisBoxProps {\n  /** Content to display inside the box */\n  children?: React.ReactNode;\n\n  /** HTML Element type */\n  as?: \"div\" | \"span\" | \"section\" | \"legend\" | \"ul\" | \"li\";\n\n  /** Background color */\n  background?: ColorBackgroundAlias;\n\n  /** Border color */\n  borderColor?: ColorBorderAlias | \"transparent\";\n\n  /** Border style */\n  borderStyle?: \"solid\" | \"dashed\";\n\n  /** Border radius */\n  borderRadius?: BorderRadiusAliasOrScale;\n\n  /** Vertical end horizontal start border radius */\n  borderEndStartRadius?: BorderRadiusAliasOrScale;\n\n  /** Vertical end horizontal end border radius */\n  borderEndEndRadius?: BorderRadiusAliasOrScale;\n\n  /** Vertical start horizontal start border radius */\n  borderStartStartRadius?: BorderRadiusAliasOrScale;\n\n  /** Vertical start horizontal end border radius */\n  borderStartEndRadius?: BorderRadiusAliasOrScale;\n\n  /** Border width */\n  borderWidth?: BorderWidthScale;\n\n  /** Vertical start border width */\n  borderBlockStartWidth?: BorderWidthScale;\n\n  /** Vertical end border width */\n  borderBlockEndWidth?: BorderWidthScale;\n\n  /** Horizontal start border width */\n  borderInlineStartWidth?: BorderWidthScale;\n\n  /** Horizontal end border width */\n  borderInlineEndWidth?: BorderWidthScale;\n\n  /** Color of children */\n  color?: ColorTextAlias;\n\n  /** HTML id attribute */\n  id?: string;\n\n  /** Minimum height of container */\n  minHeight?: string;\n\n  /** Minimum width of container */\n  minWidth?: string;\n\n  /** Maximum width of container */\n  maxWidth?: string;\n\n  /** Clip horizontal content of children */\n  overflowX?: \"hidden\" | \"scroll\" | \"clip\";\n\n  /** Clip vertical content of children */\n  overflowY?: \"hidden\" | \"scroll\" | \"clip\";\n\n  /** Spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  padding?: ResponsiveSpacing;\n\n  /** Vertical start and end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingBlock?: ResponsiveSpacing;\n\n  /** Vertical start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingBlockStart?: ResponsiveSpacing;\n\n  /** Vertical end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingBlockEnd?: ResponsiveSpacing;\n\n  /** Horizontal start and end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingInline?: ResponsiveSpacing;\n\n  /** Horizontal start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingInlineStart?: ResponsiveSpacing;\n\n  /** Horizontal end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingInlineEnd?: ResponsiveSpacing;\n\n  /** Aria role */\n  role?: string;\n\n  /** Shadow on box */\n  shadow?: ShadowAliasOrScale;\n\n  /** Set tab order */\n  tabIndex?: number;\n\n  /** Width of container */\n  width?: string;\n\n  /** Position of box */\n  position?: \"relative\" | \"absolute\" | \"fixed\" | \"sticky\";\n\n  /** Top position of box */\n  insetBlockStart?: ResponsiveSpacing;\n\n  /** Bottom position of box */\n  insetBlockEnd?: ResponsiveSpacing;\n\n  /** Left position of box */\n  insetInlineStart?: ResponsiveSpacing;\n\n  /** Right position of box */\n  insetInlineEnd?: ResponsiveSpacing;\n\n  /** Opacity of box */\n  opacity?: string;\n\n  /** Outline color */\n  outlineColor?: ColorBorderAlias;\n\n  /** Outline style */\n  outlineStyle?: \"solid\" | \"dashed\";\n\n  /** Outline width */\n  outlineWidth?: BorderWidthScale;\n\n  /** Visually hide the contents during print */\n  printHidden?: boolean;\n\n  /** Visually hide the contents (still announced by screenreader) */\n  visuallyHidden?: boolean;\n\n  /** z-index of box */\n  zIndex?: string;\n\n  /** Additional CSS class name (inherited from shadcn/ui pattern) */\n  className?: string;\n}\n\n// Enhanced Box interface that extends Polaris with shadcn/ui features\nexport interface EnhancedBoxProps extends PolarisBoxProps {\n  // No additional props needed for now, but this allows for future extensions\n}\n\n// Utility function to convert Polaris color tokens to Tailwind classes\nconst getBackgroundClass = (background?: ColorBackgroundAlias): string => {\n  if (!background) return \"\";\n\n  const backgroundMap: Record<ColorBackgroundAlias, string> = {\n    bg: \"bg-[rgb(241,241,241)]\",\n    \"bg-inverse\": \"bg-[rgb(26,26,26)]\",\n    \"bg-surface\": \"bg-white\",\n    \"bg-surface-hover\": \"bg-[rgb(247,247,247)]\",\n    \"bg-surface-active\": \"bg-[rgb(243,243,243)]\",\n    \"bg-surface-selected\": \"bg-[rgb(241,241,241)]\",\n    \"bg-surface-disabled\": \"bg-black/5\",\n    \"bg-surface-secondary\": \"bg-[rgb(247,247,247)]\",\n    \"bg-surface-secondary-hover\": \"bg-[rgb(241,241,241)]\",\n    \"bg-surface-secondary-active\": \"bg-[rgb(235,235,235)]\",\n    \"bg-surface-secondary-selected\": \"bg-[rgb(235,235,235)]\",\n    \"bg-surface-tertiary\": \"bg-[rgb(243,243,243)]\",\n    \"bg-surface-tertiary-hover\": \"bg-[rgb(235,235,235)]\",\n    \"bg-surface-tertiary-active\": \"bg-[rgb(227,227,227)]\",\n    \"bg-surface-brand\": \"bg-[rgb(227,227,227)]\",\n    \"bg-surface-brand-hover\": \"bg-[rgb(235,235,235)]\",\n    \"bg-surface-brand-active\": \"bg-[rgb(241,241,241)]\",\n    \"bg-surface-brand-selected\": \"bg-[rgb(241,241,241)]\",\n    \"bg-surface-info\": \"bg-[rgb(234,244,255)]\",\n    \"bg-surface-info-hover\": \"bg-[rgb(224,240,255)]\",\n    \"bg-surface-info-active\": \"bg-[rgb(202,230,255)]\",\n    \"bg-surface-success\": \"bg-[rgb(205,254,212)]\",\n    \"bg-surface-success-hover\": \"bg-[rgb(175,254,191)]\",\n    \"bg-surface-success-active\": \"bg-[rgb(146,252,172)]\",\n    \"bg-surface-caution\": \"bg-[rgb(255,248,219)]\",\n    \"bg-surface-caution-hover\": \"bg-[rgb(255,244,191)]\",\n    \"bg-surface-caution-active\": \"bg-[rgb(255,239,157)]\",\n    \"bg-surface-warning\": \"bg-[rgb(255,241,227)]\",\n    \"bg-surface-warning-hover\": \"bg-[rgb(255,235,213)]\",\n    \"bg-surface-warning-active\": \"bg-[rgb(255,228,198)]\",\n    \"bg-surface-critical\": \"bg-[rgb(254,232,235)]\",\n    \"bg-surface-critical-hover\": \"bg-[rgb(254,225,230)]\",\n    \"bg-surface-critical-active\": \"bg-[rgb(254,217,223)]\",\n    \"bg-surface-emphasis\": \"bg-[rgb(240,242,255)]\",\n    \"bg-surface-emphasis-hover\": \"bg-[rgb(234,237,255)]\",\n    \"bg-surface-emphasis-active\": \"bg-[rgb(226,231,255)]\",\n    \"bg-surface-magic\": \"bg-[rgb(248,247,255)]\",\n    \"bg-surface-magic-hover\": \"bg-[rgb(243,241,255)]\",\n    \"bg-surface-magic-active\": \"bg-[rgb(233,229,255)]\",\n    \"bg-surface-inverse\": \"bg-[rgb(48,48,48)]\",\n    \"bg-surface-transparent\": \"bg-transparent\",\n    \"bg-fill\": \"bg-white\",\n    \"bg-fill-hover\": \"bg-[rgb(250,250,250)]\",\n    \"bg-fill-active\": \"bg-[rgb(247,247,247)]\",\n    \"bg-fill-selected\": \"bg-[rgb(204,204,204)]\",\n    \"bg-fill-disabled\": \"bg-black/5\",\n    \"bg-fill-secondary\": \"bg-[rgb(241,241,241)]\",\n    \"bg-fill-secondary-hover\": \"bg-[rgb(235,235,235)]\",\n    \"bg-fill-secondary-active\": \"bg-[rgb(227,227,227)]\",\n    \"bg-fill-secondary-selected\": \"bg-[rgb(227,227,227)]\",\n    \"bg-fill-tertiary\": \"bg-[rgb(227,227,227)]\",\n    \"bg-fill-tertiary-hover\": \"bg-[rgb(212,212,212)]\",\n    \"bg-fill-tertiary-active\": \"bg-[rgb(204,204,204)]\",\n    \"bg-fill-brand\": \"bg-[rgb(48,48,48)]\",\n    \"bg-fill-brand-hover\": \"bg-[rgb(26,26,26)]\",\n    \"bg-fill-brand-active\": \"bg-[rgb(26,26,26)]\",\n    \"bg-fill-brand-selected\": \"bg-[rgb(48,48,48)]\",\n    \"bg-fill-brand-disabled\": \"bg-black/[0.17]\",\n    \"bg-fill-info\": \"bg-[rgb(145,208,255)]\",\n    \"bg-fill-info-hover\": \"bg-[rgb(81,192,255)]\",\n    \"bg-fill-info-active\": \"bg-[rgb(0,148,213)]\",\n    \"bg-fill-info-secondary\": \"bg-[rgb(213,235,255)]\",\n    \"bg-fill-success\": \"bg-[rgb(4,123,93)]\",\n    \"bg-fill-success-hover\": \"bg-[rgb(3,94,76)]\",\n    \"bg-fill-success-active\": \"bg-[rgb(1,75,64)]\",\n    \"bg-fill-success-secondary\": \"bg-[rgb(175,254,191)]\",\n    \"bg-fill-warning\": \"bg-[rgb(255,184,0)]\",\n    \"bg-fill-warning-hover\": \"bg-[rgb(229,165,0)]\",\n    \"bg-fill-warning-active\": \"bg-[rgb(178,132,0)]\",\n    \"bg-fill-warning-secondary\": \"bg-[rgb(255,214,164)]\",\n    \"bg-fill-caution\": \"bg-[rgb(255,230,0)]\",\n    \"bg-fill-caution-hover\": \"bg-[rgb(234,211,0)]\",\n    \"bg-fill-caution-active\": \"bg-[rgb(225,203,0)]\",\n    \"bg-fill-caution-secondary\": \"bg-[rgb(255,235,120)]\",\n    \"bg-fill-critical\": \"bg-[rgb(199,10,36)]\",\n    \"bg-fill-critical-hover\": \"bg-[rgb(163,10,36)]\",\n    \"bg-fill-critical-active\": \"bg-[rgb(142,11,33)]\",\n    \"bg-fill-critical-selected\": \"bg-[rgb(142,11,33)]\",\n    \"bg-fill-critical-secondary\": \"bg-[rgb(254,209,215)]\",\n    \"bg-fill-emphasis\": \"bg-[rgb(0,91,211)]\",\n    \"bg-fill-emphasis-hover\": \"bg-[rgb(0,66,153)]\",\n    \"bg-fill-emphasis-active\": \"bg-[rgb(0,46,106)]\",\n    \"bg-fill-magic\": \"bg-[rgb(128,81,255)]\",\n    \"bg-fill-magic-secondary\": \"bg-[rgb(233,229,255)]\",\n    \"bg-fill-magic-secondary-hover\": \"bg-[rgb(228,222,255)]\",\n    \"bg-fill-magic-secondary-active\": \"bg-[rgb(223,217,255)]\",\n    \"bg-fill-inverse\": \"bg-[rgb(48,48,48)]\",\n    \"bg-fill-inverse-hover\": \"bg-[rgb(74,74,74)]\",\n    \"bg-fill-inverse-active\": \"bg-[rgb(97,97,97)]\",\n    \"bg-fill-transparent\": \"bg-black/[0.02]\",\n    \"bg-fill-transparent-hover\": \"bg-black/5\",\n    \"bg-fill-transparent-active\": \"bg-black/[0.08]\",\n    \"bg-fill-transparent-selected\": \"bg-black/[0.08]\",\n    \"bg-fill-transparent-secondary\": \"bg-black/[0.06]\",\n    \"bg-fill-transparent-secondary-hover\": \"bg-black/[0.08]\",\n    \"bg-fill-transparent-secondary-active\": \"bg-black/[0.11]\",\n  };\n\n  return backgroundMap[background] || \"\";\n};\n\n// Utility function to convert Polaris border color tokens to Tailwind classes\nconst getBorderColorClass = (\n  borderColor?: ColorBorderAlias | \"transparent\"\n): string => {\n  if (!borderColor) return \"\";\n  if (borderColor === \"transparent\") return \"border-transparent\";\n\n  const borderColorMap: Record<ColorBorderAlias, string> = {\n    border: \"border-[rgb(227,227,227)]\",\n    \"border-hover\": \"border-[rgb(204,204,204)]\",\n    \"border-disabled\": \"border-[rgb(235,235,235)]\",\n    \"border-secondary\": \"border-[rgb(235,235,235)]\",\n    \"border-tertiary\": \"border-[rgb(204,204,204)]\",\n    \"border-focus\": \"border-[rgb(0,91,211)]\",\n    \"border-brand\": \"border-[rgb(227,227,227)]\",\n    \"border-info\": \"border-[rgb(168,216,255)]\",\n    \"border-success\": \"border-[rgb(146,252,172)]\",\n    \"border-caution\": \"border-[rgb(255,235,120)]\",\n    \"border-warning\": \"border-[rgb(255,200,121)]\",\n    \"border-critical\": \"border-[rgb(254,193,199)]\",\n    \"border-critical-secondary\": \"border-[rgb(142,11,33)]\",\n    \"border-emphasis\": \"border-[rgb(0,91,211)]\",\n    \"border-emphasis-hover\": \"border-[rgb(0,66,153)]\",\n    \"border-emphasis-active\": \"border-[rgb(0,46,106)]\",\n    \"border-magic\": \"border-[rgb(228,222,255)]\",\n    \"border-magic-secondary\": \"border-[rgb(148,116,255)]\",\n    \"border-magic-secondary-hover\": \"border-[rgb(128,81,255)]\",\n    \"border-inverse\": \"border-[rgb(97,97,97)]\",\n    \"border-inverse-hover\": \"border-[rgb(204,204,204)]\",\n    \"border-inverse-active\": \"border-[rgb(227,227,227)]\",\n  };\n\n  return borderColorMap[borderColor] || \"\";\n};\n\n// Utility function to convert Polaris text color tokens to Tailwind classes\nconst getTextColorClass = (color?: ColorTextAlias): string => {\n  if (!color) return \"\";\n\n  const textColorMap: Record<ColorTextAlias, string> = {\n    text: \"text-[rgb(48,48,48)]\",\n    \"text-secondary\": \"text-[rgb(97,97,97)]\",\n    \"text-disabled\": \"text-[rgb(181,181,181)]\",\n    \"text-link\": \"text-[rgb(0,91,211)]\",\n    \"text-link-hover\": \"text-[rgb(0,66,153)]\",\n    \"text-link-active\": \"text-[rgb(0,46,106)]\",\n    \"text-brand\": \"text-[rgb(74,74,74)]\",\n    \"text-brand-hover\": \"text-[rgb(48,48,48)]\",\n    \"text-brand-on-bg-fill\": \"text-white\",\n    \"text-brand-on-bg-fill-hover\": \"text-[rgb(227,227,227)]\",\n    \"text-brand-on-bg-fill-active\": \"text-[rgb(204,204,204)]\",\n    \"text-brand-on-bg-fill-disabled\": \"text-white\",\n    \"text-info\": \"text-[rgb(0,58,90)]\",\n    \"text-info-hover\": \"text-[rgb(0,58,90)]\",\n    \"text-info-active\": \"text-[rgb(0,33,51)]\",\n    \"text-info-secondary\": \"text-[rgb(0,124,180)]\",\n    \"text-info-on-bg-fill\": \"text-[rgb(0,33,51)]\",\n    \"text-success\": \"text-[rgb(1,75,64)]\",\n    \"text-success-hover\": \"text-[rgb(7,54,48)]\",\n    \"text-success-active\": \"text-[rgb(2,38,34)]\",\n    \"text-success-secondary\": \"text-[rgb(4,123,93)]\",\n    \"text-success-on-bg-fill\": \"text-[rgb(250,255,251)]\",\n    \"text-caution\": \"text-[rgb(79,71,0)]\",\n    \"text-caution-hover\": \"text-[rgb(51,46,0)]\",\n    \"text-caution-active\": \"text-[rgb(31,28,0)]\",\n    \"text-caution-secondary\": \"text-[rgb(130,117,0)]\",\n    \"text-caution-on-bg-fill\": \"text-[rgb(51,46,0)]\",\n    \"text-warning\": \"text-[rgb(94,66,0)]\",\n    \"text-warning-hover\": \"text-[rgb(65,45,0)]\",\n    \"text-warning-active\": \"text-[rgb(37,26,0)]\",\n    \"text-warning-secondary\": \"text-[rgb(149,111,0)]\",\n    \"text-warning-on-bg-fill\": \"text-[rgb(37,26,0)]\",\n    \"text-critical\": \"text-[rgb(142,11,33)]\",\n    \"text-critical-hover\": \"text-[rgb(95,7,22)]\",\n    \"text-critical-active\": \"text-[rgb(47,4,11)]\",\n    \"text-critical-secondary\": \"text-[rgb(199,10,36)]\",\n    \"text-critical-on-bg-fill\": \"text-[rgb(255,250,251)]\",\n    \"text-emphasis\": \"text-[rgb(0,91,211)]\",\n    \"text-emphasis-hover\": \"text-[rgb(0,66,153)]\",\n    \"text-emphasis-active\": \"text-[rgb(0,46,106)]\",\n    \"text-emphasis-on-bg-fill\": \"text-[rgb(252,253,255)]\",\n    \"text-emphasis-on-bg-fill-hover\": \"text-[rgb(226,231,255)]\",\n    \"text-emphasis-on-bg-fill-active\": \"text-[rgb(213,220,255)]\",\n    \"text-magic\": \"text-[rgb(87,0,209)]\",\n    \"text-magic-secondary\": \"text-[rgb(113,38,255)]\",\n    \"text-magic-on-bg-fill\": \"text-[rgb(253,253,255)]\",\n    \"text-inverse\": \"text-[rgb(227,227,227)]\",\n    \"text-inverse-secondary\": \"text-[rgb(181,181,181)]\",\n    \"text-link-inverse\": \"text-[rgb(197,208,255)]\",\n  };\n\n  return textColorMap[color] || \"\";\n};\n\n// Utility function to convert Polaris space tokens to Tailwind classes\nconst getSpaceClass = (space?: SpaceScale): string => {\n  if (!space) return \"\";\n\n  const spaceMap: Record<SpaceScale, string> = {\n    \"0\": \"0\",\n    \"025\": \"px\",\n    \"050\": \"0.5\",\n    \"100\": \"1\",\n    \"150\": \"1.5\",\n    \"200\": \"2\",\n    \"300\": \"3\",\n    \"400\": \"4\",\n    \"500\": \"5\",\n    \"600\": \"6\",\n    \"800\": \"8\",\n    \"1000\": \"10\",\n    \"1200\": \"12\",\n    \"1600\": \"16\",\n    \"2000\": \"20\",\n    \"2400\": \"24\",\n    \"2800\": \"28\",\n    \"3200\": \"32\",\n  };\n\n  return spaceMap[space] || \"\";\n};\n\n// Utility function to convert Polaris border radius tokens to Tailwind classes\nconst getBorderRadiusClass = (radius?: BorderRadiusAliasOrScale): string => {\n  if (!radius) return \"\";\n\n  const radiusMap: Record<BorderRadiusAliasOrScale, string> = {\n    \"0\": \"rounded-none\",\n    \"050\": \"rounded-sm\",\n    \"100\": \"rounded\",\n    \"150\": \"rounded-md\",\n    \"200\": \"rounded-lg\",\n    \"300\": \"rounded-xl\",\n    \"400\": \"rounded-2xl\",\n    \"500\": \"rounded-3xl\",\n    \"750\": \"rounded-[30px]\",\n    full: \"rounded-full\",\n  };\n\n  return radiusMap[radius] || \"\";\n};\n\n// Utility function to convert Polaris border width tokens to Tailwind classes\nconst getBorderWidthClass = (width?: BorderWidthScale): string => {\n  if (!width) return \"\";\n\n  const widthMap: Record<BorderWidthScale, string> = {\n    \"0\": \"border-0\",\n    \"0165\": \"border-[0.66px]\",\n    \"025\": \"border\",\n    \"050\": \"border-2\",\n    \"100\": \"border-4\",\n  };\n\n  return widthMap[width] || \"\";\n};\n\n// Utility function to convert Polaris shadow tokens to Tailwind classes\nconst getShadowClass = (shadow?: ShadowAliasOrScale): string => {\n  if (!shadow) return \"\";\n\n  const shadowMap: Record<ShadowAliasOrScale, string> = {\n    \"0\": \"shadow-none\",\n    \"100\": \"shadow-[0px_1px_0px_0px_rgba(26,26,26,0.07)]\",\n    \"200\": \"shadow-[0px_3px_1px_-1px_rgba(26,26,26,0.07)]\",\n    \"300\": \"shadow-[0px_4px_6px_-2px_rgba(26,26,26,0.20)]\",\n    \"400\": \"shadow-[0px_8px_16px_-4px_rgba(26,26,26,0.22)]\",\n    \"500\": \"shadow-[0px_12px_20px_-8px_rgba(26,26,26,0.24)]\",\n    \"600\": \"shadow-[0px_20px_20px_-8px_rgba(26,26,26,0.28)]\",\n    \"bevel-100\":\n      \"shadow-[1px_0px_0px_0px_rgba(0,0,0,0.13)_inset,_-1px_0px_0px_0px_rgba(0,0,0,0.13)_inset,_0px_-1px_0px_0px_rgba(0,0,0,0.17)_inset,_0px_1px_0px_0px_rgba(204,204,204,0.5)_inset]\",\n    \"inset-100\":\n      \"shadow-[0px_1px_2px_0px_rgba(26,26,26,0.15)_inset,_0px_1px_1px_0px_rgba(26,26,26,0.15)_inset]\",\n    \"inset-200\":\n      \"shadow-[0px_2px_1px_0px_rgba(26,26,26,0.20)_inset,_1px_0px_1px_0px_rgba(26,26,26,0.12)_inset,_-1px_0px_1px_0px_rgba(26,26,26,0.12)_inset]\",\n    button:\n      \"shadow-[0px_-1px_0px_0px_#b5b5b5_inset,_0px_0px_0px_1px_rgba(0,0,0,0.1)_inset,_0px_0.5px_0px_1.5px_#FFF_inset]\",\n    \"button-hover\":\n      \"shadow-[0px_1px_0px_0px_#EBEBEB_inset,_-1px_0px_0px_0px_#EBEBEB_inset,_1px_0px_0px_0px_#EBEBEB_inset,_0px_-1px_0px_0px_#CCC_inset]\",\n    \"button-inset\":\n      \"shadow-[-1px_0px_1px_0px_rgba(26,26,26,0.122)_inset,_1px_0px_1px_0px_rgba(26,26,26,0.122)_inset,_0px_2px_1px_0px_rgba(26,26,26,0.2)_inset]\",\n    \"button-primary\":\n      \"shadow-[0px_-1px_0px_1px_rgba(0,0,0,0.8)_inset,_0px_0px_0px_1px_rgba(48,48,48,1)_inset,_0px_0.5px_0px_1.5px_rgba(255,255,255,0.25)_inset]\",\n    \"button-primary-hover\":\n      \"shadow-[0px_1px_0px_0px_rgba(255,255,255,0.24)_inset,_1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_-1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_0px_-1px_0px_0px_#000_inset,_0px_-1px_0px_1px_#1A1A1A]\",\n    \"button-primary-inset\": \"shadow-[0px_3px_0px_0px_rgb(0,0,0)_inset]\",\n    \"button-primary-critical\":\n      \"shadow-[0px_-1px_0px_1px_rgba(142,31,11,0.8)_inset,_0px_0px_0px_1px_rgba(181,38,11,0.8)_inset,_0px_0.5px_0px_1.5px_rgba(255,255,255,0.349)_inset]\",\n    \"button-primary-critical-hover\":\n      \"shadow-[0px_1px_0px_0px_rgba(255,255,255,0.48)_inset,_1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_-1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_0px_-1.5px_0px_0px_rgba(0,0,0,0.25)_inset]\",\n    \"button-primary-critical-inset\":\n      \"shadow-[-1px_0px_1px_0px_rgba(0,0,0,0.2)_inset,_1px_0px_1px_0px_rgba(0,0,0,0.2)_inset,_0px_2px_0px_0px_rgba(0,0,0,0.6)_inset]\",\n    \"button-primary-success\":\n      \"shadow-[0px_-1px_0px_1px_rgba(12,81,50,0.8)_inset,_0px_0px_0px_1px_rgba(19,111,69,0.8)_inset,_0px_0.5px_0px_1.5px_rgba(255,255,255,0.251)_inset]\",\n    \"button-primary-success-hover\":\n      \"shadow-[0px_1px_0px_0px_rgba(255,255,255,0.48)_inset,_1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_-1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_0px_-1.5px_0px_0px_rgba(0,0,0,0.25)_inset]\",\n    \"button-primary-success-inset\":\n      \"shadow-[-1px_0px_1px_0px_rgba(0,0,0,0.2)_inset,_1px_0px_1px_0px_rgba(0,0,0,0.2)_inset,_0px_2px_0px_0px_rgba(0,0,0,0.6)_inset]\",\n    \"border-inset\": \"shadow-[0px_0px_0px_1px_rgba(0,0,0,0.08)_inset]\",\n  };\n\n  return shadowMap[shadow] || \"\";\n};\n\n// Utility function to handle responsive spacing\nconst getResponsivePaddingClasses = (\n  padding?: ResponsiveSpacing,\n  prefix: string = \"p\"\n): string => {\n  if (!padding) return \"\";\n\n  if (typeof padding === \"string\") {\n    const spaceValue = getSpaceClass(padding);\n    return spaceValue ? `${prefix}-${spaceValue}` : \"\";\n  }\n\n  // Handle responsive object\n  const classes: string[] = [];\n  Object.entries(padding).forEach(([breakpoint, value]) => {\n    const spaceValue = getSpaceClass(value);\n    if (spaceValue) {\n      const breakpointPrefix = breakpoint === \"xs\" ? \"\" : `${breakpoint}:`;\n      classes.push(`${breakpointPrefix}${prefix}-${spaceValue}`);\n    }\n  });\n\n  return classes.join(\" \");\n};\n\n// Utility function to get individual border width classes\nconst getIndividualBorderWidthClass = (\n  width: BorderWidthScale,\n  side: string\n): string => {\n  const widthMap: Record<BorderWidthScale, string> = {\n    \"0\": \"0\",\n    \"0165\": \"[0.66px]\",\n    \"025\": \"\",\n    \"050\": \"2\",\n    \"100\": \"4\",\n  };\n\n  const widthValue = widthMap[width];\n  return widthValue ? `border-${side}-${widthValue}` : `border-${side}`;\n};\n\n// Utility function to get individual border radius classes\nconst getIndividualBorderRadiusClass = (\n  radius: BorderRadiusAliasOrScale,\n  corner: string\n): string => {\n  const radiusMap: Record<BorderRadiusAliasOrScale, string> = {\n    \"0\": \"none\",\n    \"050\": \"sm\",\n    \"100\": \"\",\n    \"150\": \"md\",\n    \"200\": \"lg\",\n    \"300\": \"xl\",\n    \"400\": \"2xl\",\n    \"500\": \"3xl\",\n    \"750\": \"[30px]\",\n    full: \"full\",\n  };\n\n  const radiusValue = radiusMap[radius];\n  return radiusValue ? `rounded-${corner}-${radiusValue}` : `rounded-${corner}`;\n};\n\n// Create Polaris-specific box variants using CVA\nconst polarisBoxVariants = cva(\"\", {\n  variants: {\n    // Base styling variants can be added here if needed\n    visuallyHidden: {\n      true: \"sr-only\",\n      false: \"\",\n    },\n    printHidden: {\n      true: \"print:hidden\",\n      false: \"\",\n    },\n  },\n  defaultVariants: {\n    visuallyHidden: false,\n    printHidden: false,\n  },\n});\n\nexport const Box = React.forwardRef<any, EnhancedBoxProps>(\n  (\n    {\n      children,\n      as = \"div\",\n      background,\n      borderColor,\n      borderStyle,\n      borderRadius,\n      borderEndStartRadius,\n      borderEndEndRadius,\n      borderStartStartRadius,\n      borderStartEndRadius,\n      borderWidth,\n      borderBlockStartWidth,\n      borderBlockEndWidth,\n      borderInlineStartWidth,\n      borderInlineEndWidth,\n      color,\n      id,\n      minHeight,\n      minWidth,\n      maxWidth,\n      overflowX,\n      overflowY,\n      padding,\n      paddingBlock,\n      paddingBlockStart,\n      paddingBlockEnd,\n      paddingInline,\n      paddingInlineStart,\n      paddingInlineEnd,\n      role,\n      shadow,\n      tabIndex,\n      width,\n      position,\n      insetBlockStart,\n      insetBlockEnd,\n      insetInlineStart,\n      insetInlineEnd,\n      opacity,\n      outlineColor,\n      outlineStyle,\n      outlineWidth,\n      printHidden = false,\n      visuallyHidden = false,\n      zIndex,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Component = as;\n\n    // Build className using our utility functions and CVA\n    const boxClassName = cn(\n      polarisBoxVariants({\n        visuallyHidden,\n        printHidden,\n      }),\n      // Background\n      getBackgroundClass(background),\n      // Border\n      getBorderColorClass(borderColor),\n      borderStyle === \"dashed\" ? \"border-dashed\" : \"border-solid\",\n      getBorderRadiusClass(borderRadius),\n      getBorderWidthClass(borderWidth),\n      // Individual border widths\n      borderBlockStartWidth &&\n        getIndividualBorderWidthClass(borderBlockStartWidth, \"t\"),\n      borderBlockEndWidth &&\n        getIndividualBorderWidthClass(borderBlockEndWidth, \"b\"),\n      borderInlineStartWidth &&\n        getIndividualBorderWidthClass(borderInlineStartWidth, \"l\"),\n      borderInlineEndWidth &&\n        getIndividualBorderWidthClass(borderInlineEndWidth, \"r\"),\n      // Individual border radius\n      borderEndStartRadius &&\n        getIndividualBorderRadiusClass(borderEndStartRadius, \"bl\"),\n      borderEndEndRadius &&\n        getIndividualBorderRadiusClass(borderEndEndRadius, \"br\"),\n      borderStartStartRadius &&\n        getIndividualBorderRadiusClass(borderStartStartRadius, \"tl\"),\n      borderStartEndRadius &&\n        getIndividualBorderRadiusClass(borderStartEndRadius, \"tr\"),\n      // Text color\n      getTextColorClass(color),\n      // Overflow\n      overflowX && `overflow-x-${overflowX}`,\n      overflowY && `overflow-y-${overflowY}`,\n      // Padding\n      getResponsivePaddingClasses(padding, \"p\"),\n      getResponsivePaddingClasses(paddingBlock, \"py\"),\n      getResponsivePaddingClasses(paddingBlockStart, \"pt\"),\n      getResponsivePaddingClasses(paddingBlockEnd, \"pb\"),\n      getResponsivePaddingClasses(paddingInline, \"px\"),\n      getResponsivePaddingClasses(paddingInlineStart, \"pl\"),\n      getResponsivePaddingClasses(paddingInlineEnd, \"pr\"),\n      // Shadow\n      getShadowClass(shadow),\n      // Position\n      position && `${position}`,\n      // Inset (positioning)\n      getResponsivePaddingClasses(insetBlockStart, \"top\"),\n      getResponsivePaddingClasses(insetBlockEnd, \"bottom\"),\n      getResponsivePaddingClasses(insetInlineStart, \"left\"),\n      getResponsivePaddingClasses(insetInlineEnd, \"right\"),\n      // Outline\n      outlineColor &&\n        getBorderColorClass(outlineColor).replace(\"border-\", \"outline-\"),\n      outlineStyle === \"dashed\"\n        ? \"outline-dashed\"\n        : outlineStyle === \"solid\"\n        ? \"outline-solid\"\n        : \"\",\n      outlineWidth &&\n        getBorderWidthClass(outlineWidth).replace(\"border-\", \"outline-\"),\n      className\n    );\n\n    // Build style object for properties that can't be handled with Tailwind classes\n    const style: React.CSSProperties = {\n      ...(minHeight && { minHeight }),\n      ...(minWidth && { minWidth }),\n      ...(maxWidth && { maxWidth }),\n      ...(width && { width }),\n      ...(opacity && { opacity }),\n      ...(zIndex && { zIndex }),\n    };\n\n    return (\n      <Component\n        ref={ref}\n        className={boxClassName}\n        style={Object.keys(style).length > 0 ? style : undefined}\n        id={id}\n        role={role}\n        tabIndex={tabIndex}\n        {...props}\n      >\n        {children}\n      </Component>\n    );\n  }\n);\n\nBox.displayName = \"Box\";\n\n// Export variants for convenience\nexport { polarisBoxVariants };\nexport { polarisBoxVariants as boxVariants };\n","/**\n * Enhanced Text component that combines Polaris API compatibility with shadcn/ui functionality\n *\n * This component provides 100% API compatibility with Shopify's Polaris Text component\n * while being built on shadcn/ui foundation with Tailwind CSS for maximum flexibility.\n */\n\nimport * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"../../lib/utils\";\n\n// Type definitions following Polaris Text component API\nexport type TextVariant =\n  | \"headingXs\"\n  | \"headingSm\"\n  | \"headingMd\"\n  | \"headingLg\"\n  | \"headingXl\"\n  | \"heading2xl\"\n  | \"heading3xl\"\n  | \"bodyXs\"\n  | \"bodySm\"\n  | \"bodyMd\"\n  | \"bodyLg\";\n\nexport type TextAlignment = \"start\" | \"center\" | \"end\" | \"justify\";\n\nexport type TextTone =\n  | \"base\"\n  | \"disabled\"\n  | \"inherit\"\n  | \"success\"\n  | \"critical\"\n  | \"caution\"\n  | \"subdued\"\n  | \"text-inverse\"\n  | \"text-inverse-secondary\"\n  | \"magic\"\n  | \"magic-subdued\";\n\nexport type TextFontWeight = \"regular\" | \"medium\" | \"semibold\" | \"bold\";\n\nexport type TextElement =\n  | \"dt\"\n  | \"dd\"\n  | \"h1\"\n  | \"h2\"\n  | \"h3\"\n  | \"h4\"\n  | \"h5\"\n  | \"h6\"\n  | \"p\"\n  | \"span\"\n  | \"strong\"\n  | \"legend\";\n\n// Text variants using cva - matches Polaris design tokens\nconst textVariants = cva(\"\", {\n  variants: {\n    variant: {\n      // Heading variants with responsive sizing (font weights handled separately)\n      heading3xl: \"text-4xl leading-tight sm:text-5xl sm:leading-tight\",\n      heading2xl: \"text-3xl leading-tight sm:text-4xl sm:leading-tight\",\n      headingXl: \"text-2xl leading-tight sm:text-3xl sm:leading-tight\",\n      headingLg: \"text-xl leading-normal sm:text-2xl sm:leading-normal\",\n      headingMd: \"text-sm leading-normal\",\n      headingSm: \"text-xs leading-normal\",\n      headingXs: \"text-xs leading-tight\",\n      // Body variants (font weights handled separately)\n      bodyLg: \"text-sm leading-normal\",\n      bodyMd: \"text-xs leading-normal\",\n      bodySm: \"text-xs leading-tight\",\n      bodyXs: \"text-xs leading-tight\",\n    },\n    alignment: {\n      start: \"text-left\",\n      center: \"text-center\",\n      end: \"text-right\",\n      justify: \"text-justify\",\n    },\n    tone: {\n      base: \"text-gray-900\",\n      disabled: \"text-gray-400\",\n      inherit: \"text-inherit\",\n      success: \"text-green-600\",\n      critical: \"text-red-600\",\n      caution: \"text-yellow-600\",\n      subdued: \"text-gray-600\",\n      \"text-inverse\": \"text-white\",\n      \"text-inverse-secondary\": \"text-gray-200\",\n      magic: \"text-purple-600\",\n      \"magic-subdued\": \"text-purple-400\",\n    },\n    fontWeight: {\n      regular: \"font-normal\",\n      medium: \"font-medium\",\n      semibold: \"font-semibold\",\n      bold: \"font-bold\",\n    },\n    breakWord: {\n      true: \"break-words\",\n      false: \"\",\n    },\n    truncate: {\n      true: \"truncate\",\n      false: \"\",\n    },\n    numeric: {\n      true: \"font-mono tabular-nums\",\n      false: \"\",\n    },\n    visuallyHidden: {\n      true: \"sr-only\",\n      false: \"\",\n    },\n    textDecorationLine: {\n      \"line-through\": \"line-through\",\n      none: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"bodyMd\",\n    alignment: \"start\",\n    tone: \"base\",\n    fontWeight: \"regular\",\n    breakWord: false,\n    truncate: false,\n    numeric: false,\n    visuallyHidden: false,\n    textDecorationLine: \"none\",\n  },\n});\n\n// Polaris Text Props interface - matches Shopify Polaris Text component exactly\nexport interface PolarisTextProps {\n  /** Text to display */\n  children?: React.ReactNode;\n  /** The element type */\n  as?: TextElement;\n  /** Adjust horizontal alignment of text */\n  alignment?: TextAlignment;\n  /** Prevent text from overflowing */\n  breakWord?: boolean;\n  /** Adjust tone of text */\n  tone?: TextTone;\n  /** Adjust weight of text */\n  fontWeight?: TextFontWeight;\n  /** HTML id attribute */\n  id?: string;\n  /** Use a numeric font variant with monospace appearance */\n  numeric?: boolean;\n  /** Truncate text overflow with ellipsis */\n  truncate?: boolean;\n  /** Typographic style of text */\n  variant?: TextVariant;\n  /** Visually hide the text */\n  visuallyHidden?: boolean;\n  /** Add a line-through to the text */\n  textDecorationLine?: \"line-through\";\n}\n\n// Enhanced Text interface that extends Polaris with additional functionality\nexport interface EnhancedTextProps extends PolarisTextProps {\n  /** Additional CSS class name */\n  className?: string;\n}\n\nexport type TextProps = EnhancedTextProps & VariantProps<typeof textVariants>;\n\nconst Text = React.forwardRef<any, TextProps>(\n  (\n    {\n      children,\n      as = \"span\",\n      alignment,\n      breakWord = false,\n      tone,\n      fontWeight,\n      id,\n      numeric = false,\n      truncate = false,\n      variant = \"bodyMd\",\n      visuallyHidden = false,\n      textDecorationLine,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Component = as;\n\n    // Determine the effective font weight\n    const getEffectiveFontWeight = (): TextFontWeight => {\n      if (fontWeight) return fontWeight;\n\n      // Default font weights for variants when not explicitly set\n      switch (variant) {\n        case \"heading3xl\":\n        case \"heading2xl\":\n        case \"headingXl\":\n          return \"bold\";\n        case \"headingLg\":\n        case \"headingMd\":\n        case \"headingSm\":\n        case \"headingXs\":\n          return \"semibold\";\n        default:\n          return \"regular\";\n      }\n    };\n\n    return (\n      <Component\n        ref={ref}\n        id={id}\n        className={cn(\n          textVariants({\n            variant,\n            alignment,\n            tone,\n            fontWeight: getEffectiveFontWeight(),\n            breakWord,\n            truncate,\n            numeric,\n            visuallyHidden,\n            textDecorationLine: textDecorationLine ? \"line-through\" : \"none\",\n          }),\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Component>\n    );\n  }\n);\n\nText.displayName = \"Text\";\n\nexport { Text, textVariants };\n\n// Backward compatibility aliases\nexport type PolarisTextVariant = TextVariant;\nexport type PolarisTextAlignment = TextAlignment;\nexport type PolarisTextTone = TextTone;\nexport type PolarisTextFontWeight = TextFontWeight;\nexport type PolarisTextElement = TextElement;\n","/**\n * Enhanced TextField component that combines Polaris API compatibility with shadcn/ui functionality\n *\n * This component provides 100% API compatibility with Shopify's Polaris TextField component\n * while being built on shadcn/ui foundation with Tailwind CSS for maximum flexibility.\n */\n\nimport * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { XCircleIcon } from \"@shopify/polaris-icons\";\nimport { cn } from \"../../lib/utils\";\n\n// Type definitions following Polaris TextField component API\nexport type TextFieldType =\n  | \"text\"\n  | \"email\"\n  | \"number\"\n  | \"integer\"\n  | \"password\"\n  | \"search\"\n  | \"tel\"\n  | \"url\"\n  | \"date\"\n  | \"datetime-local\"\n  | \"month\"\n  | \"time\"\n  | \"week\"\n  | \"currency\";\n\nexport type TextFieldAlignment = \"left\" | \"center\" | \"right\";\n\nexport type TextFieldInputMode =\n  | \"none\"\n  | \"text\"\n  | \"decimal\"\n  | \"numeric\"\n  | \"tel\"\n  | \"search\"\n  | \"email\"\n  | \"url\";\n\nexport type TextFieldSize = \"slim\" | \"medium\";\n\nexport type TextFieldVariant = \"inherit\" | \"borderless\";\n\nexport type TextFieldTone = \"magic\";\n\n// Error type (can be string, boolean, or React node)\nexport type TextFieldError = string | boolean | React.ReactNode;\n\n// Selection suggestion interface\ninterface SelectSuggestion {\n  suggestion?: string;\n}\n\n// Select text on focus interface\ninterface SelectTextOnFocus {\n  selectTextOnFocus?: true;\n}\n\n// Readonly interface\ninterface Readonly {\n  readonly?: true;\n}\n\n// Disabled interface\ninterface Disabled {\n  disabled?: true;\n}\n\n// Interactive interface\ninterface Interactive {\n  onChange(value: string, id: string): void;\n}\n\n// Non-mutually exclusive props interface\ninterface NonMutuallyExclusiveProps {\n  /** Text to display before value */\n  prefix?: React.ReactNode;\n  /** Text to display after value */\n  suffix?: React.ReactNode;\n  /** Content to vertically display above the input value */\n  verticalContent?: React.ReactNode;\n  /** Hint text to display */\n  placeholder?: string;\n  /** Initial value for the input */\n  value?: string;\n  /** Additional hint text to display */\n  helpText?: React.ReactNode;\n  /** Label for the input */\n  label: React.ReactNode;\n  /** Adds an action to the label */\n  labelAction?: {\n    content: React.ReactNode;\n    onAction(): void;\n  };\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** Show a clear text button in the input */\n  clearButton?: boolean;\n  /** Indicates whether or not the entire value should be selected on focus */\n  selectTextOnFocus?: boolean;\n  /** An inline autocomplete suggestion containing the input value */\n  suggestion?: string;\n  /** Disable editing of the input */\n  readOnly?: boolean;\n  /** Automatically focus the input */\n  autoFocus?: boolean;\n  /** Force the focus state on the input */\n  focused?: boolean;\n  /** Allow for multiple lines of input */\n  multiline?: boolean | number;\n  /** Error to display beneath the label */\n  error?: TextFieldError;\n  /** An element connected to the right of the input */\n  connectedRight?: React.ReactNode;\n  /** An element connected to the left of the input */\n  connectedLeft?: React.ReactNode;\n  /** Determine type of input */\n  type?: TextFieldType;\n  /** Name of the input */\n  name?: string;\n  /** ID for the input */\n  id?: string;\n  /** Defines a specific role attribute for the input */\n  role?: string;\n  /** Limit increment value for numeric and date-time inputs */\n  step?: number;\n  /** Increment value for numeric and date-time inputs when using Page Up or Page Down */\n  largeStep?: number;\n  /** Enable automatic completion by the browser */\n  autoComplete: string;\n  /** Mimics the behavior of the native HTML attribute, limiting the maximum value */\n  max?: number | string;\n  /** Maximum character length for an input */\n  maxLength?: number;\n  /** Maximum height of the input element. Only applies when multiline is true */\n  maxHeight?: number | string;\n  /** Mimics the behavior of the native HTML attribute, limiting the minimum value */\n  min?: number | string;\n  /** Minimum character length for an input */\n  minLength?: number;\n  /** A regular expression to check the value against */\n  pattern?: string;\n  /** Choose the keyboard that should be used on mobile devices */\n  inputMode?: TextFieldInputMode;\n  /** Indicate whether value should have spelling checked */\n  spellCheck?: boolean;\n  /** Indicates the id of a component owned by the input */\n  ariaOwns?: string;\n  /** Indicates whether or not a Popover is displayed */\n  ariaExpanded?: boolean;\n  /** Indicates the id of a component controlled by the input */\n  ariaControls?: string;\n  /** Indicates the id of a related component's visually focused element to the input */\n  ariaActiveDescendant?: string;\n  /** Indicates what kind of user input completion suggestions are provided */\n  ariaAutocomplete?: string;\n  /** Indicates whether or not the character count should be displayed */\n  showCharacterCount?: boolean;\n  /** Determines the alignment of the text in the input */\n  align?: TextFieldAlignment;\n  /** Visual required indicator, adds an asterisk to label */\n  requiredIndicator?: boolean;\n  /** Indicates whether or not a monospaced font should be used */\n  monospaced?: boolean;\n  /** Visual styling options for the TextField */\n  variant?: TextFieldVariant;\n  /** Changes the size of the input, giving it more or less padding */\n  size?: TextFieldSize;\n  /** Indicates the tone of the text field */\n  tone?: TextFieldTone;\n  /** Whether the TextField will grow as the text within the input changes */\n  autoSize?: boolean;\n  /** Indicates the loading state */\n  loading?: boolean;\n  /** Callback fired when clear button is clicked */\n  onClearButtonClick?(id: string): void;\n  /** Callback fired when value is changed */\n  onChange?(value: string, id: string): void;\n  /** When provided, callback fired instead of onChange when value is changed via the number step control */\n  onSpinnerChange?(value: string, id: string): void;\n  /** Callback fired when input is focused */\n  onFocus?: (event?: React.FocusEvent) => void;\n  /** Callback fired when input is blurred */\n  onBlur?(event?: React.FocusEvent): void;\n}\n\n// Enhanced props interface that includes className for custom styling\nexport interface EnhancedTextFieldProps extends NonMutuallyExclusiveProps {\n  /** Additional CSS class name for custom styling */\n  className?: string;\n}\n\n// Mutually exclusive selection props\nexport type MutuallyExclusiveSelectionProps =\n  | SelectSuggestion\n  | SelectTextOnFocus;\n\n// Mutually exclusive interaction props\nexport type MutuallyExclusiveInteractionProps =\n  | Interactive\n  | Readonly\n  | Disabled;\n\n// Polaris TextField Props interface - matches Shopify Polaris TextField component exactly\nexport interface PolarisTextFieldProps extends NonMutuallyExclusiveProps {\n  // Interactive props\n  onChange?(value: string, id: string): void;\n  // Readonly state\n  readonly?: boolean;\n  // Disabled state\n  disabled?: boolean;\n  // Selection props\n  selectTextOnFocus?: boolean;\n  suggestion?: string;\n}\n\n// Combined props interface\nexport interface TextFieldProps extends EnhancedTextFieldProps {\n  // Interactive props\n  onChange?(value: string, id: string): void;\n  // Readonly state\n  readonly?: boolean;\n  // Disabled state\n  disabled?: boolean;\n  // Selection props\n  selectTextOnFocus?: boolean;\n  suggestion?: string;\n}\n\n// Create Polaris-specific text field variants using CVA\nconst polarisTextFieldVariants = cva(\n  // Base styles matching Polaris TextField exactly\n  [\n    // Layout and positioning\n    \"relative flex items-center w-full\",\n    // Typography - Inter font family with Polaris-specific sizing\n    \"font-sans text-[13px] leading-[20px] font-normal\",\n    // Colors matching Polaris design tokens\n    \"text-[rgb(48,48,48)] placeholder:text-[rgb(97,97,97)]\",\n    // Background and borders\n    \"bg-white border border-[rgb(138,143,148)] border-t-[rgb(137,143,148)]\",\n    \"rounded-lg\",\n    // Padding matching Polaris exactly: 6px 12px\n    \"px-3 py-[6px]\",\n    // Height matching Polaris exactly: 32px height and min-height\n    \"h-8 min-h-8\",\n    // Flex behavior\n    \"flex-grow flex-shrink\",\n    // Appearance and interaction\n    \"appearance-none outline-none cursor-text\",\n    // Focus styles matching Polaris\n    \"focus-visible:outline-none focus-visible:border-[rgb(0,123,255)] focus-visible:border-2\",\n    \"focus-visible:bg-white focus-visible:ring-2 focus-visible:ring-[rgb(0,123,255)] focus-visible:ring-offset-1\",\n    // Hover styles\n    \"hover:border-[rgb(97,97,97)] hover:bg-[rgb(247,247,247)]\",\n    // Disabled styles\n    \"disabled:cursor-default disabled:text-[rgb(181,181,181)] disabled:bg-[rgb(247,247,247)] disabled:border-transparent\",\n    // File input styles\n    \"file:border-0 file:bg-transparent file:text-[13px] file:font-normal\",\n  ],\n  {\n    variants: {\n      size: {\n        // Slim size: 28px height (matching Polaris slim variant)\n        slim: \"h-7 min-h-7 py-[2px] text-[13px] leading-[20px]\",\n        // Medium size: 32px height (default Polaris size)\n        medium: \"h-8 min-h-8 py-[6px] text-[13px] leading-[20px]\",\n      },\n      variant: {\n        inherit: \"\",\n        // Borderless variant matching Polaris\n        borderless: [\n          \"border-0 shadow-none min-h-8\",\n          \"focus-visible:ring-0 focus-visible:ring-offset-0 focus-visible:border-0\",\n          \"hover:border-0 hover:bg-transparent\",\n        ],\n      },\n      align: {\n        left: \"text-left\",\n        center: \"text-center\",\n        right: \"text-right\",\n      },\n      tone: {\n        // Magic tone matching Polaris magic styling\n        magic: [\n          \"text-[rgb(128,81,255)] bg-[rgb(248,247,255)]\",\n          \"border-[rgb(153,124,255)]\",\n          \"focus-visible:border-[rgb(0,123,255)] focus-visible:text-[rgb(48,48,48)]\",\n          \"hover:bg-[rgb(243,240,255)] hover:border-[rgb(138,129,255)]\",\n        ],\n      },\n      error: {\n        true: [\n          \"border-[rgb(253,75,146)] bg-[rgb(255,247,250)]\",\n          \"focus-visible:border-[rgb(0,123,255)] focus-visible:bg-white\",\n          \"hover:border-[rgb(253,75,146)] hover:bg-[rgb(255,247,250)]\",\n        ],\n        false: \"\",\n      },\n      monospaced: {\n        // Monospaced font matching Polaris\n        true: \"font-mono\",\n        false: \"font-sans\",\n      },\n      multiline: {\n        // Multiline (textarea) styling\n        true: [\n          \"min-h-[80px] resize-y overflow-auto\",\n          \"items-start py-[6px]\",\n          \"leading-[20px]\",\n        ],\n        false: \"items-center\",\n      },\n    },\n    defaultVariants: {\n      size: \"medium\",\n      variant: \"inherit\",\n      align: \"left\",\n      error: false,\n      monospaced: false,\n      multiline: false,\n    },\n  }\n);\n\n// Helper function to generate unique IDs\nconst useId = () => {\n  const [id] = React.useState(() =>\n    Math.random().toString(36).substring(2, 11)\n  );\n  return id;\n};\n\n// Helper function to get rows for multiline\nconst getRows = (multiline?: boolean | number) => {\n  if (!multiline) return undefined;\n  return typeof multiline === \"number\" ? multiline : 3;\n};\n\n// Helper function to normalize aria-multiline\nconst normalizeAriaMultiline = (multiline?: boolean | number) => {\n  if (!multiline) return undefined;\n  return Boolean(multiline) || (typeof multiline === \"number\" && multiline > 0)\n    ? { \"aria-multiline\": true }\n    : undefined;\n};\n\n// Helper function to generate label ID\nconst labelID = (id: string) => `${id}Label`;\n\n// Helper function to generate help text ID\nconst helpTextID = (id: string) => `${id}HelpText`;\n\nexport const TextField = React.forwardRef<\n  HTMLInputElement | HTMLTextAreaElement,\n  TextFieldProps\n>(\n  (\n    {\n      prefix,\n      suffix,\n      verticalContent,\n      placeholder,\n      value = \"\",\n      helpText,\n      label,\n      labelAction,\n      labelHidden = false,\n      disabled = false,\n      clearButton = false,\n      readOnly = false,\n      autoFocus = false,\n      focused,\n      multiline = false,\n      error,\n      connectedRight,\n      connectedLeft,\n      type = \"text\",\n      name,\n      id: idProp,\n      role,\n      step,\n      largeStep,\n      autoComplete,\n      max,\n      maxLength,\n      maxHeight,\n      min,\n      minLength,\n      pattern,\n      inputMode,\n      spellCheck,\n      ariaOwns,\n      ariaControls,\n      ariaExpanded,\n      ariaActiveDescendant,\n      ariaAutocomplete,\n      showCharacterCount = false,\n      align = \"left\",\n      requiredIndicator = false,\n      monospaced = false,\n      selectTextOnFocus = false,\n      suggestion,\n      variant = \"inherit\",\n      size = \"medium\",\n      tone,\n      autoSize = false,\n      loading = false,\n      onClearButtonClick,\n      onChange,\n      onSpinnerChange,\n      onFocus,\n      onBlur,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    // Generate unique ID if not provided\n    const uniqId = useId();\n    const id = idProp ?? uniqId;\n\n    // State management\n    const [focus, setFocus] = React.useState(Boolean(focused));\n\n    // Refs\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const textAreaRef = React.useRef<HTMLTextAreaElement>(null);\n    const containerRef = React.useRef<HTMLDivElement>(null);\n\n    // Get the appropriate input ref based on multiline\n    const getInputRef = React.useCallback(() => {\n      return multiline ? textAreaRef.current : inputRef.current;\n    }, [multiline]);\n\n    // Handle focus effect\n    React.useEffect(() => {\n      const input = getInputRef();\n      if (!input || focused === undefined) return;\n      focused ? input.focus() : input.blur();\n    }, [focused, getInputRef]);\n\n    // Handle suggestion selection\n    React.useEffect(() => {\n      const input = inputRef.current;\n      const isSupportedInputType =\n        type === \"text\" ||\n        type === \"tel\" ||\n        type === \"search\" ||\n        type === \"url\" ||\n        type === \"password\";\n\n      if (!input || !isSupportedInputType || !suggestion) {\n        return;\n      }\n\n      input.setSelectionRange(value.length, suggestion.length);\n    }, [focus, value, type, suggestion]);\n\n    // Normalize values\n    const normalizedValue = suggestion ? suggestion : value;\n    const inputType = type === \"currency\" ? \"text\" : type;\n\n    // Build className using our Polaris variants\n    const inputClassName = cn(\n      polarisTextFieldVariants({\n        size,\n        variant,\n        align,\n        tone,\n        error: Boolean(error),\n        monospaced,\n        multiline: Boolean(multiline),\n      }),\n      autoSize && \"w-auto min-w-0\",\n      className\n    );\n\n    // Handle change events\n    const handleChange = React.useCallback(\n      (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        if (onChange) {\n          onChange(event.currentTarget.value, id);\n        }\n      },\n      [onChange, id]\n    );\n\n    // Handle focus events\n    const handleFocus = React.useCallback(\n      (event: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setFocus(true);\n\n        if (selectTextOnFocus && !suggestion) {\n          const input = getInputRef();\n          input?.select();\n        }\n\n        if (onFocus) {\n          onFocus(event);\n        }\n      },\n      [selectTextOnFocus, suggestion, getInputRef, onFocus]\n    );\n\n    // Handle blur events\n    const handleBlur = React.useCallback(\n      (event: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setFocus(false);\n\n        // Return early if new focus target is inside the TextField component\n        if (containerRef.current?.contains(event?.relatedTarget as Node)) {\n          return;\n        }\n\n        if (onBlur) {\n          onBlur(event);\n        }\n      },\n      [onBlur]\n    );\n\n    // Handle clear button click\n    const handleClearButtonClick = React.useCallback(() => {\n      if (onClearButtonClick) {\n        onClearButtonClick(id);\n      }\n    }, [onClearButtonClick, id]);\n\n    // Build describedBy array for accessibility\n    const describedBy: string[] = [];\n    if (error) {\n      describedBy.push(`${id}Error`);\n    }\n    if (helpText) {\n      describedBy.push(helpTextID(id));\n    }\n    if (showCharacterCount) {\n      describedBy.push(`${id}-CharacterCounter`);\n    }\n\n    // Build labelledBy array for accessibility\n    const labelledBy: string[] = [];\n    if (prefix) {\n      labelledBy.push(`${id}-Prefix`);\n    }\n    if (suffix) {\n      labelledBy.push(`${id}-Suffix`);\n    }\n    if (verticalContent) {\n      labelledBy.push(`${id}-VerticalContent`);\n    }\n    labelledBy.unshift(labelID(id));\n\n    // Character count markup\n    let characterCountMarkup = null;\n    if (showCharacterCount) {\n      const characterCount = normalizedValue.length;\n      const characterCountText = !maxLength\n        ? characterCount\n        : `${characterCount}/${maxLength}`;\n\n      characterCountMarkup = (\n        <div\n          id={`${id}-CharacterCounter`}\n          className=\"text-xs text-muted-foreground mt-1\"\n        >\n          {characterCountText}\n        </div>\n      );\n    }\n\n    // Clear button markup\n    const clearButtonVisible = normalizedValue !== \"\";\n    const clearButtonMarkup =\n      clearButton && clearButtonVisible ? (\n        <button\n          type=\"button\"\n          className=\"absolute right-2 top-1/2 -translate-y-1/2 p-1 text-muted-foreground hover:text-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 rounded-sm\"\n          onClick={handleClearButtonClick}\n          tabIndex={-1}\n          aria-label=\"Clear\"\n        >\n          <XCircleIcon className=\"h-4 w-4\" />\n        </button>\n      ) : null;\n\n    // Prefix markup\n    const prefixMarkup = prefix ? (\n      <div\n        id={`${id}-Prefix`}\n        className=\"flex items-center px-3 text-sm text-muted-foreground border-r border-input bg-muted/50\"\n      >\n        {prefix}\n      </div>\n    ) : null;\n\n    // Suffix markup\n    const suffixMarkup = suffix ? (\n      <div\n        id={`${id}-Suffix`}\n        className=\"flex items-center px-3 text-sm text-muted-foreground border-l border-input bg-muted/50\"\n      >\n        {suffix}\n      </div>\n    ) : null;\n\n    // Loading markup\n    const loadingMarkup = loading ? (\n      <div className=\"absolute right-2 top-1/2 -translate-y-1/2\">\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-foreground\"></div>\n      </div>\n    ) : null;\n\n    // Label markup\n    const labelMarkup = !labelHidden ? (\n      <label\n        id={labelID(id)}\n        htmlFor={id}\n        className={cn(\n          \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n          requiredIndicator &&\n            \"after:content-['*'] after:ml-1 after:text-destructive\"\n        )}\n      >\n        {label}\n        {labelAction && (\n          <button\n            type=\"button\"\n            onClick={labelAction.onAction}\n            className=\"ml-2 text-xs text-primary hover:underline focus:outline-none focus:underline\"\n          >\n            {labelAction.content}\n          </button>\n        )}\n      </label>\n    ) : null;\n\n    // Help text markup\n    const helpTextMarkup = helpText ? (\n      <div id={helpTextID(id)} className=\"text-xs text-muted-foreground mt-1\">\n        {helpText}\n      </div>\n    ) : null;\n\n    // Error markup\n    const errorMarkup =\n      error && typeof error !== \"boolean\" ? (\n        <div\n          id={`${id}Error`}\n          className=\"text-xs text-destructive mt-1\"\n          role=\"alert\"\n        >\n          {error}\n        </div>\n      ) : null;\n\n    // Vertical content markup\n    const verticalContentMarkup = verticalContent ? (\n      <div\n        id={`${id}-VerticalContent`}\n        className=\"text-sm text-muted-foreground mb-2\"\n      >\n        {verticalContent}\n      </div>\n    ) : null;\n\n    // Style object for dynamic properties\n    const style: React.CSSProperties = {\n      ...(maxHeight && { maxHeight }),\n    };\n\n    // Create the input element with proper ref forwarding\n    const inputElement = React.createElement(multiline ? \"textarea\" : \"input\", {\n      ref: React.useCallback(\n        (element: HTMLInputElement | HTMLTextAreaElement | null) => {\n          // Assign to internal ref\n          if (multiline) {\n            (\n              textAreaRef as React.MutableRefObject<HTMLTextAreaElement | null>\n            ).current = element as HTMLTextAreaElement;\n          } else {\n            (\n              inputRef as React.MutableRefObject<HTMLInputElement | null>\n            ).current = element as HTMLInputElement;\n          }\n          // Forward to external ref\n          if (typeof ref === \"function\") {\n            ref(element);\n          } else if (ref) {\n            (\n              ref as React.MutableRefObject<\n                HTMLInputElement | HTMLTextAreaElement | null\n              >\n            ).current = element;\n          }\n        },\n        [multiline, ref]\n      ),\n      id,\n      name,\n      type: inputType,\n      value: normalizedValue,\n      placeholder,\n      disabled,\n      readOnly,\n      autoFocus,\n      role,\n      min,\n      max,\n      step,\n      minLength,\n      maxLength,\n      pattern,\n      inputMode,\n      spellCheck,\n      autoComplete,\n      rows: getRows(multiline),\n      size: autoSize ? 1 : undefined,\n      style: Object.keys(style).length > 0 ? style : undefined,\n      className: inputClassName,\n      \"aria-describedby\": describedBy.length\n        ? describedBy.join(\" \")\n        : undefined,\n      \"aria-labelledby\": labelledBy.join(\" \"),\n      \"aria-invalid\": Boolean(error),\n      \"aria-owns\": ariaOwns,\n      \"aria-activedescendant\": ariaActiveDescendant,\n      \"aria-autocomplete\": ariaAutocomplete,\n      \"aria-controls\": ariaControls,\n      \"aria-expanded\": ariaExpanded,\n      \"aria-required\": requiredIndicator,\n      ...normalizeAriaMultiline(multiline),\n      onChange: !suggestion ? handleChange : undefined,\n      onInput: suggestion ? handleChange : undefined,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      // Password manager disable attributes\n      \"data-1p-ignore\": autoComplete === \"off\" || undefined,\n      \"data-lpignore\": autoComplete === \"off\" || undefined,\n      \"data-form-type\": autoComplete === \"off\" ? \"other\" : undefined,\n      ...props,\n    });\n\n    // Connected fields wrapper\n    const connectedMarkup =\n      connectedLeft || connectedRight ? (\n        <div className=\"flex\">\n          {connectedLeft}\n          <div className=\"flex-1 relative\">\n            {verticalContentMarkup}\n            <div className=\"relative flex\">\n              {prefixMarkup}\n              {inputElement}\n              {suffixMarkup}\n              {clearButtonMarkup}\n              {loadingMarkup}\n            </div>\n          </div>\n          {connectedRight}\n        </div>\n      ) : (\n        <div className=\"relative\">\n          {verticalContentMarkup}\n          <div className=\"relative flex\">\n            {prefixMarkup}\n            {inputElement}\n            {suffixMarkup}\n            {clearButtonMarkup}\n            {loadingMarkup}\n          </div>\n        </div>\n      );\n\n    return (\n      <div ref={containerRef} className=\"space-y-2\">\n        {labelMarkup}\n        {connectedMarkup}\n        {errorMarkup}\n        {helpTextMarkup}\n        {characterCountMarkup}\n      </div>\n    );\n  }\n);\n\nTextField.displayName = \"TextField\";\n\n// Export variants for convenience\nexport { polarisTextFieldVariants };\nexport { polarisTextFieldVariants as textFieldVariants };\n"],"names":["setRef","ref","value","composeRefs","refs","node","hasCleanup","cleanups","cleanup","i","createSlot","ownerName","SlotClone","createSlotClone","Slot2","React","props","forwardedRef","children","slotProps","childrenArray","slottable","isSlottable","newElement","newChildren","child","jsx","Slot","childrenRef","getElementRef","props2","mergeProps","SLOTTABLE_IDENTIFIER","childProps","overrideProps","propName","slotPropValue","childPropValue","args","result","element","getter","_a","mayWarn","_b","r","t","f","n","o","clsx","falsyToString","cx","cva","base","config","_config_compoundVariants","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","key","getCompoundVariantClassNames","cvClass","cvClassName","compoundVariantOptions","SvgCheckIcon","SvgChevronDownIcon","SvgChevronUpIcon","SvgRefreshIcon","SvgXCircleIcon","CLASS_PART_SEPARATOR","createClassGroupUtils","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","className","classParts","getGroupRecursive","getGroupIdForArbitraryProperty","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","classGroupFromNextClassPart","classRest","validator","arbitraryPropertyRegex","arbitraryPropertyClassName","property","theme","prefix","getPrefixedClassGroupEntries","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","path","currentClassPartObject","pathPart","func","classGroupEntries","prefixedClassGroup","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","createParseClassName","separator","experimentalParseClassName","isSeparatorSingleCharacter","firstSeparatorCharacter","separatorLength","parseClassName","modifiers","bracketDepth","modifierStart","postfixModifierPosition","index","currentCharacter","baseClassNameWithImportantModifier","hasImportantModifier","baseClassName","maybePostfixModifierPosition","sortModifiers","sortedModifiers","unsortedModifiers","modifier","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","getClassGroupId","getConflictingClassGroupIds","classGroupsInConflict","classNames","originalClassName","variantModifier","modifierId","classId","conflictGroups","group","twJoin","argument","resolvedValue","string","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","isArbitraryNumber","isInteger","isPercent","isArbitraryValue","isTshirtSize","sizeLabels","isArbitrarySize","isNever","isArbitraryPosition","imageLabels","isArbitraryImage","isImage","isArbitraryShadow","isShadow","isAny","label","testValue","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","gradientColorStopPositions","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAutoAndArbitrary","getSpacingWithArbitrary","getLengthWithEmptyAndArbitrary","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumberAndArbitrary","twMerge","cn","inputs","polarisButtonVariants","getDisclosureIcon","disclosure","ChevronDownIcon","ChevronUpIcon","CheckIcon","Spinner","RefreshIcon","Button","size","textAlign","fullWidth","removeUnderline","icon","dataPrimaryLink","tone","id","url","external","target","download","submit","disabled","loading","pressed","accessibilityLabel","role","ariaControls","ariaExpanded","ariaDescribedBy","ariaChecked","onClick","onFocus","onBlur","onKeyPress","onKeyUp","onKeyDown","onMouseEnter","onTouchStart","onPointerDown","asChild","isLink","Component","isLoading","isDisabled","disclosureIcon","buttonClassName","commonProps","jsxs","polarisButtonGroupVariants","ButtonGroup","connectedTop","noWrap","buttonGroupClassName","getBackgroundClass","background","getBorderColorClass","getTextColorClass","color","getSpaceClass","getBorderRadiusClass","radius","getBorderWidthClass","width","getShadowClass","shadow","getResponsivePaddingClasses","spaceValue","classes","breakpoint","breakpointPrefix","getIndividualBorderWidthClass","side","widthValue","getIndividualBorderRadiusClass","corner","radiusValue","polarisBoxVariants","Box","as","borderStyle","borderEndStartRadius","borderEndEndRadius","borderStartStartRadius","borderStartEndRadius","borderBlockStartWidth","borderBlockEndWidth","borderInlineStartWidth","borderInlineEndWidth","minHeight","minWidth","maxWidth","overflowX","overflowY","paddingBlock","paddingBlockStart","paddingBlockEnd","paddingInline","paddingInlineStart","paddingInlineEnd","tabIndex","position","insetBlockStart","insetBlockEnd","insetInlineStart","insetInlineEnd","outlineColor","outlineStyle","outlineWidth","printHidden","visuallyHidden","zIndex","boxClassName","style","textVariants","Text","alignment","breakWord","fontWeight","numeric","truncate","textDecorationLine","polarisTextFieldVariants","useId","getRows","multiline","normalizeAriaMultiline","labelID","helpTextID","TextField","suffix","verticalContent","placeholder","helpText","labelAction","labelHidden","clearButton","readOnly","autoFocus","focused","error","connectedRight","connectedLeft","type","name","idProp","step","largeStep","autoComplete","max","maxLength","maxHeight","min","minLength","pattern","inputMode","spellCheck","ariaOwns","ariaActiveDescendant","ariaAutocomplete","showCharacterCount","align","requiredIndicator","monospaced","selectTextOnFocus","suggestion","autoSize","onClearButtonClick","onChange","onSpinnerChange","uniqId","focus","setFocus","inputRef","textAreaRef","containerRef","getInputRef","input","normalizedValue","inputType","inputClassName","handleChange","event","handleFocus","handleBlur","handleClearButtonClick","describedBy","labelledBy","characterCountMarkup","characterCount","characterCountText","clearButtonMarkup","XCircleIcon","prefixMarkup","suffixMarkup","loadingMarkup","labelMarkup","helpTextMarkup","errorMarkup","verticalContentMarkup","inputElement"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}