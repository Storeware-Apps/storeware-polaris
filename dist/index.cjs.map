{"version":3,"file":"index.cjs","sources":["../node_modules/.pnpm/@radix-ui+react-compose-refs@1.1.2_@types+react@18.3.23_react@18.3.1/node_modules/@radix-ui/react-compose-refs/dist/index.mjs","../node_modules/.pnpm/@radix-ui+react-slot@1.2.3_@types+react@18.3.23_react@18.3.1/node_modules/@radix-ui/react-slot/dist/index.mjs","../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs","../node_modules/.pnpm/class-variance-authority@0.7.1/node_modules/class-variance-authority/dist/index.mjs","../node_modules/.pnpm/@shopify+polaris-icons@9.3.1_react@18.3.1/node_modules/@shopify/polaris-icons/dist/icons/CheckIcon.svg.mjs","../node_modules/.pnpm/@shopify+polaris-icons@9.3.1_react@18.3.1/node_modules/@shopify/polaris-icons/dist/icons/ChevronDownIcon.svg.mjs","../node_modules/.pnpm/@shopify+polaris-icons@9.3.1_react@18.3.1/node_modules/@shopify/polaris-icons/dist/icons/ChevronUpIcon.svg.mjs","../node_modules/.pnpm/@shopify+polaris-icons@9.3.1_react@18.3.1/node_modules/@shopify/polaris-icons/dist/icons/RefreshIcon.svg.mjs","../node_modules/.pnpm/@shopify+polaris-icons@9.3.1_react@18.3.1/node_modules/@shopify/polaris-icons/dist/icons/XCircleIcon.svg.mjs","../node_modules/.pnpm/tailwind-merge@2.6.0/node_modules/tailwind-merge/dist/bundle-mjs.mjs","../src/lib/utils.ts","../src/components/Button/button.tsx","../src/components/ButtonGroup/buttonGroup.tsx","../src/components/Box/box.tsx","../src/components/Text/Text.tsx","../src/components/TextField/TextField.tsx"],"sourcesContent":["// packages/react/compose-refs/src/compose-refs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","import React from 'react';\n\nvar SvgCheckIcon = function SvgCheckIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 20 20\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M15.78 5.97a.75.75 0 0 1 0 1.06l-6.5 6.5a.75.75 0 0 1-1.06 0l-3.25-3.25a.75.75 0 1 1 1.06-1.06l2.72 2.72 5.97-5.97a.75.75 0 0 1 1.06 0Z\"\n  }));\n};\nSvgCheckIcon.displayName = \"CheckIcon\";\n\nexport { SvgCheckIcon as S };\n","import React from 'react';\n\nvar SvgChevronDownIcon = function SvgChevronDownIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 20 20\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5.72 8.47a.75.75 0 0 1 1.06 0l3.47 3.47 3.47-3.47a.75.75 0 1 1 1.06 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06Z\"\n  }));\n};\nSvgChevronDownIcon.displayName = \"ChevronDownIcon\";\n\nexport { SvgChevronDownIcon as S };\n","import React from 'react';\n\nvar SvgChevronUpIcon = function SvgChevronUpIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 20 20\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M14.53 12.28a.75.75 0 0 1-1.06 0l-3.47-3.47-3.47 3.47a.75.75 0 0 1-1.06-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06Z\"\n  }));\n};\nSvgChevronUpIcon.displayName = \"ChevronUpIcon\";\n\nexport { SvgChevronUpIcon as S };\n","import React from 'react';\n\nvar SvgRefreshIcon = function SvgRefreshIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 20 20\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.5 9.25a.75.75 0 0 0 1.5 0 3 3 0 0 1 3-3h6.566l-1.123 1.248a.75.75 0 1 0 1.114 1.004l2.25-2.5a.75.75 0 0 0-.027-1.032l-2.25-2.25a.75.75 0 1 0-1.06 1.06l.97.97h-6.44a4.5 4.5 0 0 0-4.5 4.5Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5 10.75a.75.75 0 0 0-1.5 0 3 3 0 0 1-3 3h-6.566l1.123-1.248a.75.75 0 1 0-1.114-1.004l-2.25 2.5a.75.75 0 0 0 .027 1.032l2.25 2.25a.75.75 0 0 0 1.06-1.06l-.97-.97h6.44a4.5 4.5 0 0 0 4.5-4.5Z\"\n  }));\n};\nSvgRefreshIcon.displayName = \"RefreshIcon\";\n\nexport { SvgRefreshIcon as S };\n","import React from 'react';\n\nvar SvgXCircleIcon = function SvgXCircleIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 20 20\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.03 6.97a.75.75 0 0 1 0 1.06l-1.97 1.97 1.97 1.97a.75.75 0 1 1-1.06 1.06l-1.97-1.97-1.97 1.97a.75.75 0 0 1-1.06-1.06l1.97-1.97-1.97-1.97a.75.75 0 0 1 1.06-1.06l1.97 1.97 1.97-1.97a.75.75 0 0 1 1.06 0Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10 17a7 7 0 1 0 0-14 7 7 0 0 0 0 14Zm0-1.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11Z\"\n  }));\n};\nSvgXCircleIcon.displayName = \"XCircleIcon\";\n\nexport { SvgXCircleIcon as S };\n","const CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\n * Exported for testing only\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    prefix\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\nconst getPrefixedClassGroupEntries = (classGroupEntries, prefix) => {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\n    const prefixedClassGroup = classGroup.map(classDefinition => {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n};\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst createParseClassName = config => {\n  const {\n    separator,\n    experimentalParseClassName\n  } = config;\n  const isSeparatorSingleCharacter = separator.length === 1;\n  const firstSeparatorCharacter = separator[0];\n  const separatorLength = separator.length;\n  // parseClassName inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  const parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (experimentalParseClassName) {\n    return className => experimentalParseClassName({\n      className,\n      parseClassName\n    });\n  }\n  return parseClassName;\n};\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nconst sortModifiers = modifiers => {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  const sortedModifiers = [];\n  let unsortedModifiers = [];\n  modifiers.forEach(modifier => {\n    const isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push(...unsortedModifiers.sort());\n  return sortedModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isLength = value => isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, 'length', isLengthOnly);\nconst isNumber = value => Boolean(value) && !Number.isNaN(Number(value));\nconst isArbitraryNumber = value => getIsArbitraryValue(value, 'number', isNumber);\nconst isInteger = value => Boolean(value) && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\nconst isArbitrarySize = value => getIsArbitraryValue(value, sizeLabels, isNever);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, 'position', isNever);\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\nconst isArbitraryImage = value => getIsArbitraryValue(value, imageLabels, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, '', isShadow);\nconst isAny = () => true;\nconst getIsArbitraryValue = (value, label, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isInteger,\n  isLength,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  const colors = fromTheme('colors');\n  const spacing = fromTheme('spacing');\n  const blur = fromTheme('blur');\n  const brightness = fromTheme('brightness');\n  const borderColor = fromTheme('borderColor');\n  const borderRadius = fromTheme('borderRadius');\n  const borderSpacing = fromTheme('borderSpacing');\n  const borderWidth = fromTheme('borderWidth');\n  const contrast = fromTheme('contrast');\n  const grayscale = fromTheme('grayscale');\n  const hueRotate = fromTheme('hueRotate');\n  const invert = fromTheme('invert');\n  const gap = fromTheme('gap');\n  const gradientColorStops = fromTheme('gradientColorStops');\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  const inset = fromTheme('inset');\n  const margin = fromTheme('margin');\n  const opacity = fromTheme('opacity');\n  const padding = fromTheme('padding');\n  const saturate = fromTheme('saturate');\n  const scale = fromTheme('scale');\n  const sepia = fromTheme('sepia');\n  const skew = fromTheme('skew');\n  const space = fromTheme('space');\n  const translate = fromTheme('translate');\n  const getOverscroll = () => ['auto', 'contain', 'none'];\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\n  return {\n    cacheSize: 500,\n    separator: ':',\n    theme: {\n      colors: [isAny],\n      spacing: [isLength, isArbitraryLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumberAndArbitrary(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmptyAndArbitrary(),\n      contrast: getNumberAndArbitrary(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumberAndArbitrary(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumberAndArbitrary(),\n      scale: getNumberAndArbitrary(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: [...getPositions(), isArbitraryValue]\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: [inset]\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: [inset]\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: ['auto', isInteger, isArbitraryValue]\n      }],\n      // Flexbox and Grid\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: ['normal', ...getAlign()]\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...getAlign(), 'baseline']\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': [...getAlign(), 'baseline']\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: [padding]\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: [padding]\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: [margin]\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: [margin]\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/size\n       */\n      size: [{\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\n       * Placeholder Opacity\n       * @see https://tailwindcss.com/docs/placeholder-opacity\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\n       * Text Opacity\n       * @see https://tailwindcss.com/docs/text-opacity\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...getLineStyles(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength, isArbitraryValue]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Opacity\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/background-opacity\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: [...getPositions(), isArbitraryPosition]\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\n       * Border Opacity\n       * @see https://tailwindcss.com/docs/border-opacity\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...getLineStyles(), 'hidden']\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Divide Opacity\n       * @see https://tailwindcss.com/docs/divide-opacity\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/divide-style\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-s': [{\n        'border-s': [borderColor]\n      }],\n      /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-e': [{\n        'border-e': [borderColor]\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: ['', ...getLineStyles()]\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: [isLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w': [{\n        ring: getLengthWithEmptyAndArbitrary()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/ring-color\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\n       * Ring Opacity\n       * @see https://tailwindcss.com/docs/ring-opacity\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://tailwindcss.com/docs/ring-offset-width\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://tailwindcss.com/docs/ring-offset-color\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow-color\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...getBlendModes(), 'plus-lighter', 'plus-darker']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\n       * Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\n       * Backdrop Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n      /**\n       * Tranisition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\n       * Screen Readers\n       * @see https://tailwindcss.com/docs/screen-readers\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n};\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  separator,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'separator', separator);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  for (const configKey in override) {\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\n  }\n  for (const key in extend) {\n    mergeConfigProperties(baseConfig[key], extend[key]);\n  }\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      const mergeValue = mergeObject[key];\n      if (mergeValue !== undefined) {\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\n      }\n    }\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };\n//# sourceMappingURL=bundle-mjs.mjs.map\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","/**\n * Enhanced Button component that combines Polaris API compatibility with shadcn/ui functionality\n *\n * This component provides 100% API compatibility with Shopify's Polaris Button component\n * while being built on shadcn/ui foundation with Tailwind CSS for maximum flexibility.\n */\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva } from \"class-variance-authority\";\nimport {\n  ChevronDownIcon,\n  ChevronUpIcon,\n  RefreshIcon,\n  CheckIcon,\n} from \"@shopify/polaris-icons\";\nimport { type ReactNode } from \"react\";\n\nimport { cn } from \"../../lib/utils\";\n\n// Type definitions moved from separate file following shadcn/ui pattern\nexport type ButtonSize = \"medium\" | \"large\" | \"micro\" | \"slim\";\nexport type ButtonTextAlign = \"start\" | \"center\" | \"end\" | \"left\" | \"right\";\nexport type ButtonTone = \"success\" | \"critical\";\nexport type ButtonVariant =\n  | \"default\"\n  | \"plain\"\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"monochromePlain\";\nexport type ButtonDisclosure = boolean | \"up\" | \"down\" | \"select\";\nexport type ButtonTarget = \"_blank\" | \"_self\" | \"_parent\" | \"_top\";\n\nexport interface PolarisButtonProps {\n  /** The content to display inside the button */\n  children?: string | string[] | ReactNode;\n\n  /** Changes the size of the button, giving it more or less padding */\n  size?: ButtonSize;\n\n  /** Changes the inner text alignment of the button */\n  textAlign?: ButtonTextAlign;\n\n  /** Allows the button to grow to the width of its container */\n  fullWidth?: boolean;\n\n  /** Displays the button with a disclosure icon. Defaults to `down` when set to true */\n  disclosure?: ButtonDisclosure;\n\n  /** Removes underline from button text (including on interaction) */\n  removeUnderline?: boolean;\n\n  /** Icon to display to the left of the button content */\n  icon?: ReactNode;\n\n  /** Indicates whether or not the button is the primary navigation link when rendered inside of an `IndexTable.Row` */\n  dataPrimaryLink?: boolean;\n\n  /** Sets the color treatment of the Button */\n  tone?: ButtonTone;\n\n  /** Changes the visual appearance of the Button */\n  variant?: ButtonVariant;\n\n  /** A unique identifier for the button */\n  id?: string;\n\n  /** A destination to link to, rendered in the href attribute of a link */\n  url?: string;\n\n  /** Forces url to open in a new tab */\n  external?: boolean;\n\n  /** Where to display the url */\n  target?: ButtonTarget;\n\n  /** Tells the browser to download the url instead of opening it */\n  download?: string | boolean;\n\n  /** Allows the button to submit a form */\n  submit?: boolean;\n\n  /** Disables the button, disallowing merchant interaction */\n  disabled?: boolean;\n\n  /** Replaces button text with a spinner while a background action is being performed */\n  loading?: boolean;\n\n  /** Sets the button in a pressed state */\n  pressed?: boolean;\n\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n\n  /** A valid WAI-ARIA role to define the semantic value of this element */\n  role?: string;\n\n  /** Id of the element the button controls */\n  ariaControls?: string;\n\n  /** Tells screen reader the controlled element is expanded */\n  ariaExpanded?: boolean;\n\n  /** Indicates the ID of the element that describes the button */\n  ariaDescribedBy?: string;\n\n  /** Indicates the current checked state of the button when acting as a toggle or switch */\n  ariaChecked?: \"false\" | \"true\";\n\n  /** Callback when clicked */\n  onClick?: () => unknown;\n\n  /** Callback when button becomes focused */\n  onFocus?: () => void;\n\n  /** Callback when focus leaves button */\n  onBlur?: () => void;\n\n  /** Callback when a keypress event is registered on the button */\n  onKeyPress?: (\n    event: React.KeyboardEvent<HTMLButtonElement | HTMLAnchorElement>\n  ) => void;\n\n  /** Callback when a keyup event is registered on the button */\n  onKeyUp?: (\n    event: React.KeyboardEvent<HTMLButtonElement | HTMLAnchorElement>\n  ) => void;\n\n  /** Callback when a keydown event is registered on the button */\n  onKeyDown?: (\n    event: React.KeyboardEvent<HTMLButtonElement | HTMLAnchorElement>\n  ) => void;\n\n  /** Callback when mouse enter */\n  onMouseEnter?: () => void;\n\n  /** Callback when element is touched */\n  onTouchStart?: () => void;\n\n  /** Callback when pointerdown event is being triggered */\n  onPointerDown?: (\n    event: React.PointerEvent<HTMLButtonElement | HTMLAnchorElement>\n  ) => void;\n\n  /** Additional CSS class name (inherited from shadcn/ui Button) */\n  className?: string;\n}\n\n// Enhanced Button interface that extends Polaris with shadcn/ui features\nexport interface EnhancedButtonProps extends PolarisButtonProps {\n  /** Use the Slot component for composition (shadcn/ui feature) */\n  asChild?: boolean;\n}\n\n// Re-export types for convenience (maintaining backward compatibility)\nexport type PolarisButtonSize = ButtonSize;\nexport type PolarisButtonTextAlign = ButtonTextAlign;\nexport type PolarisButtonTone = ButtonTone;\nexport type PolarisButtonVariant = ButtonVariant;\nexport type PolarisButtonDisclosure = ButtonDisclosure;\nexport type PolarisButtonTarget = ButtonTarget;\n\n// Create Polaris-specific button variants using CVA\nconst polarisButtonVariants = cva(\n  \"cursor-pointer inline-flex items-center justify-center whitespace-nowrap transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-hidden focus-visible:ring-3 focus-visible:ring-offset-2 relative m-0 border-0 font-sans !text-[13px] font-medium !leading-[20.15px] !rounded-lg\",\n  {\n    variants: {\n      variant: {\n        // Polaris default variant - white background with specific shadow styling\n        default:\n          \"bg-white text-gray-700 hover:bg-[#f6f6f6] shadow-[inset_0px_0.5px_0px_#c6c6c6,_0px_1px_1px_#c6c6c6,_inset_0.5px_0px_0px_#c6c6c6,_inset_-0.5px_0px_0px_#c6c6c6] hover:shadow-[inset_0px_0.5px_0px_#c6c6c6,_0px_1px_0px_#c6c6c6,_inset_0.5px_0px_0px_#c6c6c6,_inset_-0.5px_0px_0px_#c6c6c6] focus-visible:ring-gray-500/20\",\n        // Polaris primary variant - dark background with white text\n        primary:\n          \"bg-gray-900 text-white hover:bg-gray-800 focus-visible:ring-gray-900/20\",\n        // Polaris secondary variant - light background with dark text\n        secondary:\n          \"bg-gray-100 text-gray-900 hover:bg-gray-200 focus-visible:ring-gray-500/20\",\n        // Polaris tertiary variant - outlined button\n        tertiary:\n          \"!border !border-gray-300 bg-white text-gray-900 hover:bg-gray-50 focus-visible:ring-gray-500/20\",\n        // Polaris plain variant - link-like appearance with blue text and underline on hover\n        plain:\n          \"text-blue-600 hover:text-blue-700 hover:underline focus-visible:ring-blue-600/20 bg-transparent !shadow-none\",\n        // Polaris monochrome plain variant - muted appearance\n        monochromePlain:\n          \"text-gray-600 hover:text-gray-700 hover:underline focus-visible:ring-gray-500/20 bg-transparent !shadow-none\",\n      },\n      size: {\n        // Polaris size variants with proper dimensions\n        micro: \"!h-5 !px-2 !py-0.5 gap-1 text-xs\",\n        slim: \"!h-6 !px-2.5 !py-1 gap-1.5\",\n        medium: \"!h-6 !px-4 !py-2 gap-2\",\n        large: \"!h-7 !px-5 !py-2.5 gap-2.5 text-sm\",\n      },\n      tone: {\n        default: \"\",\n        success:\n          \"bg-green-700 text-white hover:bg-green-800 focus-visible:ring-green-700/20\",\n        critical:\n          \"bg-red-600 text-white hover:bg-red-700 focus-visible:ring-red-600/20\",\n      },\n      textAlign: {\n        start: \"justify-start text-left\",\n        center: \"justify-center text-center\",\n        end: \"justify-end text-right\",\n        left: \"justify-start text-left\",\n        right: \"justify-end text-right\",\n      },\n      fullWidth: {\n        true: \"w-full\",\n        false: \"\",\n      },\n      pressed: {\n        true: \"bg-accent text-accent-foreground\",\n        false: \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"medium\",\n      tone: \"default\",\n      textAlign: \"center\",\n      fullWidth: false,\n      pressed: false,\n    },\n  }\n);\n\n// Get disclosure icon based on disclosure prop\nconst getDisclosureIcon = (disclosure: PolarisButtonDisclosure | undefined) => {\n  if (!disclosure) return null;\n\n  if (disclosure === true || disclosure === \"down\") {\n    return <ChevronDownIcon className=\"size-4\" />;\n  }\n  if (disclosure === \"up\") {\n    return <ChevronUpIcon className=\"size-4\" />;\n  }\n  if (disclosure === \"select\") {\n    return <CheckIcon className=\"size-4\" />;\n  }\n  return null;\n};\n\n// Spinner component for loading state\nconst Spinner = () => <RefreshIcon className=\"size-4 animate-spin\" />;\n\nexport const Button = React.forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  EnhancedButtonProps\n>(\n  (\n    {\n      children,\n      size = \"medium\",\n      textAlign = \"center\",\n      fullWidth = false,\n      disclosure,\n      removeUnderline,\n      icon,\n      dataPrimaryLink,\n      tone = \"default\",\n      variant = \"default\",\n      id,\n      url,\n      external,\n      target,\n      download,\n      submit,\n      disabled,\n      loading,\n      pressed = false,\n      accessibilityLabel,\n      role,\n      ariaControls,\n      ariaExpanded,\n      ariaDescribedBy,\n      ariaChecked,\n      onClick,\n      onFocus,\n      onBlur,\n      onKeyPress,\n      onKeyUp,\n      onKeyDown,\n      onMouseEnter,\n      onTouchStart,\n      onPointerDown,\n      className,\n      asChild = false,\n      ...props\n    },\n    ref\n  ) => {\n    // Determine component type: Slot for composition, anchor for links, or button\n    const isLink = Boolean(url);\n    const Component = asChild ? Slot : isLink ? \"a\" : \"button\";\n\n    // Handle loading state\n    const isLoading = loading;\n    const isDisabled = disabled || isLoading;\n\n    // Get disclosure icon\n    const disclosureIcon = getDisclosureIcon(disclosure);\n\n    // Build className using our Polaris variants\n    const buttonClassName = cn(\n      polarisButtonVariants({\n        variant,\n        size,\n        tone:\n          tone === \"critical\"\n            ? \"critical\"\n            : tone === \"success\"\n            ? \"success\"\n            : \"default\",\n        textAlign,\n        fullWidth,\n        pressed,\n      }),\n      // Handle underline removal for plain variants\n      removeUnderline &&\n        (variant === \"plain\" || variant === \"monochromePlain\") &&\n        \"no-underline hover:no-underline\",\n      className\n    );\n\n    // Common props for both button and anchor\n    const commonProps = {\n      id,\n      className: buttonClassName,\n      disabled: isDisabled,\n      \"aria-label\": accessibilityLabel,\n      \"aria-controls\": ariaControls,\n      \"aria-expanded\": ariaExpanded,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-checked\": ariaChecked,\n      \"aria-pressed\": pressed,\n      \"data-primary-link\": dataPrimaryLink,\n      role,\n      onClick: isDisabled ? undefined : onClick,\n      onFocus,\n      onBlur,\n      onKeyPress,\n      onKeyUp,\n      onKeyDown,\n      onMouseEnter,\n      onTouchStart,\n      onPointerDown,\n      ref: ref as any,\n      ...props,\n    };\n\n    if (isLink) {\n      return (\n        <Component\n          {...commonProps}\n          href={url}\n          target={external ? \"_blank\" : target}\n          rel={external ? \"noopener noreferrer\" : undefined}\n          download={download}\n        >\n          {icon && !isLoading && (\n            <span className=\"inline-flex shrink-0\">{icon}</span>\n          )}\n          {isLoading && <Spinner />}\n          {children && <span className=\"inline-flex\">{children}</span>}\n          {disclosureIcon && !isLoading && (\n            <span className=\"inline-flex shrink-0\">{disclosureIcon}</span>\n          )}\n        </Component>\n      );\n    }\n\n    return (\n      <Component {...commonProps} type={submit ? \"submit\" : \"button\"}>\n        {icon && !isLoading && (\n          <span className=\"inline-flex shrink-0\">{icon}</span>\n        )}\n        {isLoading && <Spinner />}\n        {children && <span className=\"inline-flex\">{children}</span>}\n        {disclosureIcon && !isLoading && (\n          <span className=\"inline-flex shrink-0\">{disclosureIcon}</span>\n        )}\n      </Component>\n    );\n  }\n);\n\nButton.displayName = \"Button\";\n\n// Export variants for convenience\nexport { polarisButtonVariants };\nexport { polarisButtonVariants as buttonVariants };\n","/**\n * ButtonGroup component that matches Shopify's Polaris ButtonGroup design and API\n *\n * This component provides 100% API compatibility with Shopify's Polaris ButtonGroup component\n * while being built on shadcn/ui foundation with Tailwind CSS for maximum flexibility.\n */\n\nimport * as React from \"react\";\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"../../lib/utils\";\n\n// Type definitions following shadcn/ui pattern\nexport type ButtonGroupGap = \"extraTight\" | \"tight\" | \"loose\";\nexport type ButtonGroupVariant = \"segmented\";\n\nexport interface PolarisButtonGroupProps {\n  /** Determines the space between button group items */\n  gap?: ButtonGroupGap;\n\n  /** Styling variant for group */\n  variant?: ButtonGroupVariant;\n\n  /** Buttons will stretch/shrink to occupy the full width */\n  fullWidth?: boolean;\n\n  /** Remove top left and right border radius */\n  connectedTop?: boolean;\n\n  /** Prevent buttons in button group from wrapping to next line */\n  noWrap?: boolean;\n\n  /** Button components */\n  children?: React.ReactNode;\n\n  /** Additional CSS class name (inherited from shadcn/ui pattern) */\n  className?: string;\n}\n\n// Enhanced ButtonGroup interface that extends Polaris with shadcn/ui features\nexport interface EnhancedButtonGroupProps extends PolarisButtonGroupProps {}\n\n// Re-export types for convenience (maintaining backward compatibility)\nexport type PolarisButtonGroupGap = ButtonGroupGap;\nexport type PolarisButtonGroupVariant = ButtonGroupVariant;\n\n// Create Polaris-specific button group variants using CVA\nconst polarisButtonGroupVariants = cva(\"flex items-center\", {\n  variants: {\n    gap: {\n      extraTight: \"gap-0.5\",\n      tight: \"gap-2\",\n      loose: \"gap-4\",\n    },\n    variant: {\n      segmented:\n        \"gap-0 [&>button]:ml-[-10px] [&>button]:[background-color:#ffffff] [&>button:hover]:[background-color:#f6f6f6] [&>button]:!rounded-none [&>button:first-child]:!rounded-tl-md [&>button:first-child]:!rounded-bl-md [&>button:last-child]:!rounded-tr-md [&>button:last-child]:!rounded-br-md\",\n    },\n    fullWidth: {\n      true: \"w-full [&>*]:flex-1\",\n      false: \"\",\n    },\n    connectedTop: {\n      true: \"[&>*]:rounded-t-none\",\n      false: \"\",\n    },\n    noWrap: {\n      true: \"flex-nowrap\",\n      false: \"flex-wrap\",\n    },\n  },\n  defaultVariants: {\n    gap: \"tight\",\n    fullWidth: false,\n    connectedTop: false,\n    noWrap: false,\n  },\n});\n\nexport const ButtonGroup = React.forwardRef<\n  HTMLDivElement,\n  EnhancedButtonGroupProps\n>(\n  (\n    {\n      children,\n      gap = \"tight\",\n      variant,\n      fullWidth = false,\n      connectedTop = false,\n      noWrap = false,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    // Build className using our Polaris variants\n    // For segmented variant, we override gap to ensure no spacing between buttons\n    const buttonGroupClassName = cn(\n      polarisButtonGroupVariants({\n        gap: variant === \"segmented\" ? undefined : gap,\n        variant,\n        fullWidth,\n        connectedTop,\n        noWrap,\n      }),\n      className\n    );\n\n    return (\n      <div className={buttonGroupClassName} ref={ref} {...props}>\n        {children}\n      </div>\n    );\n  }\n);\n\nButtonGroup.displayName = \"ButtonGroup\";\n\n// Export variants for convenience\nexport { polarisButtonGroupVariants };\nexport { polarisButtonGroupVariants as buttonGroupVariants };\n","/**\n * Box component that matches Shopify's Polaris Box design and API\n *\n * This component provides 100% API compatibility with Shopify's Polaris Box component\n * while being built on shadcn/ui foundation with Tailwind CSS for maximum flexibility.\n */\n\nimport * as React from \"react\";\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"../../lib/utils\";\n\n// Type definitions following Polaris design tokens\n\n// Color background aliases based on Polaris tokens\nexport type ColorBackgroundAlias =\n  | \"bg\"\n  | \"bg-inverse\"\n  | \"bg-surface\"\n  | \"bg-surface-hover\"\n  | \"bg-surface-active\"\n  | \"bg-surface-selected\"\n  | \"bg-surface-disabled\"\n  | \"bg-surface-secondary\"\n  | \"bg-surface-secondary-hover\"\n  | \"bg-surface-secondary-active\"\n  | \"bg-surface-secondary-selected\"\n  | \"bg-surface-tertiary\"\n  | \"bg-surface-tertiary-hover\"\n  | \"bg-surface-tertiary-active\"\n  | \"bg-surface-brand\"\n  | \"bg-surface-brand-hover\"\n  | \"bg-surface-brand-active\"\n  | \"bg-surface-brand-selected\"\n  | \"bg-surface-info\"\n  | \"bg-surface-info-hover\"\n  | \"bg-surface-info-active\"\n  | \"bg-surface-success\"\n  | \"bg-surface-success-hover\"\n  | \"bg-surface-success-active\"\n  | \"bg-surface-caution\"\n  | \"bg-surface-caution-hover\"\n  | \"bg-surface-caution-active\"\n  | \"bg-surface-warning\"\n  | \"bg-surface-warning-hover\"\n  | \"bg-surface-warning-active\"\n  | \"bg-surface-critical\"\n  | \"bg-surface-critical-hover\"\n  | \"bg-surface-critical-active\"\n  | \"bg-surface-emphasis\"\n  | \"bg-surface-emphasis-hover\"\n  | \"bg-surface-emphasis-active\"\n  | \"bg-surface-magic\"\n  | \"bg-surface-magic-hover\"\n  | \"bg-surface-magic-active\"\n  | \"bg-surface-inverse\"\n  | \"bg-surface-transparent\"\n  | \"bg-fill\"\n  | \"bg-fill-hover\"\n  | \"bg-fill-active\"\n  | \"bg-fill-selected\"\n  | \"bg-fill-disabled\"\n  | \"bg-fill-secondary\"\n  | \"bg-fill-secondary-hover\"\n  | \"bg-fill-secondary-active\"\n  | \"bg-fill-secondary-selected\"\n  | \"bg-fill-tertiary\"\n  | \"bg-fill-tertiary-hover\"\n  | \"bg-fill-tertiary-active\"\n  | \"bg-fill-brand\"\n  | \"bg-fill-brand-hover\"\n  | \"bg-fill-brand-active\"\n  | \"bg-fill-brand-selected\"\n  | \"bg-fill-brand-disabled\"\n  | \"bg-fill-info\"\n  | \"bg-fill-info-hover\"\n  | \"bg-fill-info-active\"\n  | \"bg-fill-info-secondary\"\n  | \"bg-fill-success\"\n  | \"bg-fill-success-hover\"\n  | \"bg-fill-success-active\"\n  | \"bg-fill-success-secondary\"\n  | \"bg-fill-warning\"\n  | \"bg-fill-warning-hover\"\n  | \"bg-fill-warning-active\"\n  | \"bg-fill-warning-secondary\"\n  | \"bg-fill-caution\"\n  | \"bg-fill-caution-hover\"\n  | \"bg-fill-caution-active\"\n  | \"bg-fill-caution-secondary\"\n  | \"bg-fill-critical\"\n  | \"bg-fill-critical-hover\"\n  | \"bg-fill-critical-active\"\n  | \"bg-fill-critical-selected\"\n  | \"bg-fill-critical-secondary\"\n  | \"bg-fill-emphasis\"\n  | \"bg-fill-emphasis-hover\"\n  | \"bg-fill-emphasis-active\"\n  | \"bg-fill-magic\"\n  | \"bg-fill-magic-secondary\"\n  | \"bg-fill-magic-secondary-hover\"\n  | \"bg-fill-magic-secondary-active\"\n  | \"bg-fill-inverse\"\n  | \"bg-fill-inverse-hover\"\n  | \"bg-fill-inverse-active\"\n  | \"bg-fill-transparent\"\n  | \"bg-fill-transparent-hover\"\n  | \"bg-fill-transparent-active\"\n  | \"bg-fill-transparent-selected\"\n  | \"bg-fill-transparent-secondary\"\n  | \"bg-fill-transparent-secondary-hover\"\n  | \"bg-fill-transparent-secondary-active\";\n\n// Color border aliases based on Polaris tokens\nexport type ColorBorderAlias =\n  | \"border\"\n  | \"border-hover\"\n  | \"border-disabled\"\n  | \"border-secondary\"\n  | \"border-tertiary\"\n  | \"border-focus\"\n  | \"border-brand\"\n  | \"border-info\"\n  | \"border-success\"\n  | \"border-caution\"\n  | \"border-warning\"\n  | \"border-critical\"\n  | \"border-critical-secondary\"\n  | \"border-emphasis\"\n  | \"border-emphasis-hover\"\n  | \"border-emphasis-active\"\n  | \"border-magic\"\n  | \"border-magic-secondary\"\n  | \"border-magic-secondary-hover\"\n  | \"border-inverse\"\n  | \"border-inverse-hover\"\n  | \"border-inverse-active\";\n\n// Color text aliases based on Polaris tokens\nexport type ColorTextAlias =\n  | \"text\"\n  | \"text-secondary\"\n  | \"text-disabled\"\n  | \"text-link\"\n  | \"text-link-hover\"\n  | \"text-link-active\"\n  | \"text-brand\"\n  | \"text-brand-hover\"\n  | \"text-brand-on-bg-fill\"\n  | \"text-brand-on-bg-fill-hover\"\n  | \"text-brand-on-bg-fill-active\"\n  | \"text-brand-on-bg-fill-disabled\"\n  | \"text-info\"\n  | \"text-info-hover\"\n  | \"text-info-active\"\n  | \"text-info-secondary\"\n  | \"text-info-on-bg-fill\"\n  | \"text-success\"\n  | \"text-success-hover\"\n  | \"text-success-active\"\n  | \"text-success-secondary\"\n  | \"text-success-on-bg-fill\"\n  | \"text-caution\"\n  | \"text-caution-hover\"\n  | \"text-caution-active\"\n  | \"text-caution-secondary\"\n  | \"text-caution-on-bg-fill\"\n  | \"text-warning\"\n  | \"text-warning-hover\"\n  | \"text-warning-active\"\n  | \"text-warning-secondary\"\n  | \"text-warning-on-bg-fill\"\n  | \"text-critical\"\n  | \"text-critical-hover\"\n  | \"text-critical-active\"\n  | \"text-critical-secondary\"\n  | \"text-critical-on-bg-fill\"\n  | \"text-emphasis\"\n  | \"text-emphasis-hover\"\n  | \"text-emphasis-active\"\n  | \"text-emphasis-on-bg-fill\"\n  | \"text-emphasis-on-bg-fill-hover\"\n  | \"text-emphasis-on-bg-fill-active\"\n  | \"text-magic\"\n  | \"text-magic-secondary\"\n  | \"text-magic-on-bg-fill\"\n  | \"text-inverse\"\n  | \"text-inverse-secondary\"\n  | \"text-link-inverse\";\n\n// Space scale based on Polaris tokens\nexport type SpaceScale =\n  | \"0\"\n  | \"025\"\n  | \"050\"\n  | \"100\"\n  | \"150\"\n  | \"200\"\n  | \"300\"\n  | \"400\"\n  | \"500\"\n  | \"600\"\n  | \"800\"\n  | \"1000\"\n  | \"1200\"\n  | \"1600\"\n  | \"2000\"\n  | \"2400\"\n  | \"2800\"\n  | \"3200\";\n\n// Border radius aliases and scale based on Polaris tokens\nexport type BorderRadiusAliasOrScale =\n  | \"0\"\n  | \"050\"\n  | \"100\"\n  | \"150\"\n  | \"200\"\n  | \"300\"\n  | \"400\"\n  | \"500\"\n  | \"750\"\n  | \"full\";\n\n// Border width scale based on Polaris tokens\nexport type BorderWidthScale = \"0\" | \"0165\" | \"025\" | \"050\" | \"100\";\n\n// Shadow aliases and scale based on Polaris tokens\nexport type ShadowAliasOrScale =\n  | \"0\"\n  | \"100\"\n  | \"200\"\n  | \"300\"\n  | \"400\"\n  | \"500\"\n  | \"600\"\n  | \"bevel-100\"\n  | \"inset-100\"\n  | \"inset-200\"\n  | \"button\"\n  | \"button-hover\"\n  | \"button-inset\"\n  | \"button-primary\"\n  | \"button-primary-hover\"\n  | \"button-primary-inset\"\n  | \"button-primary-critical\"\n  | \"button-primary-critical-hover\"\n  | \"button-primary-critical-inset\"\n  | \"button-primary-success\"\n  | \"button-primary-success-hover\"\n  | \"button-primary-success-inset\"\n  | \"border-inset\";\n\n// Breakpoints aliases based on Polaris tokens\nexport type BreakpointsAlias = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\n\n// Responsive type for spacing and other responsive props\nexport type ResponsiveSpacing =\n  | SpaceScale\n  | { [Breakpoint in BreakpointsAlias]?: SpaceScale };\n\n// Polaris Box Props interface - matches Shopify Polaris Box component exactly\nexport interface PolarisBoxProps {\n  /** Content to display inside the box */\n  children?: React.ReactNode;\n\n  /** HTML Element type */\n  as?: \"div\" | \"span\" | \"section\" | \"legend\" | \"ul\" | \"li\";\n\n  /** Background color */\n  background?: ColorBackgroundAlias;\n\n  /** Border color */\n  borderColor?: ColorBorderAlias | \"transparent\";\n\n  /** Border style */\n  borderStyle?: \"solid\" | \"dashed\";\n\n  /** Border radius */\n  borderRadius?: BorderRadiusAliasOrScale;\n\n  /** Vertical end horizontal start border radius */\n  borderEndStartRadius?: BorderRadiusAliasOrScale;\n\n  /** Vertical end horizontal end border radius */\n  borderEndEndRadius?: BorderRadiusAliasOrScale;\n\n  /** Vertical start horizontal start border radius */\n  borderStartStartRadius?: BorderRadiusAliasOrScale;\n\n  /** Vertical start horizontal end border radius */\n  borderStartEndRadius?: BorderRadiusAliasOrScale;\n\n  /** Border width */\n  borderWidth?: BorderWidthScale;\n\n  /** Vertical start border width */\n  borderBlockStartWidth?: BorderWidthScale;\n\n  /** Vertical end border width */\n  borderBlockEndWidth?: BorderWidthScale;\n\n  /** Horizontal start border width */\n  borderInlineStartWidth?: BorderWidthScale;\n\n  /** Horizontal end border width */\n  borderInlineEndWidth?: BorderWidthScale;\n\n  /** Color of children */\n  color?: ColorTextAlias;\n\n  /** HTML id attribute */\n  id?: string;\n\n  /** Minimum height of container */\n  minHeight?: string;\n\n  /** Minimum width of container */\n  minWidth?: string;\n\n  /** Maximum width of container */\n  maxWidth?: string;\n\n  /** Clip horizontal content of children */\n  overflowX?: \"hidden\" | \"scroll\" | \"clip\";\n\n  /** Clip vertical content of children */\n  overflowY?: \"hidden\" | \"scroll\" | \"clip\";\n\n  /** Spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  padding?: ResponsiveSpacing;\n\n  /** Vertical start and end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingBlock?: ResponsiveSpacing;\n\n  /** Vertical start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingBlockStart?: ResponsiveSpacing;\n\n  /** Vertical end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingBlockEnd?: ResponsiveSpacing;\n\n  /** Horizontal start and end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingInline?: ResponsiveSpacing;\n\n  /** Horizontal start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingInlineStart?: ResponsiveSpacing;\n\n  /** Horizontal end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes */\n  paddingInlineEnd?: ResponsiveSpacing;\n\n  /** Aria role */\n  role?: string;\n\n  /** Shadow on box */\n  shadow?: ShadowAliasOrScale;\n\n  /** Set tab order */\n  tabIndex?: number;\n\n  /** Width of container */\n  width?: string;\n\n  /** Position of box */\n  position?: \"relative\" | \"absolute\" | \"fixed\" | \"sticky\";\n\n  /** Top position of box */\n  insetBlockStart?: ResponsiveSpacing;\n\n  /** Bottom position of box */\n  insetBlockEnd?: ResponsiveSpacing;\n\n  /** Left position of box */\n  insetInlineStart?: ResponsiveSpacing;\n\n  /** Right position of box */\n  insetInlineEnd?: ResponsiveSpacing;\n\n  /** Opacity of box */\n  opacity?: string;\n\n  /** Outline color */\n  outlineColor?: ColorBorderAlias;\n\n  /** Outline style */\n  outlineStyle?: \"solid\" | \"dashed\";\n\n  /** Outline width */\n  outlineWidth?: BorderWidthScale;\n\n  /** Visually hide the contents during print */\n  printHidden?: boolean;\n\n  /** Visually hide the contents (still announced by screenreader) */\n  visuallyHidden?: boolean;\n\n  /** z-index of box */\n  zIndex?: string;\n\n  /** Additional CSS class name (inherited from shadcn/ui pattern) */\n  className?: string;\n}\n\n// Enhanced Box interface that extends Polaris with shadcn/ui features\nexport interface EnhancedBoxProps extends PolarisBoxProps {\n  // No additional props needed for now, but this allows for future extensions\n}\n\n// Utility function to convert Polaris color tokens to Tailwind classes\nconst getBackgroundClass = (background?: ColorBackgroundAlias): string => {\n  if (!background) return \"\";\n\n  const backgroundMap: Record<ColorBackgroundAlias, string> = {\n    bg: \"bg-[rgb(241,241,241)]\",\n    \"bg-inverse\": \"bg-[rgb(26,26,26)]\",\n    \"bg-surface\": \"bg-white\",\n    \"bg-surface-hover\": \"bg-[rgb(247,247,247)]\",\n    \"bg-surface-active\": \"bg-[rgb(243,243,243)]\",\n    \"bg-surface-selected\": \"bg-[rgb(241,241,241)]\",\n    \"bg-surface-disabled\": \"bg-black/5\",\n    \"bg-surface-secondary\": \"bg-[rgb(247,247,247)]\",\n    \"bg-surface-secondary-hover\": \"bg-[rgb(241,241,241)]\",\n    \"bg-surface-secondary-active\": \"bg-[rgb(235,235,235)]\",\n    \"bg-surface-secondary-selected\": \"bg-[rgb(235,235,235)]\",\n    \"bg-surface-tertiary\": \"bg-[rgb(243,243,243)]\",\n    \"bg-surface-tertiary-hover\": \"bg-[rgb(235,235,235)]\",\n    \"bg-surface-tertiary-active\": \"bg-[rgb(227,227,227)]\",\n    \"bg-surface-brand\": \"bg-[rgb(227,227,227)]\",\n    \"bg-surface-brand-hover\": \"bg-[rgb(235,235,235)]\",\n    \"bg-surface-brand-active\": \"bg-[rgb(241,241,241)]\",\n    \"bg-surface-brand-selected\": \"bg-[rgb(241,241,241)]\",\n    \"bg-surface-info\": \"bg-[rgb(234,244,255)]\",\n    \"bg-surface-info-hover\": \"bg-[rgb(224,240,255)]\",\n    \"bg-surface-info-active\": \"bg-[rgb(202,230,255)]\",\n    \"bg-surface-success\": \"bg-[rgb(205,254,212)]\",\n    \"bg-surface-success-hover\": \"bg-[rgb(175,254,191)]\",\n    \"bg-surface-success-active\": \"bg-[rgb(146,252,172)]\",\n    \"bg-surface-caution\": \"bg-[rgb(255,248,219)]\",\n    \"bg-surface-caution-hover\": \"bg-[rgb(255,244,191)]\",\n    \"bg-surface-caution-active\": \"bg-[rgb(255,239,157)]\",\n    \"bg-surface-warning\": \"bg-[rgb(255,241,227)]\",\n    \"bg-surface-warning-hover\": \"bg-[rgb(255,235,213)]\",\n    \"bg-surface-warning-active\": \"bg-[rgb(255,228,198)]\",\n    \"bg-surface-critical\": \"bg-[rgb(254,232,235)]\",\n    \"bg-surface-critical-hover\": \"bg-[rgb(254,225,230)]\",\n    \"bg-surface-critical-active\": \"bg-[rgb(254,217,223)]\",\n    \"bg-surface-emphasis\": \"bg-[rgb(240,242,255)]\",\n    \"bg-surface-emphasis-hover\": \"bg-[rgb(234,237,255)]\",\n    \"bg-surface-emphasis-active\": \"bg-[rgb(226,231,255)]\",\n    \"bg-surface-magic\": \"bg-[rgb(248,247,255)]\",\n    \"bg-surface-magic-hover\": \"bg-[rgb(243,241,255)]\",\n    \"bg-surface-magic-active\": \"bg-[rgb(233,229,255)]\",\n    \"bg-surface-inverse\": \"bg-[rgb(48,48,48)]\",\n    \"bg-surface-transparent\": \"bg-transparent\",\n    \"bg-fill\": \"bg-white\",\n    \"bg-fill-hover\": \"bg-[rgb(250,250,250)]\",\n    \"bg-fill-active\": \"bg-[rgb(247,247,247)]\",\n    \"bg-fill-selected\": \"bg-[rgb(204,204,204)]\",\n    \"bg-fill-disabled\": \"bg-black/5\",\n    \"bg-fill-secondary\": \"bg-[rgb(241,241,241)]\",\n    \"bg-fill-secondary-hover\": \"bg-[rgb(235,235,235)]\",\n    \"bg-fill-secondary-active\": \"bg-[rgb(227,227,227)]\",\n    \"bg-fill-secondary-selected\": \"bg-[rgb(227,227,227)]\",\n    \"bg-fill-tertiary\": \"bg-[rgb(227,227,227)]\",\n    \"bg-fill-tertiary-hover\": \"bg-[rgb(212,212,212)]\",\n    \"bg-fill-tertiary-active\": \"bg-[rgb(204,204,204)]\",\n    \"bg-fill-brand\": \"bg-[rgb(48,48,48)]\",\n    \"bg-fill-brand-hover\": \"bg-[rgb(26,26,26)]\",\n    \"bg-fill-brand-active\": \"bg-[rgb(26,26,26)]\",\n    \"bg-fill-brand-selected\": \"bg-[rgb(48,48,48)]\",\n    \"bg-fill-brand-disabled\": \"bg-black/[0.17]\",\n    \"bg-fill-info\": \"bg-[rgb(145,208,255)]\",\n    \"bg-fill-info-hover\": \"bg-[rgb(81,192,255)]\",\n    \"bg-fill-info-active\": \"bg-[rgb(0,148,213)]\",\n    \"bg-fill-info-secondary\": \"bg-[rgb(213,235,255)]\",\n    \"bg-fill-success\": \"bg-[rgb(4,123,93)]\",\n    \"bg-fill-success-hover\": \"bg-[rgb(3,94,76)]\",\n    \"bg-fill-success-active\": \"bg-[rgb(1,75,64)]\",\n    \"bg-fill-success-secondary\": \"bg-[rgb(175,254,191)]\",\n    \"bg-fill-warning\": \"bg-[rgb(255,184,0)]\",\n    \"bg-fill-warning-hover\": \"bg-[rgb(229,165,0)]\",\n    \"bg-fill-warning-active\": \"bg-[rgb(178,132,0)]\",\n    \"bg-fill-warning-secondary\": \"bg-[rgb(255,214,164)]\",\n    \"bg-fill-caution\": \"bg-[rgb(255,230,0)]\",\n    \"bg-fill-caution-hover\": \"bg-[rgb(234,211,0)]\",\n    \"bg-fill-caution-active\": \"bg-[rgb(225,203,0)]\",\n    \"bg-fill-caution-secondary\": \"bg-[rgb(255,235,120)]\",\n    \"bg-fill-critical\": \"bg-[rgb(199,10,36)]\",\n    \"bg-fill-critical-hover\": \"bg-[rgb(163,10,36)]\",\n    \"bg-fill-critical-active\": \"bg-[rgb(142,11,33)]\",\n    \"bg-fill-critical-selected\": \"bg-[rgb(142,11,33)]\",\n    \"bg-fill-critical-secondary\": \"bg-[rgb(254,209,215)]\",\n    \"bg-fill-emphasis\": \"bg-[rgb(0,91,211)]\",\n    \"bg-fill-emphasis-hover\": \"bg-[rgb(0,66,153)]\",\n    \"bg-fill-emphasis-active\": \"bg-[rgb(0,46,106)]\",\n    \"bg-fill-magic\": \"bg-[rgb(128,81,255)]\",\n    \"bg-fill-magic-secondary\": \"bg-[rgb(233,229,255)]\",\n    \"bg-fill-magic-secondary-hover\": \"bg-[rgb(228,222,255)]\",\n    \"bg-fill-magic-secondary-active\": \"bg-[rgb(223,217,255)]\",\n    \"bg-fill-inverse\": \"bg-[rgb(48,48,48)]\",\n    \"bg-fill-inverse-hover\": \"bg-[rgb(74,74,74)]\",\n    \"bg-fill-inverse-active\": \"bg-[rgb(97,97,97)]\",\n    \"bg-fill-transparent\": \"bg-black/[0.02]\",\n    \"bg-fill-transparent-hover\": \"bg-black/5\",\n    \"bg-fill-transparent-active\": \"bg-black/[0.08]\",\n    \"bg-fill-transparent-selected\": \"bg-black/[0.08]\",\n    \"bg-fill-transparent-secondary\": \"bg-black/[0.06]\",\n    \"bg-fill-transparent-secondary-hover\": \"bg-black/[0.08]\",\n    \"bg-fill-transparent-secondary-active\": \"bg-black/[0.11]\",\n  };\n\n  return backgroundMap[background] || \"\";\n};\n\n// Utility function to convert Polaris border color tokens to Tailwind classes\nconst getBorderColorClass = (\n  borderColor?: ColorBorderAlias | \"transparent\"\n): string => {\n  if (!borderColor) return \"\";\n  if (borderColor === \"transparent\") return \"border-transparent\";\n\n  const borderColorMap: Record<ColorBorderAlias, string> = {\n    border: \"border-[rgb(227,227,227)]\",\n    \"border-hover\": \"border-[rgb(204,204,204)]\",\n    \"border-disabled\": \"border-[rgb(235,235,235)]\",\n    \"border-secondary\": \"border-[rgb(235,235,235)]\",\n    \"border-tertiary\": \"border-[rgb(204,204,204)]\",\n    \"border-focus\": \"border-[rgb(0,91,211)]\",\n    \"border-brand\": \"border-[rgb(227,227,227)]\",\n    \"border-info\": \"border-[rgb(168,216,255)]\",\n    \"border-success\": \"border-[rgb(146,252,172)]\",\n    \"border-caution\": \"border-[rgb(255,235,120)]\",\n    \"border-warning\": \"border-[rgb(255,200,121)]\",\n    \"border-critical\": \"border-[rgb(254,193,199)]\",\n    \"border-critical-secondary\": \"border-[rgb(142,11,33)]\",\n    \"border-emphasis\": \"border-[rgb(0,91,211)]\",\n    \"border-emphasis-hover\": \"border-[rgb(0,66,153)]\",\n    \"border-emphasis-active\": \"border-[rgb(0,46,106)]\",\n    \"border-magic\": \"border-[rgb(228,222,255)]\",\n    \"border-magic-secondary\": \"border-[rgb(148,116,255)]\",\n    \"border-magic-secondary-hover\": \"border-[rgb(128,81,255)]\",\n    \"border-inverse\": \"border-[rgb(97,97,97)]\",\n    \"border-inverse-hover\": \"border-[rgb(204,204,204)]\",\n    \"border-inverse-active\": \"border-[rgb(227,227,227)]\",\n  };\n\n  return borderColorMap[borderColor] || \"\";\n};\n\n// Utility function to convert Polaris text color tokens to Tailwind classes\nconst getTextColorClass = (color?: ColorTextAlias): string => {\n  if (!color) return \"\";\n\n  const textColorMap: Record<ColorTextAlias, string> = {\n    text: \"text-[rgb(48,48,48)]\",\n    \"text-secondary\": \"text-[rgb(97,97,97)]\",\n    \"text-disabled\": \"text-[rgb(181,181,181)]\",\n    \"text-link\": \"text-[rgb(0,91,211)]\",\n    \"text-link-hover\": \"text-[rgb(0,66,153)]\",\n    \"text-link-active\": \"text-[rgb(0,46,106)]\",\n    \"text-brand\": \"text-[rgb(74,74,74)]\",\n    \"text-brand-hover\": \"text-[rgb(48,48,48)]\",\n    \"text-brand-on-bg-fill\": \"text-white\",\n    \"text-brand-on-bg-fill-hover\": \"text-[rgb(227,227,227)]\",\n    \"text-brand-on-bg-fill-active\": \"text-[rgb(204,204,204)]\",\n    \"text-brand-on-bg-fill-disabled\": \"text-white\",\n    \"text-info\": \"text-[rgb(0,58,90)]\",\n    \"text-info-hover\": \"text-[rgb(0,58,90)]\",\n    \"text-info-active\": \"text-[rgb(0,33,51)]\",\n    \"text-info-secondary\": \"text-[rgb(0,124,180)]\",\n    \"text-info-on-bg-fill\": \"text-[rgb(0,33,51)]\",\n    \"text-success\": \"text-[rgb(1,75,64)]\",\n    \"text-success-hover\": \"text-[rgb(7,54,48)]\",\n    \"text-success-active\": \"text-[rgb(2,38,34)]\",\n    \"text-success-secondary\": \"text-[rgb(4,123,93)]\",\n    \"text-success-on-bg-fill\": \"text-[rgb(250,255,251)]\",\n    \"text-caution\": \"text-[rgb(79,71,0)]\",\n    \"text-caution-hover\": \"text-[rgb(51,46,0)]\",\n    \"text-caution-active\": \"text-[rgb(31,28,0)]\",\n    \"text-caution-secondary\": \"text-[rgb(130,117,0)]\",\n    \"text-caution-on-bg-fill\": \"text-[rgb(51,46,0)]\",\n    \"text-warning\": \"text-[rgb(94,66,0)]\",\n    \"text-warning-hover\": \"text-[rgb(65,45,0)]\",\n    \"text-warning-active\": \"text-[rgb(37,26,0)]\",\n    \"text-warning-secondary\": \"text-[rgb(149,111,0)]\",\n    \"text-warning-on-bg-fill\": \"text-[rgb(37,26,0)]\",\n    \"text-critical\": \"text-[rgb(142,11,33)]\",\n    \"text-critical-hover\": \"text-[rgb(95,7,22)]\",\n    \"text-critical-active\": \"text-[rgb(47,4,11)]\",\n    \"text-critical-secondary\": \"text-[rgb(199,10,36)]\",\n    \"text-critical-on-bg-fill\": \"text-[rgb(255,250,251)]\",\n    \"text-emphasis\": \"text-[rgb(0,91,211)]\",\n    \"text-emphasis-hover\": \"text-[rgb(0,66,153)]\",\n    \"text-emphasis-active\": \"text-[rgb(0,46,106)]\",\n    \"text-emphasis-on-bg-fill\": \"text-[rgb(252,253,255)]\",\n    \"text-emphasis-on-bg-fill-hover\": \"text-[rgb(226,231,255)]\",\n    \"text-emphasis-on-bg-fill-active\": \"text-[rgb(213,220,255)]\",\n    \"text-magic\": \"text-[rgb(87,0,209)]\",\n    \"text-magic-secondary\": \"text-[rgb(113,38,255)]\",\n    \"text-magic-on-bg-fill\": \"text-[rgb(253,253,255)]\",\n    \"text-inverse\": \"text-[rgb(227,227,227)]\",\n    \"text-inverse-secondary\": \"text-[rgb(181,181,181)]\",\n    \"text-link-inverse\": \"text-[rgb(197,208,255)]\",\n  };\n\n  return textColorMap[color] || \"\";\n};\n\n// Utility function to convert Polaris space tokens to Tailwind classes\nconst getSpaceClass = (space?: SpaceScale): string => {\n  if (!space) return \"\";\n\n  const spaceMap: Record<SpaceScale, string> = {\n    \"0\": \"0\",\n    \"025\": \"px\",\n    \"050\": \"0.5\",\n    \"100\": \"1\",\n    \"150\": \"1.5\",\n    \"200\": \"2\",\n    \"300\": \"3\",\n    \"400\": \"4\",\n    \"500\": \"5\",\n    \"600\": \"6\",\n    \"800\": \"8\",\n    \"1000\": \"10\",\n    \"1200\": \"12\",\n    \"1600\": \"16\",\n    \"2000\": \"20\",\n    \"2400\": \"24\",\n    \"2800\": \"28\",\n    \"3200\": \"32\",\n  };\n\n  return spaceMap[space] || \"\";\n};\n\n// Utility function to convert Polaris border radius tokens to Tailwind classes\nconst getBorderRadiusClass = (radius?: BorderRadiusAliasOrScale): string => {\n  if (!radius) return \"\";\n\n  const radiusMap: Record<BorderRadiusAliasOrScale, string> = {\n    \"0\": \"rounded-none\",\n    \"050\": \"rounded-sm\",\n    \"100\": \"rounded\",\n    \"150\": \"rounded-md\",\n    \"200\": \"rounded-lg\",\n    \"300\": \"rounded-xl\",\n    \"400\": \"rounded-2xl\",\n    \"500\": \"rounded-3xl\",\n    \"750\": \"rounded-[30px]\",\n    full: \"rounded-full\",\n  };\n\n  return radiusMap[radius] || \"\";\n};\n\n// Utility function to convert Polaris border width tokens to Tailwind classes\nconst getBorderWidthClass = (width?: BorderWidthScale): string => {\n  if (!width) return \"\";\n\n  const widthMap: Record<BorderWidthScale, string> = {\n    \"0\": \"border-0\",\n    \"0165\": \"border-[0.66px]\",\n    \"025\": \"border\",\n    \"050\": \"border-2\",\n    \"100\": \"border-4\",\n  };\n\n  return widthMap[width] || \"\";\n};\n\n// Utility function to convert Polaris shadow tokens to Tailwind classes\nconst getShadowClass = (shadow?: ShadowAliasOrScale): string => {\n  if (!shadow) return \"\";\n\n  const shadowMap: Record<ShadowAliasOrScale, string> = {\n    \"0\": \"shadow-none\",\n    \"100\": \"shadow-[0px_1px_0px_0px_rgba(26,26,26,0.07)]\",\n    \"200\": \"shadow-[0px_3px_1px_-1px_rgba(26,26,26,0.07)]\",\n    \"300\": \"shadow-[0px_4px_6px_-2px_rgba(26,26,26,0.20)]\",\n    \"400\": \"shadow-[0px_8px_16px_-4px_rgba(26,26,26,0.22)]\",\n    \"500\": \"shadow-[0px_12px_20px_-8px_rgba(26,26,26,0.24)]\",\n    \"600\": \"shadow-[0px_20px_20px_-8px_rgba(26,26,26,0.28)]\",\n    \"bevel-100\":\n      \"shadow-[1px_0px_0px_0px_rgba(0,0,0,0.13)_inset,_-1px_0px_0px_0px_rgba(0,0,0,0.13)_inset,_0px_-1px_0px_0px_rgba(0,0,0,0.17)_inset,_0px_1px_0px_0px_rgba(204,204,204,0.5)_inset]\",\n    \"inset-100\":\n      \"shadow-[0px_1px_2px_0px_rgba(26,26,26,0.15)_inset,_0px_1px_1px_0px_rgba(26,26,26,0.15)_inset]\",\n    \"inset-200\":\n      \"shadow-[0px_2px_1px_0px_rgba(26,26,26,0.20)_inset,_1px_0px_1px_0px_rgba(26,26,26,0.12)_inset,_-1px_0px_1px_0px_rgba(26,26,26,0.12)_inset]\",\n    button:\n      \"shadow-[0px_-1px_0px_0px_#b5b5b5_inset,_0px_0px_0px_1px_rgba(0,0,0,0.1)_inset,_0px_0.5px_0px_1.5px_#FFF_inset]\",\n    \"button-hover\":\n      \"shadow-[0px_1px_0px_0px_#EBEBEB_inset,_-1px_0px_0px_0px_#EBEBEB_inset,_1px_0px_0px_0px_#EBEBEB_inset,_0px_-1px_0px_0px_#CCC_inset]\",\n    \"button-inset\":\n      \"shadow-[-1px_0px_1px_0px_rgba(26,26,26,0.122)_inset,_1px_0px_1px_0px_rgba(26,26,26,0.122)_inset,_0px_2px_1px_0px_rgba(26,26,26,0.2)_inset]\",\n    \"button-primary\":\n      \"shadow-[0px_-1px_0px_1px_rgba(0,0,0,0.8)_inset,_0px_0px_0px_1px_rgba(48,48,48,1)_inset,_0px_0.5px_0px_1.5px_rgba(255,255,255,0.25)_inset]\",\n    \"button-primary-hover\":\n      \"shadow-[0px_1px_0px_0px_rgba(255,255,255,0.24)_inset,_1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_-1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_0px_-1px_0px_0px_#000_inset,_0px_-1px_0px_1px_#1A1A1A]\",\n    \"button-primary-inset\": \"shadow-[0px_3px_0px_0px_rgb(0,0,0)_inset]\",\n    \"button-primary-critical\":\n      \"shadow-[0px_-1px_0px_1px_rgba(142,31,11,0.8)_inset,_0px_0px_0px_1px_rgba(181,38,11,0.8)_inset,_0px_0.5px_0px_1.5px_rgba(255,255,255,0.349)_inset]\",\n    \"button-primary-critical-hover\":\n      \"shadow-[0px_1px_0px_0px_rgba(255,255,255,0.48)_inset,_1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_-1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_0px_-1.5px_0px_0px_rgba(0,0,0,0.25)_inset]\",\n    \"button-primary-critical-inset\":\n      \"shadow-[-1px_0px_1px_0px_rgba(0,0,0,0.2)_inset,_1px_0px_1px_0px_rgba(0,0,0,0.2)_inset,_0px_2px_0px_0px_rgba(0,0,0,0.6)_inset]\",\n    \"button-primary-success\":\n      \"shadow-[0px_-1px_0px_1px_rgba(12,81,50,0.8)_inset,_0px_0px_0px_1px_rgba(19,111,69,0.8)_inset,_0px_0.5px_0px_1.5px_rgba(255,255,255,0.251)_inset]\",\n    \"button-primary-success-hover\":\n      \"shadow-[0px_1px_0px_0px_rgba(255,255,255,0.48)_inset,_1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_-1px_0px_0px_0px_rgba(255,255,255,0.20)_inset,_0px_-1.5px_0px_0px_rgba(0,0,0,0.25)_inset]\",\n    \"button-primary-success-inset\":\n      \"shadow-[-1px_0px_1px_0px_rgba(0,0,0,0.2)_inset,_1px_0px_1px_0px_rgba(0,0,0,0.2)_inset,_0px_2px_0px_0px_rgba(0,0,0,0.6)_inset]\",\n    \"border-inset\": \"shadow-[0px_0px_0px_1px_rgba(0,0,0,0.08)_inset]\",\n  };\n\n  return shadowMap[shadow] || \"\";\n};\n\n// Utility function to handle responsive spacing\nconst getResponsivePaddingClasses = (\n  padding?: ResponsiveSpacing,\n  prefix: string = \"p\"\n): string => {\n  if (!padding) return \"\";\n\n  if (typeof padding === \"string\") {\n    const spaceValue = getSpaceClass(padding);\n    return spaceValue ? `${prefix}-${spaceValue}` : \"\";\n  }\n\n  // Handle responsive object\n  const classes: string[] = [];\n  Object.entries(padding).forEach(([breakpoint, value]) => {\n    const spaceValue = getSpaceClass(value);\n    if (spaceValue) {\n      const breakpointPrefix = breakpoint === \"xs\" ? \"\" : `${breakpoint}:`;\n      classes.push(`${breakpointPrefix}${prefix}-${spaceValue}`);\n    }\n  });\n\n  return classes.join(\" \");\n};\n\n// Utility function to get individual border width classes\nconst getIndividualBorderWidthClass = (\n  width: BorderWidthScale,\n  side: string\n): string => {\n  const widthMap: Record<BorderWidthScale, string> = {\n    \"0\": \"0\",\n    \"0165\": \"[0.66px]\",\n    \"025\": \"\",\n    \"050\": \"2\",\n    \"100\": \"4\",\n  };\n\n  const widthValue = widthMap[width];\n  return widthValue ? `border-${side}-${widthValue}` : `border-${side}`;\n};\n\n// Utility function to get individual border radius classes\nconst getIndividualBorderRadiusClass = (\n  radius: BorderRadiusAliasOrScale,\n  corner: string\n): string => {\n  const radiusMap: Record<BorderRadiusAliasOrScale, string> = {\n    \"0\": \"none\",\n    \"050\": \"sm\",\n    \"100\": \"\",\n    \"150\": \"md\",\n    \"200\": \"lg\",\n    \"300\": \"xl\",\n    \"400\": \"2xl\",\n    \"500\": \"3xl\",\n    \"750\": \"[30px]\",\n    full: \"full\",\n  };\n\n  const radiusValue = radiusMap[radius];\n  return radiusValue ? `rounded-${corner}-${radiusValue}` : `rounded-${corner}`;\n};\n\n// Create Polaris-specific box variants using CVA\nconst polarisBoxVariants = cva(\"\", {\n  variants: {\n    // Base styling variants can be added here if needed\n    visuallyHidden: {\n      true: \"sr-only\",\n      false: \"\",\n    },\n    printHidden: {\n      true: \"print:hidden\",\n      false: \"\",\n    },\n  },\n  defaultVariants: {\n    visuallyHidden: false,\n    printHidden: false,\n  },\n});\n\nexport const Box = React.forwardRef<any, EnhancedBoxProps>(\n  (\n    {\n      children,\n      as = \"div\",\n      background,\n      borderColor,\n      borderStyle,\n      borderRadius,\n      borderEndStartRadius,\n      borderEndEndRadius,\n      borderStartStartRadius,\n      borderStartEndRadius,\n      borderWidth,\n      borderBlockStartWidth,\n      borderBlockEndWidth,\n      borderInlineStartWidth,\n      borderInlineEndWidth,\n      color,\n      id,\n      minHeight,\n      minWidth,\n      maxWidth,\n      overflowX,\n      overflowY,\n      padding,\n      paddingBlock,\n      paddingBlockStart,\n      paddingBlockEnd,\n      paddingInline,\n      paddingInlineStart,\n      paddingInlineEnd,\n      role,\n      shadow,\n      tabIndex,\n      width,\n      position,\n      insetBlockStart,\n      insetBlockEnd,\n      insetInlineStart,\n      insetInlineEnd,\n      opacity,\n      outlineColor,\n      outlineStyle,\n      outlineWidth,\n      printHidden = false,\n      visuallyHidden = false,\n      zIndex,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Component = as;\n\n    // Build className using our utility functions and CVA\n    const boxClassName = cn(\n      polarisBoxVariants({\n        visuallyHidden,\n        printHidden,\n      }),\n      // Background\n      getBackgroundClass(background),\n      // Border\n      getBorderColorClass(borderColor),\n      borderStyle === \"dashed\" ? \"border-dashed\" : \"border-solid\",\n      getBorderRadiusClass(borderRadius),\n      getBorderWidthClass(borderWidth),\n      // Individual border widths\n      borderBlockStartWidth &&\n        getIndividualBorderWidthClass(borderBlockStartWidth, \"t\"),\n      borderBlockEndWidth &&\n        getIndividualBorderWidthClass(borderBlockEndWidth, \"b\"),\n      borderInlineStartWidth &&\n        getIndividualBorderWidthClass(borderInlineStartWidth, \"l\"),\n      borderInlineEndWidth &&\n        getIndividualBorderWidthClass(borderInlineEndWidth, \"r\"),\n      // Individual border radius\n      borderEndStartRadius &&\n        getIndividualBorderRadiusClass(borderEndStartRadius, \"bl\"),\n      borderEndEndRadius &&\n        getIndividualBorderRadiusClass(borderEndEndRadius, \"br\"),\n      borderStartStartRadius &&\n        getIndividualBorderRadiusClass(borderStartStartRadius, \"tl\"),\n      borderStartEndRadius &&\n        getIndividualBorderRadiusClass(borderStartEndRadius, \"tr\"),\n      // Text color\n      getTextColorClass(color),\n      // Overflow\n      overflowX && `overflow-x-${overflowX}`,\n      overflowY && `overflow-y-${overflowY}`,\n      // Padding\n      getResponsivePaddingClasses(padding, \"p\"),\n      getResponsivePaddingClasses(paddingBlock, \"py\"),\n      getResponsivePaddingClasses(paddingBlockStart, \"pt\"),\n      getResponsivePaddingClasses(paddingBlockEnd, \"pb\"),\n      getResponsivePaddingClasses(paddingInline, \"px\"),\n      getResponsivePaddingClasses(paddingInlineStart, \"pl\"),\n      getResponsivePaddingClasses(paddingInlineEnd, \"pr\"),\n      // Shadow\n      getShadowClass(shadow),\n      // Position\n      position && `${position}`,\n      // Inset (positioning)\n      getResponsivePaddingClasses(insetBlockStart, \"top\"),\n      getResponsivePaddingClasses(insetBlockEnd, \"bottom\"),\n      getResponsivePaddingClasses(insetInlineStart, \"left\"),\n      getResponsivePaddingClasses(insetInlineEnd, \"right\"),\n      // Outline\n      outlineColor &&\n        getBorderColorClass(outlineColor).replace(\"border-\", \"outline-\"),\n      outlineStyle === \"dashed\"\n        ? \"outline-dashed\"\n        : outlineStyle === \"solid\"\n        ? \"outline-solid\"\n        : \"\",\n      outlineWidth &&\n        getBorderWidthClass(outlineWidth).replace(\"border-\", \"outline-\"),\n      className\n    );\n\n    // Build style object for properties that can't be handled with Tailwind classes\n    const style: React.CSSProperties = {\n      ...(minHeight && { minHeight }),\n      ...(minWidth && { minWidth }),\n      ...(maxWidth && { maxWidth }),\n      ...(width && { width }),\n      ...(opacity && { opacity }),\n      ...(zIndex && { zIndex }),\n    };\n\n    return (\n      <Component\n        ref={ref}\n        className={boxClassName}\n        style={Object.keys(style).length > 0 ? style : undefined}\n        id={id}\n        role={role}\n        tabIndex={tabIndex}\n        {...props}\n      >\n        {children}\n      </Component>\n    );\n  }\n);\n\nBox.displayName = \"Box\";\n\n// Export variants for convenience\nexport { polarisBoxVariants };\nexport { polarisBoxVariants as boxVariants };\n","/**\n * Enhanced Text component that combines Polaris API compatibility with shadcn/ui functionality\n *\n * This component provides 100% API compatibility with Shopify's Polaris Text component\n * while being built on shadcn/ui foundation with Tailwind CSS for maximum flexibility.\n */\n\nimport * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"../../lib/utils\";\n\n// Type definitions following Polaris Text component API\nexport type TextVariant =\n  | \"headingXs\"\n  | \"headingSm\"\n  | \"headingMd\"\n  | \"headingLg\"\n  | \"headingXl\"\n  | \"heading2xl\"\n  | \"heading3xl\"\n  | \"bodyXs\"\n  | \"bodySm\"\n  | \"bodyMd\"\n  | \"bodyLg\";\n\nexport type TextAlignment = \"start\" | \"center\" | \"end\" | \"justify\";\n\nexport type TextTone =\n  | \"base\"\n  | \"disabled\"\n  | \"inherit\"\n  | \"success\"\n  | \"critical\"\n  | \"caution\"\n  | \"subdued\"\n  | \"text-inverse\"\n  | \"text-inverse-secondary\"\n  | \"magic\"\n  | \"magic-subdued\";\n\nexport type TextFontWeight = \"regular\" | \"medium\" | \"semibold\" | \"bold\";\n\nexport type TextElement =\n  | \"dt\"\n  | \"dd\"\n  | \"h1\"\n  | \"h2\"\n  | \"h3\"\n  | \"h4\"\n  | \"h5\"\n  | \"h6\"\n  | \"p\"\n  | \"span\"\n  | \"strong\"\n  | \"legend\";\n\n// Text variants using cva - matches Polaris design tokens\nconst textVariants = cva(\"\", {\n  variants: {\n    variant: {\n      // Heading variants with responsive sizing (font weights handled separately)\n      heading3xl: \"text-4xl leading-tight sm:text-5xl sm:leading-tight\",\n      heading2xl: \"text-3xl leading-tight sm:text-4xl sm:leading-tight\",\n      headingXl: \"text-2xl leading-tight sm:text-3xl sm:leading-tight\",\n      headingLg: \"text-xl leading-normal sm:text-2xl sm:leading-normal\",\n      headingMd: \"text-sm leading-normal\",\n      headingSm: \"text-xs leading-normal\",\n      headingXs: \"text-xs leading-tight\",\n      // Body variants (font weights handled separately)\n      bodyLg: \"text-sm leading-normal\",\n      bodyMd: \"text-xs leading-normal\",\n      bodySm: \"text-xs leading-tight\",\n      bodyXs: \"text-xs leading-tight\",\n    },\n    alignment: {\n      start: \"text-left\",\n      center: \"text-center\",\n      end: \"text-right\",\n      justify: \"text-justify\",\n    },\n    tone: {\n      base: \"text-gray-900\",\n      disabled: \"text-gray-400\",\n      inherit: \"text-inherit\",\n      success: \"text-green-600\",\n      critical: \"text-red-600\",\n      caution: \"text-yellow-600\",\n      subdued: \"text-gray-600\",\n      \"text-inverse\": \"text-white\",\n      \"text-inverse-secondary\": \"text-gray-200\",\n      magic: \"text-purple-600\",\n      \"magic-subdued\": \"text-purple-400\",\n    },\n    fontWeight: {\n      regular: \"font-normal\",\n      medium: \"font-medium\",\n      semibold: \"font-semibold\",\n      bold: \"font-bold\",\n    },\n    breakWord: {\n      true: \"break-words\",\n      false: \"\",\n    },\n    truncate: {\n      true: \"truncate\",\n      false: \"\",\n    },\n    numeric: {\n      true: \"font-mono tabular-nums\",\n      false: \"\",\n    },\n    visuallyHidden: {\n      true: \"sr-only\",\n      false: \"\",\n    },\n    textDecorationLine: {\n      \"line-through\": \"line-through\",\n      none: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"bodyMd\",\n    alignment: \"start\",\n    tone: \"base\",\n    fontWeight: \"regular\",\n    breakWord: false,\n    truncate: false,\n    numeric: false,\n    visuallyHidden: false,\n    textDecorationLine: \"none\",\n  },\n});\n\n// Polaris Text Props interface - matches Shopify Polaris Text component exactly\nexport interface PolarisTextProps {\n  /** Text to display */\n  children?: React.ReactNode;\n  /** The element type */\n  as?: TextElement;\n  /** Adjust horizontal alignment of text */\n  alignment?: TextAlignment;\n  /** Prevent text from overflowing */\n  breakWord?: boolean;\n  /** Adjust tone of text */\n  tone?: TextTone;\n  /** Adjust weight of text */\n  fontWeight?: TextFontWeight;\n  /** HTML id attribute */\n  id?: string;\n  /** Use a numeric font variant with monospace appearance */\n  numeric?: boolean;\n  /** Truncate text overflow with ellipsis */\n  truncate?: boolean;\n  /** Typographic style of text */\n  variant?: TextVariant;\n  /** Visually hide the text */\n  visuallyHidden?: boolean;\n  /** Add a line-through to the text */\n  textDecorationLine?: \"line-through\";\n}\n\n// Enhanced Text interface that extends Polaris with additional functionality\nexport interface EnhancedTextProps extends PolarisTextProps {\n  /** Additional CSS class name */\n  className?: string;\n}\n\nexport type TextProps = EnhancedTextProps & VariantProps<typeof textVariants>;\n\nconst Text = React.forwardRef<any, TextProps>(\n  (\n    {\n      children,\n      as = \"span\",\n      alignment,\n      breakWord = false,\n      tone,\n      fontWeight,\n      id,\n      numeric = false,\n      truncate = false,\n      variant = \"bodyMd\",\n      visuallyHidden = false,\n      textDecorationLine,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Component = as;\n\n    // Determine the effective font weight\n    const getEffectiveFontWeight = (): TextFontWeight => {\n      if (fontWeight) return fontWeight;\n\n      // Default font weights for variants when not explicitly set\n      switch (variant) {\n        case \"heading3xl\":\n        case \"heading2xl\":\n        case \"headingXl\":\n          return \"bold\";\n        case \"headingLg\":\n        case \"headingMd\":\n        case \"headingSm\":\n        case \"headingXs\":\n          return \"semibold\";\n        default:\n          return \"regular\";\n      }\n    };\n\n    return (\n      <Component\n        ref={ref}\n        id={id}\n        className={cn(\n          textVariants({\n            variant,\n            alignment,\n            tone,\n            fontWeight: getEffectiveFontWeight(),\n            breakWord,\n            truncate,\n            numeric,\n            visuallyHidden,\n            textDecorationLine: textDecorationLine ? \"line-through\" : \"none\",\n          }),\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Component>\n    );\n  }\n);\n\nText.displayName = \"Text\";\n\nexport { Text, textVariants };\n\n// Backward compatibility aliases\nexport type PolarisTextVariant = TextVariant;\nexport type PolarisTextAlignment = TextAlignment;\nexport type PolarisTextTone = TextTone;\nexport type PolarisTextFontWeight = TextFontWeight;\nexport type PolarisTextElement = TextElement;\n","/**\n * Enhanced TextField component that combines Polaris API compatibility with shadcn/ui functionality\n *\n * This component provides 100% API compatibility with Shopify's Polaris TextField component\n * while being built on shadcn/ui foundation with Tailwind CSS for maximum flexibility.\n */\n\nimport * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { XCircleIcon } from \"@shopify/polaris-icons\";\nimport { cn } from \"../../lib/utils\";\n\n// Type definitions following Polaris TextField component API\nexport type TextFieldType =\n  | \"text\"\n  | \"email\"\n  | \"number\"\n  | \"integer\"\n  | \"password\"\n  | \"search\"\n  | \"tel\"\n  | \"url\"\n  | \"date\"\n  | \"datetime-local\"\n  | \"month\"\n  | \"time\"\n  | \"week\"\n  | \"currency\";\n\nexport type TextFieldAlignment = \"left\" | \"center\" | \"right\";\n\nexport type TextFieldInputMode =\n  | \"none\"\n  | \"text\"\n  | \"decimal\"\n  | \"numeric\"\n  | \"tel\"\n  | \"search\"\n  | \"email\"\n  | \"url\";\n\nexport type TextFieldSize = \"slim\" | \"medium\";\n\nexport type TextFieldVariant = \"inherit\" | \"borderless\";\n\nexport type TextFieldTone = \"magic\";\n\n// Error type (can be string, boolean, or React node)\nexport type TextFieldError = string | boolean | React.ReactNode;\n\n// Selection suggestion interface\ninterface SelectSuggestion {\n  suggestion?: string;\n}\n\n// Select text on focus interface\ninterface SelectTextOnFocus {\n  selectTextOnFocus?: true;\n}\n\n// Readonly interface\ninterface Readonly {\n  readonly?: true;\n}\n\n// Disabled interface\ninterface Disabled {\n  disabled?: true;\n}\n\n// Interactive interface\ninterface Interactive {\n  onChange(value: string, id: string): void;\n}\n\n// Non-mutually exclusive props interface\ninterface NonMutuallyExclusiveProps {\n  /** Text to display before value */\n  prefix?: React.ReactNode;\n  /** Text to display after value */\n  suffix?: React.ReactNode;\n  /** Content to vertically display above the input value */\n  verticalContent?: React.ReactNode;\n  /** Hint text to display */\n  placeholder?: string;\n  /** Initial value for the input */\n  value?: string;\n  /** Additional hint text to display */\n  helpText?: React.ReactNode;\n  /** Label for the input */\n  label: React.ReactNode;\n  /** Adds an action to the label */\n  labelAction?: {\n    content: React.ReactNode;\n    onAction(): void;\n  };\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** Show a clear text button in the input */\n  clearButton?: boolean;\n  /** Indicates whether or not the entire value should be selected on focus */\n  selectTextOnFocus?: boolean;\n  /** An inline autocomplete suggestion containing the input value */\n  suggestion?: string;\n  /** Disable editing of the input */\n  readOnly?: boolean;\n  /** Automatically focus the input */\n  autoFocus?: boolean;\n  /** Force the focus state on the input */\n  focused?: boolean;\n  /** Allow for multiple lines of input */\n  multiline?: boolean | number;\n  /** Error to display beneath the label */\n  error?: TextFieldError;\n  /** An element connected to the right of the input */\n  connectedRight?: React.ReactNode;\n  /** An element connected to the left of the input */\n  connectedLeft?: React.ReactNode;\n  /** Determine type of input */\n  type?: TextFieldType;\n  /** Name of the input */\n  name?: string;\n  /** ID for the input */\n  id?: string;\n  /** Defines a specific role attribute for the input */\n  role?: string;\n  /** Limit increment value for numeric and date-time inputs */\n  step?: number;\n  /** Increment value for numeric and date-time inputs when using Page Up or Page Down */\n  largeStep?: number;\n  /** Enable automatic completion by the browser */\n  autoComplete: string;\n  /** Mimics the behavior of the native HTML attribute, limiting the maximum value */\n  max?: number | string;\n  /** Maximum character length for an input */\n  maxLength?: number;\n  /** Maximum height of the input element. Only applies when multiline is true */\n  maxHeight?: number | string;\n  /** Mimics the behavior of the native HTML attribute, limiting the minimum value */\n  min?: number | string;\n  /** Minimum character length for an input */\n  minLength?: number;\n  /** A regular expression to check the value against */\n  pattern?: string;\n  /** Choose the keyboard that should be used on mobile devices */\n  inputMode?: TextFieldInputMode;\n  /** Indicate whether value should have spelling checked */\n  spellCheck?: boolean;\n  /** Indicates the id of a component owned by the input */\n  ariaOwns?: string;\n  /** Indicates whether or not a Popover is displayed */\n  ariaExpanded?: boolean;\n  /** Indicates the id of a component controlled by the input */\n  ariaControls?: string;\n  /** Indicates the id of a related component's visually focused element to the input */\n  ariaActiveDescendant?: string;\n  /** Indicates what kind of user input completion suggestions are provided */\n  ariaAutocomplete?: string;\n  /** Indicates whether or not the character count should be displayed */\n  showCharacterCount?: boolean;\n  /** Determines the alignment of the text in the input */\n  align?: TextFieldAlignment;\n  /** Visual required indicator, adds an asterisk to label */\n  requiredIndicator?: boolean;\n  /** Indicates whether or not a monospaced font should be used */\n  monospaced?: boolean;\n  /** Visual styling options for the TextField */\n  variant?: TextFieldVariant;\n  /** Changes the size of the input, giving it more or less padding */\n  size?: TextFieldSize;\n  /** Indicates the tone of the text field */\n  tone?: TextFieldTone;\n  /** Whether the TextField will grow as the text within the input changes */\n  autoSize?: boolean;\n  /** Indicates the loading state */\n  loading?: boolean;\n  /** Callback fired when clear button is clicked */\n  onClearButtonClick?(id: string): void;\n  /** Callback fired when value is changed */\n  onChange?(value: string, id: string): void;\n  /** When provided, callback fired instead of onChange when value is changed via the number step control */\n  onSpinnerChange?(value: string, id: string): void;\n  /** Callback fired when input is focused */\n  onFocus?: (event?: React.FocusEvent) => void;\n  /** Callback fired when input is blurred */\n  onBlur?(event?: React.FocusEvent): void;\n}\n\n// Enhanced props interface that includes className for custom styling\nexport interface EnhancedTextFieldProps extends NonMutuallyExclusiveProps {\n  /** Additional CSS class name for custom styling */\n  className?: string;\n}\n\n// Mutually exclusive selection props\nexport type MutuallyExclusiveSelectionProps =\n  | SelectSuggestion\n  | SelectTextOnFocus;\n\n// Mutually exclusive interaction props\nexport type MutuallyExclusiveInteractionProps =\n  | Interactive\n  | Readonly\n  | Disabled;\n\n// Polaris TextField Props interface - matches Shopify Polaris TextField component exactly\nexport interface PolarisTextFieldProps extends NonMutuallyExclusiveProps {\n  // Interactive props\n  onChange?(value: string, id: string): void;\n  // Readonly state\n  readonly?: boolean;\n  // Disabled state\n  disabled?: boolean;\n  // Selection props\n  selectTextOnFocus?: boolean;\n  suggestion?: string;\n}\n\n// Combined props interface\nexport interface TextFieldProps extends EnhancedTextFieldProps {\n  // Interactive props\n  onChange?(value: string, id: string): void;\n  // Readonly state\n  readonly?: boolean;\n  // Disabled state\n  disabled?: boolean;\n  // Selection props\n  selectTextOnFocus?: boolean;\n  suggestion?: string;\n}\n\n// Create Polaris-specific text field variants using CVA\nconst polarisTextFieldVariants = cva(\n  // Base styles matching Polaris TextField exactly\n  [\n    // Layout and positioning\n    \"relative flex items-center w-full\",\n    // Typography - Inter font family with Polaris-specific sizing\n    \"font-sans text-[13px] leading-[20px] font-normal\",\n    // Colors matching Polaris design tokens\n    \"text-[rgb(48,48,48)] placeholder:text-[rgb(97,97,97)]\",\n    // Background and borders\n    \"bg-white border border-[rgb(138,143,148)] border-t-[rgb(137,143,148)]\",\n    \"rounded-lg\",\n    // Padding matching Polaris exactly: 6px 12px\n    \"px-3 py-[6px]\",\n    // Height matching Polaris exactly: 32px height and min-height\n    \"h-8 min-h-8\",\n    // Flex behavior\n    \"flex-grow flex-shrink\",\n    // Appearance and interaction\n    \"appearance-none outline-hidden cursor-text\",\n    // Focus styles matching Polaris\n    \"focus-visible:outline-hidden focus-visible:border-[rgb(0,123,255)] focus-visible:border-2\",\n    \"focus-visible:bg-white focus-visible:ring-3 focus-visible:ring-[rgb(0,123,255)] focus-visible:ring-offset-1\",\n    // Hover styles\n    \"hover:border-[rgb(97,97,97)] hover:bg-[rgb(247,247,247)]\",\n    // Disabled styles\n    \"disabled:cursor-default disabled:text-[rgb(181,181,181)] disabled:bg-[rgb(247,247,247)] disabled:border-transparent\",\n    // File input styles\n    \"file:border-0 file:bg-transparent file:text-[13px] file:font-normal\",\n  ],\n  {\n    variants: {\n      size: {\n        // Slim size: 28px height (matching Polaris slim variant)\n        slim: \"h-7 min-h-7 py-[2px] text-[13px] leading-[20px]\",\n        // Medium size: 32px height (default Polaris size)\n        medium: \"h-8 min-h-8 py-[6px] text-[13px] leading-[20px]\",\n      },\n      variant: {\n        inherit: \"\",\n        // Borderless variant matching Polaris\n        borderless: [\n          \"border-0 shadow-none min-h-8\",\n          \"focus-visible:ring-0 focus-visible:ring-offset-0 focus-visible:border-0\",\n          \"hover:border-0 hover:bg-transparent\",\n        ],\n      },\n      align: {\n        left: \"text-left\",\n        center: \"text-center\",\n        right: \"text-right\",\n      },\n      tone: {\n        // Magic tone matching Polaris magic styling\n        magic: [\n          \"text-[rgb(128,81,255)] bg-[rgb(248,247,255)]\",\n          \"border-[rgb(153,124,255)]\",\n          \"focus-visible:border-[rgb(0,123,255)] focus-visible:text-[rgb(48,48,48)]\",\n          \"hover:bg-[rgb(243,240,255)] hover:border-[rgb(138,129,255)]\",\n        ],\n      },\n      error: {\n        true: [\n          \"border-[rgb(253,75,146)] bg-[rgb(255,247,250)]\",\n          \"focus-visible:border-[rgb(0,123,255)] focus-visible:bg-white\",\n          \"hover:border-[rgb(253,75,146)] hover:bg-[rgb(255,247,250)]\",\n        ],\n        false: \"\",\n      },\n      monospaced: {\n        // Monospaced font matching Polaris\n        true: \"font-mono\",\n        false: \"font-sans\",\n      },\n      multiline: {\n        // Multiline (textarea) styling\n        true: [\n          \"min-h-[80px] resize-y overflow-auto\",\n          \"items-start py-[6px]\",\n          \"leading-[20px]\",\n        ],\n        false: \"items-center\",\n      },\n    },\n    defaultVariants: {\n      size: \"medium\",\n      variant: \"inherit\",\n      align: \"left\",\n      error: false,\n      monospaced: false,\n      multiline: false,\n    },\n  }\n);\n\n// Helper function to generate unique IDs\nconst useId = () => {\n  const [id] = React.useState(() =>\n    Math.random().toString(36).substring(2, 11)\n  );\n  return id;\n};\n\n// Helper function to get rows for multiline\nconst getRows = (multiline?: boolean | number) => {\n  if (!multiline) return undefined;\n  return typeof multiline === \"number\" ? multiline : 3;\n};\n\n// Helper function to normalize aria-multiline\nconst normalizeAriaMultiline = (multiline?: boolean | number) => {\n  if (!multiline) return undefined;\n  return Boolean(multiline) || (typeof multiline === \"number\" && multiline > 0)\n    ? { \"aria-multiline\": true }\n    : undefined;\n};\n\n// Helper function to generate label ID\nconst labelID = (id: string) => `${id}Label`;\n\n// Helper function to generate help text ID\nconst helpTextID = (id: string) => `${id}HelpText`;\n\nexport const TextField = React.forwardRef<\n  HTMLInputElement | HTMLTextAreaElement,\n  TextFieldProps\n>(\n  (\n    {\n      prefix,\n      suffix,\n      verticalContent,\n      placeholder,\n      value = \"\",\n      helpText,\n      label,\n      labelAction,\n      labelHidden = false,\n      disabled = false,\n      clearButton = false,\n      readOnly = false,\n      autoFocus = false,\n      focused,\n      multiline = false,\n      error,\n      connectedRight,\n      connectedLeft,\n      type = \"text\",\n      name,\n      id: idProp,\n      role,\n      step,\n      largeStep,\n      autoComplete,\n      max,\n      maxLength,\n      maxHeight,\n      min,\n      minLength,\n      pattern,\n      inputMode,\n      spellCheck,\n      ariaOwns,\n      ariaControls,\n      ariaExpanded,\n      ariaActiveDescendant,\n      ariaAutocomplete,\n      showCharacterCount = false,\n      align = \"left\",\n      requiredIndicator = false,\n      monospaced = false,\n      selectTextOnFocus = false,\n      suggestion,\n      variant = \"inherit\",\n      size = \"medium\",\n      tone,\n      autoSize = false,\n      loading = false,\n      onClearButtonClick,\n      onChange,\n      onSpinnerChange,\n      onFocus,\n      onBlur,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    // Generate unique ID if not provided\n    const uniqId = useId();\n    const id = idProp ?? uniqId;\n\n    // State management\n    const [focus, setFocus] = React.useState(Boolean(focused));\n\n    // Refs\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const textAreaRef = React.useRef<HTMLTextAreaElement>(null);\n    const containerRef = React.useRef<HTMLDivElement>(null);\n\n    // Get the appropriate input ref based on multiline\n    const getInputRef = React.useCallback(() => {\n      return multiline ? textAreaRef.current : inputRef.current;\n    }, [multiline]);\n\n    // Handle focus effect\n    React.useEffect(() => {\n      const input = getInputRef();\n      if (!input || focused === undefined) return;\n      focused ? input.focus() : input.blur();\n    }, [focused, getInputRef]);\n\n    // Handle suggestion selection\n    React.useEffect(() => {\n      const input = inputRef.current;\n      const isSupportedInputType =\n        type === \"text\" ||\n        type === \"tel\" ||\n        type === \"search\" ||\n        type === \"url\" ||\n        type === \"password\";\n\n      if (!input || !isSupportedInputType || !suggestion) {\n        return;\n      }\n\n      input.setSelectionRange(value.length, suggestion.length);\n    }, [focus, value, type, suggestion]);\n\n    // Normalize values\n    const normalizedValue = suggestion ? suggestion : value;\n    const inputType = type === \"currency\" ? \"text\" : type;\n\n    // Build className using our Polaris variants\n    const inputClassName = cn(\n      polarisTextFieldVariants({\n        size,\n        variant,\n        align,\n        tone,\n        error: Boolean(error),\n        monospaced,\n        multiline: Boolean(multiline),\n      }),\n      autoSize && \"w-auto min-w-0\",\n      className\n    );\n\n    // Handle change events\n    const handleChange = React.useCallback(\n      (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        if (onChange) {\n          onChange(event.currentTarget.value, id);\n        }\n      },\n      [onChange, id]\n    );\n\n    // Handle focus events\n    const handleFocus = React.useCallback(\n      (event: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setFocus(true);\n\n        if (selectTextOnFocus && !suggestion) {\n          const input = getInputRef();\n          input?.select();\n        }\n\n        if (onFocus) {\n          onFocus(event);\n        }\n      },\n      [selectTextOnFocus, suggestion, getInputRef, onFocus]\n    );\n\n    // Handle blur events\n    const handleBlur = React.useCallback(\n      (event: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setFocus(false);\n\n        // Return early if new focus target is inside the TextField component\n        if (containerRef.current?.contains(event?.relatedTarget as Node)) {\n          return;\n        }\n\n        if (onBlur) {\n          onBlur(event);\n        }\n      },\n      [onBlur]\n    );\n\n    // Handle clear button click\n    const handleClearButtonClick = React.useCallback(() => {\n      if (onClearButtonClick) {\n        onClearButtonClick(id);\n      }\n    }, [onClearButtonClick, id]);\n\n    // Build describedBy array for accessibility\n    const describedBy: string[] = [];\n    if (error) {\n      describedBy.push(`${id}Error`);\n    }\n    if (helpText) {\n      describedBy.push(helpTextID(id));\n    }\n    if (showCharacterCount) {\n      describedBy.push(`${id}-CharacterCounter`);\n    }\n\n    // Build labelledBy array for accessibility\n    const labelledBy: string[] = [];\n    if (prefix) {\n      labelledBy.push(`${id}-Prefix`);\n    }\n    if (suffix) {\n      labelledBy.push(`${id}-Suffix`);\n    }\n    if (verticalContent) {\n      labelledBy.push(`${id}-VerticalContent`);\n    }\n    labelledBy.unshift(labelID(id));\n\n    // Character count markup\n    let characterCountMarkup = null;\n    if (showCharacterCount) {\n      const characterCount = normalizedValue.length;\n      const characterCountText = !maxLength\n        ? characterCount\n        : `${characterCount}/${maxLength}`;\n\n      characterCountMarkup = (\n        <div\n          id={`${id}-CharacterCounter`}\n          className=\"text-xs text-muted-foreground mt-1\"\n        >\n          {characterCountText}\n        </div>\n      );\n    }\n\n    // Clear button markup\n    const clearButtonVisible = normalizedValue !== \"\";\n    const clearButtonMarkup =\n      clearButton && clearButtonVisible ? (\n        <button\n          type=\"button\"\n          className=\"absolute right-2 top-1/2 -translate-y-1/2 p-1 text-muted-foreground hover:text-foreground focus:outline-hidden focus:ring-3 focus:ring-ring focus:ring-offset-2 rounded-sm\"\n          onClick={handleClearButtonClick}\n          tabIndex={-1}\n          aria-label=\"Clear\"\n        >\n          <XCircleIcon className=\"h-4 w-4\" />\n        </button>\n      ) : null;\n\n    // Prefix markup\n    const prefixMarkup = prefix ? (\n      <div\n        id={`${id}-Prefix`}\n        className=\"flex items-center px-3 text-sm text-muted-foreground border-r border-input bg-muted/50\"\n      >\n        {prefix}\n      </div>\n    ) : null;\n\n    // Suffix markup\n    const suffixMarkup = suffix ? (\n      <div\n        id={`${id}-Suffix`}\n        className=\"flex items-center px-3 text-sm text-muted-foreground border-l border-input bg-muted/50\"\n      >\n        {suffix}\n      </div>\n    ) : null;\n\n    // Loading markup\n    const loadingMarkup = loading ? (\n      <div className=\"absolute right-2 top-1/2 -translate-y-1/2\">\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-foreground\"></div>\n      </div>\n    ) : null;\n\n    // Label markup\n    const labelMarkup = !labelHidden ? (\n      <label\n        id={labelID(id)}\n        htmlFor={id}\n        className={cn(\n          \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n          requiredIndicator &&\n            \"after:content-['*'] after:ml-1 after:text-destructive\"\n        )}\n      >\n        {label}\n        {labelAction && (\n          <button\n            type=\"button\"\n            onClick={labelAction.onAction}\n            className=\"ml-2 text-xs text-primary hover:underline focus:outline-hidden focus:underline\"\n          >\n            {labelAction.content}\n          </button>\n        )}\n      </label>\n    ) : null;\n\n    // Help text markup\n    const helpTextMarkup = helpText ? (\n      <div id={helpTextID(id)} className=\"text-xs text-muted-foreground mt-1\">\n        {helpText}\n      </div>\n    ) : null;\n\n    // Error markup\n    const errorMarkup =\n      error && typeof error !== \"boolean\" ? (\n        <div\n          id={`${id}Error`}\n          className=\"text-xs text-destructive mt-1\"\n          role=\"alert\"\n        >\n          {error}\n        </div>\n      ) : null;\n\n    // Vertical content markup\n    const verticalContentMarkup = verticalContent ? (\n      <div\n        id={`${id}-VerticalContent`}\n        className=\"text-sm text-muted-foreground mb-2\"\n      >\n        {verticalContent}\n      </div>\n    ) : null;\n\n    // Style object for dynamic properties\n    const style: React.CSSProperties = {\n      ...(maxHeight && { maxHeight }),\n    };\n\n    // Create the input element with proper ref forwarding\n    const inputElement = React.createElement(multiline ? \"textarea\" : \"input\", {\n      ref: React.useCallback(\n        (element: HTMLInputElement | HTMLTextAreaElement | null) => {\n          // Assign to internal ref\n          if (multiline) {\n            (\n              textAreaRef as React.MutableRefObject<HTMLTextAreaElement | null>\n            ).current = element as HTMLTextAreaElement;\n          } else {\n            (\n              inputRef as React.MutableRefObject<HTMLInputElement | null>\n            ).current = element as HTMLInputElement;\n          }\n          // Forward to external ref\n          if (typeof ref === \"function\") {\n            ref(element);\n          } else if (ref) {\n            (\n              ref as React.MutableRefObject<\n                HTMLInputElement | HTMLTextAreaElement | null\n              >\n            ).current = element;\n          }\n        },\n        [multiline, ref]\n      ),\n      id,\n      name,\n      type: inputType,\n      value: normalizedValue,\n      placeholder,\n      disabled,\n      readOnly,\n      autoFocus,\n      role,\n      min,\n      max,\n      step,\n      minLength,\n      maxLength,\n      pattern,\n      inputMode,\n      spellCheck,\n      autoComplete,\n      rows: getRows(multiline),\n      size: autoSize ? 1 : undefined,\n      style: Object.keys(style).length > 0 ? style : undefined,\n      className: inputClassName,\n      \"aria-describedby\": describedBy.length\n        ? describedBy.join(\" \")\n        : undefined,\n      \"aria-labelledby\": labelledBy.join(\" \"),\n      \"aria-invalid\": Boolean(error),\n      \"aria-owns\": ariaOwns,\n      \"aria-activedescendant\": ariaActiveDescendant,\n      \"aria-autocomplete\": ariaAutocomplete,\n      \"aria-controls\": ariaControls,\n      \"aria-expanded\": ariaExpanded,\n      \"aria-required\": requiredIndicator,\n      ...normalizeAriaMultiline(multiline),\n      onChange: !suggestion ? handleChange : undefined,\n      onInput: suggestion ? handleChange : undefined,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      // Password manager disable attributes\n      \"data-1p-ignore\": autoComplete === \"off\" || undefined,\n      \"data-lpignore\": autoComplete === \"off\" || undefined,\n      \"data-form-type\": autoComplete === \"off\" ? \"other\" : undefined,\n      ...props,\n    });\n\n    // Connected fields wrapper\n    const connectedMarkup =\n      connectedLeft || connectedRight ? (\n        <div className=\"flex\">\n          {connectedLeft}\n          <div className=\"flex-1 relative\">\n            {verticalContentMarkup}\n            <div className=\"relative flex\">\n              {prefixMarkup}\n              {inputElement}\n              {suffixMarkup}\n              {clearButtonMarkup}\n              {loadingMarkup}\n            </div>\n          </div>\n          {connectedRight}\n        </div>\n      ) : (\n        <div className=\"relative\">\n          {verticalContentMarkup}\n          <div className=\"relative flex\">\n            {prefixMarkup}\n            {inputElement}\n            {suffixMarkup}\n            {clearButtonMarkup}\n            {loadingMarkup}\n          </div>\n        </div>\n      );\n\n    return (\n      <div ref={containerRef} className=\"space-y-2\">\n        {labelMarkup}\n        {connectedMarkup}\n        {errorMarkup}\n        {helpTextMarkup}\n        {characterCountMarkup}\n      </div>\n    );\n  }\n);\n\nTextField.displayName = \"TextField\";\n\n// Export variants for convenience\nexport { polarisTextFieldVariants };\nexport { polarisTextFieldVariants as textFieldVariants };\n"],"names":["setRef","ref","value","composeRefs","refs","node","hasCleanup","cleanups","cleanup","i","createSlot","ownerName","SlotClone","createSlotClone","Slot2","React","props","forwardedRef","children","slotProps","childrenArray","slottable","isSlottable","newElement","newChildren","child","jsx","Slot","childrenRef","getElementRef","props2","mergeProps","SLOTTABLE_IDENTIFIER","childProps","overrideProps","propName","slotPropValue","childPropValue","args","result","element","getter","_a","mayWarn","_b","r","t","f","o","clsx","falsyToString","cx","cva","base","config","_config_compoundVariants","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","key","getCompoundVariantClassNames","cvClass","cvClassName","compoundVariantOptions","SvgCheckIcon","SvgChevronDownIcon","SvgChevronUpIcon","SvgRefreshIcon","SvgXCircleIcon","CLASS_PART_SEPARATOR","createClassGroupUtils","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","className","classParts","getGroupRecursive","getGroupIdForArbitraryProperty","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","classGroupFromNextClassPart","classRest","validator","arbitraryPropertyRegex","arbitraryPropertyClassName","property","theme","prefix","getPrefixedClassGroupEntries","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","path","currentClassPartObject","pathPart","func","classGroupEntries","prefixedClassGroup","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","createParseClassName","separator","experimentalParseClassName","isSeparatorSingleCharacter","firstSeparatorCharacter","separatorLength","parseClassName","modifiers","bracketDepth","modifierStart","postfixModifierPosition","index","currentCharacter","baseClassNameWithImportantModifier","hasImportantModifier","baseClassName","maybePostfixModifierPosition","sortModifiers","sortedModifiers","unsortedModifiers","modifier","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","getClassGroupId","getConflictingClassGroupIds","classGroupsInConflict","classNames","originalClassName","variantModifier","modifierId","classId","conflictGroups","group","twJoin","argument","resolvedValue","string","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","isArbitraryNumber","isInteger","isPercent","isArbitraryValue","isTshirtSize","sizeLabels","isArbitrarySize","isNever","isArbitraryPosition","imageLabels","isArbitraryImage","isImage","isArbitraryShadow","isShadow","isAny","label","testValue","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","gradientColorStopPositions","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAutoAndArbitrary","getSpacingWithArbitrary","getLengthWithEmptyAndArbitrary","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumberAndArbitrary","twMerge","cn","inputs","polarisButtonVariants","getDisclosureIcon","disclosure","ChevronDownIcon","ChevronUpIcon","CheckIcon","Spinner","RefreshIcon","Button","size","textAlign","fullWidth","removeUnderline","icon","dataPrimaryLink","tone","id","url","external","target","download","submit","disabled","loading","pressed","accessibilityLabel","role","ariaControls","ariaExpanded","ariaDescribedBy","ariaChecked","onClick","onFocus","onBlur","onKeyPress","onKeyUp","onKeyDown","onMouseEnter","onTouchStart","onPointerDown","asChild","isLink","Component","isLoading","isDisabled","disclosureIcon","buttonClassName","commonProps","jsxs","polarisButtonGroupVariants","ButtonGroup","connectedTop","noWrap","buttonGroupClassName","getBackgroundClass","background","getBorderColorClass","getTextColorClass","color","getSpaceClass","getBorderRadiusClass","radius","getBorderWidthClass","width","getShadowClass","shadow","getResponsivePaddingClasses","spaceValue","classes","breakpoint","breakpointPrefix","getIndividualBorderWidthClass","side","widthValue","getIndividualBorderRadiusClass","corner","radiusValue","polarisBoxVariants","Box","as","borderStyle","borderEndStartRadius","borderEndEndRadius","borderStartStartRadius","borderStartEndRadius","borderBlockStartWidth","borderBlockEndWidth","borderInlineStartWidth","borderInlineEndWidth","minHeight","minWidth","maxWidth","overflowX","overflowY","paddingBlock","paddingBlockStart","paddingBlockEnd","paddingInline","paddingInlineStart","paddingInlineEnd","tabIndex","position","insetBlockStart","insetBlockEnd","insetInlineStart","insetInlineEnd","outlineColor","outlineStyle","outlineWidth","printHidden","visuallyHidden","zIndex","boxClassName","style","textVariants","Text","alignment","breakWord","fontWeight","numeric","truncate","textDecorationLine","getEffectiveFontWeight","polarisTextFieldVariants","useId","getRows","multiline","normalizeAriaMultiline","labelID","helpTextID","TextField","suffix","verticalContent","placeholder","helpText","labelAction","labelHidden","clearButton","readOnly","autoFocus","focused","error","connectedRight","connectedLeft","type","name","idProp","step","largeStep","autoComplete","max","maxLength","maxHeight","min","minLength","pattern","inputMode","spellCheck","ariaOwns","ariaActiveDescendant","ariaAutocomplete","showCharacterCount","align","requiredIndicator","monospaced","selectTextOnFocus","suggestion","autoSize","onClearButtonClick","onChange","onSpinnerChange","uniqId","focus","setFocus","inputRef","textAreaRef","containerRef","getInputRef","input","normalizedValue","inputType","inputClassName","handleChange","event","handleFocus","handleBlur","handleClearButtonClick","describedBy","labelledBy","characterCountMarkup","characterCount","characterCountText","clearButtonMarkup","XCircleIcon","prefixMarkup","suffixMarkup","loadingMarkup","labelMarkup","helpTextMarkup","errorMarkup","verticalContentMarkup","inputElement","connectedMarkup"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}